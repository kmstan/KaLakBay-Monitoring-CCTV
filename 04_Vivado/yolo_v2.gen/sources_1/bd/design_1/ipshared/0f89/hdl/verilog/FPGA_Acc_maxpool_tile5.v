// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module FPGA_Acc_maxpool_tile5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_r_address0,
        Input_r_ce0,
        Input_r_q0,
        Input1_address0,
        Input1_ce0,
        Input1_q0,
        Output_r_address0,
        Output_r_ce0,
        Output_r_we0,
        Output_r_d0,
        Output2_address0,
        Output2_ce0,
        Output2_we0,
        Output2_d0,
        Ksize,
        K_1,
        Kstride,
        TR_MIN,
        TC_MIN,
        enable
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] Input_r_address0;
output   Input_r_ce0;
input  [15:0] Input_r_q0;
output  [11:0] Input1_address0;
output   Input1_ce0;
input  [15:0] Input1_q0;
output  [9:0] Output_r_address0;
output   Output_r_ce0;
output   Output_r_we0;
output  [31:0] Output_r_d0;
output  [9:0] Output2_address0;
output   Output2_ce0;
output   Output2_we0;
output  [31:0] Output2_d0;
input  [7:0] Ksize;
input  [7:0] K_1;
input  [1:0] Kstride;
input  [7:0] TR_MIN;
input  [7:0] TC_MIN;
input  [0:0] enable;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] enable_read_read_fu_32_p2;
wire   [15:0] mul_ln336_fu_94_p2;
reg   [15:0] mul_ln336_reg_173;
wire    ap_CS_fsm_state2;
wire   [23:0] grp_fu_129_p2;
reg   [23:0] mul_ln336_1_reg_190;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire  signed [31:0] grp_fu_135_p2;
reg   [31:0] mul_ln336_2_reg_206;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln340_fu_112_p2;
reg   [0:0] icmp_ln340_reg_211;
wire   [0:0] cmp40_not_mid157_fu_117_p2;
reg   [0:0] cmp40_not_mid157_reg_216;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln342_fu_123_p2;
reg   [0:0] icmp_ln342_reg_221;
wire    grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_ap_start;
wire    grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_ap_done;
wire    grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_ap_idle;
wire    grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_ap_ready;
wire   [9:0] grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output_r_address0;
wire    grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output_r_ce0;
wire    grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output_r_we0;
wire   [31:0] grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output_r_d0;
wire   [9:0] grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output2_address0;
wire    grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output2_ce0;
wire    grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output2_we0;
wire   [31:0] grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output2_d0;
wire   [11:0] grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Input_r_address0;
wire    grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Input_r_ce0;
wire   [11:0] grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Input1_address0;
wire    grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Input1_ce0;
reg    grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_ap_start_reg;
wire    ap_CS_fsm_state11;
wire   [7:0] mul_ln336_fu_94_p0;
wire   [15:0] zext_ln336_fu_90_p1;
wire   [7:0] mul_ln336_fu_94_p1;
wire   [7:0] grp_fu_129_p0;
wire   [15:0] grp_fu_129_p1;
wire   [7:0] grp_fu_135_p0;
wire   [23:0] grp_fu_135_p1;
reg    ap_block_state11_on_subcall_done;
reg   [10:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire   [23:0] grp_fu_129_p00;
wire   [23:0] grp_fu_129_p10;
wire   [31:0] grp_fu_135_p00;
wire   [31:0] grp_fu_135_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_ap_start_reg = 1'b0;
end

FPGA_Acc_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4 grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_ap_start),
    .ap_done(grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_ap_done),
    .ap_idle(grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_ap_idle),
    .ap_ready(grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_ap_ready),
    .empty(Kstride),
    .zext_ln336(Kstride),
    .K_1(K_1),
    .mul_ln336_2(mul_ln336_2_reg_206),
    .mul_ln336_1(mul_ln336_1_reg_190),
    .cmp40_not_mid157(cmp40_not_mid157_reg_216),
    .Ksize(Ksize),
    .icmp_ln342_1(icmp_ln342_reg_221),
    .mul_ln336(mul_ln336_reg_173),
    .icmp_ln340(icmp_ln340_reg_211),
    .Output_r_address0(grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output_r_address0),
    .Output_r_ce0(grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output_r_ce0),
    .Output_r_we0(grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output_r_we0),
    .Output_r_d0(grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output_r_d0),
    .Output2_address0(grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output2_address0),
    .Output2_ce0(grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output2_ce0),
    .Output2_we0(grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output2_we0),
    .Output2_d0(grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output2_d0),
    .Input_r_address0(grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Input_r_address0),
    .Input_r_ce0(grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Input_r_ce0),
    .Input_r_q0(Input_r_q0),
    .Input1_address0(grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Input1_address0),
    .Input1_ce0(grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Input1_ce0),
    .Input1_q0(Input1_q0)
);

FPGA_Acc_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U501(
    .din0(mul_ln336_fu_94_p0),
    .din1(mul_ln336_fu_94_p1),
    .dout(mul_ln336_fu_94_p2)
);

FPGA_Acc_mul_mul_8ns_16ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_mul_8ns_16ns_24_4_1_U502(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_129_p0),
    .din1(grp_fu_129_p1),
    .ce(1'b1),
    .dout(grp_fu_129_p2)
);

FPGA_Acc_mul_mul_8ns_24ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 32 ))
mul_mul_8ns_24ns_32_4_1_U503(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_135_p0),
    .din1(grp_fu_135_p1),
    .ce(1'b1),
    .dout(grp_fu_135_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_ap_start_reg <= 1'b1;
        end else if ((grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_ap_ready == 1'b1)) begin
            grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        cmp40_not_mid157_reg_216 <= cmp40_not_mid157_fu_117_p2;
        icmp_ln342_reg_221 <= icmp_ln342_fu_123_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        icmp_ln340_reg_211 <= icmp_ln340_fu_112_p2;
        mul_ln336_2_reg_206 <= grp_fu_135_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mul_ln336_1_reg_190 <= grp_fu_129_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((enable == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mul_ln336_reg_173 <= mul_ln336_fu_94_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state11_on_subcall_done)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | ((1'b0 == ap_block_state11_on_subcall_done) & (1'b1 == ap_CS_fsm_state11)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state11_on_subcall_done) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((enable_read_read_fu_32_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((enable == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b0 == ap_block_state11_on_subcall_done) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Input1_address0 = grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Input1_address0;

assign Input1_ce0 = grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Input1_ce0;

assign Input_r_address0 = grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Input_r_address0;

assign Input_r_ce0 = grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Input_r_ce0;

assign Output2_address0 = grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output2_address0;

assign Output2_ce0 = grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output2_ce0;

assign Output2_d0 = grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output2_d0;

assign Output2_we0 = grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output2_we0;

assign Output_r_address0 = grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output_r_address0;

assign Output_r_ce0 = grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output_r_ce0;

assign Output_r_d0 = grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output_r_d0;

assign Output_r_we0 = grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_Output_r_we0;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state11_on_subcall_done = ((enable == 1'd1) & (grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_ap_done == 1'b0));
end

assign cmp40_not_mid157_fu_117_p2 = ((K_1 != 8'd0) ? 1'b1 : 1'b0);

assign enable_read_read_fu_32_p2 = enable;

assign grp_fu_129_p0 = grp_fu_129_p00;

assign grp_fu_129_p00 = TC_MIN;

assign grp_fu_129_p1 = grp_fu_129_p10;

assign grp_fu_129_p10 = mul_ln336_reg_173;

assign grp_fu_135_p0 = grp_fu_135_p00;

assign grp_fu_135_p00 = TR_MIN;

assign grp_fu_135_p1 = grp_fu_135_p10;

assign grp_fu_135_p10 = mul_ln336_1_reg_190;

assign grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_ap_start = grp_maxpool_tile5_Pipeline_VITIS_LOOP_336_1_VITIS_LOOP_340_3_VITIS_LOOP_342_4_fu_68_ap_start_reg;

assign icmp_ln340_fu_112_p2 = ((mul_ln336_reg_173 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln342_fu_123_p2 = ((Ksize == 8'd0) ? 1'b1 : 1'b0);

assign mul_ln336_fu_94_p0 = zext_ln336_fu_90_p1;

assign mul_ln336_fu_94_p1 = zext_ln336_fu_90_p1;

assign zext_ln336_fu_90_p1 = Ksize;

endmodule //FPGA_Acc_maxpool_tile5
