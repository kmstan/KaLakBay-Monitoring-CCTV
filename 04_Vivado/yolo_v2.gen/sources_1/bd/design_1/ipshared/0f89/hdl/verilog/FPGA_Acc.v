// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="FPGA_Acc_FPGA_Acc,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=5.200000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.295000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=269,HLS_SYN_DSP=0,HLS_SYN_FF=54469,HLS_SYN_LUT=61573,HLS_VERSION=2021_1}" *)

module FPGA_Acc (
        ap_clk,
        ap_rst_n,
        m_axi_DATA_BUS_AWVALID,
        m_axi_DATA_BUS_AWREADY,
        m_axi_DATA_BUS_AWADDR,
        m_axi_DATA_BUS_AWID,
        m_axi_DATA_BUS_AWLEN,
        m_axi_DATA_BUS_AWSIZE,
        m_axi_DATA_BUS_AWBURST,
        m_axi_DATA_BUS_AWLOCK,
        m_axi_DATA_BUS_AWCACHE,
        m_axi_DATA_BUS_AWPROT,
        m_axi_DATA_BUS_AWQOS,
        m_axi_DATA_BUS_AWREGION,
        m_axi_DATA_BUS_AWUSER,
        m_axi_DATA_BUS_WVALID,
        m_axi_DATA_BUS_WREADY,
        m_axi_DATA_BUS_WDATA,
        m_axi_DATA_BUS_WSTRB,
        m_axi_DATA_BUS_WLAST,
        m_axi_DATA_BUS_WID,
        m_axi_DATA_BUS_WUSER,
        m_axi_DATA_BUS_ARVALID,
        m_axi_DATA_BUS_ARREADY,
        m_axi_DATA_BUS_ARADDR,
        m_axi_DATA_BUS_ARID,
        m_axi_DATA_BUS_ARLEN,
        m_axi_DATA_BUS_ARSIZE,
        m_axi_DATA_BUS_ARBURST,
        m_axi_DATA_BUS_ARLOCK,
        m_axi_DATA_BUS_ARCACHE,
        m_axi_DATA_BUS_ARPROT,
        m_axi_DATA_BUS_ARQOS,
        m_axi_DATA_BUS_ARREGION,
        m_axi_DATA_BUS_ARUSER,
        m_axi_DATA_BUS_RVALID,
        m_axi_DATA_BUS_RREADY,
        m_axi_DATA_BUS_RDATA,
        m_axi_DATA_BUS_RLAST,
        m_axi_DATA_BUS_RID,
        m_axi_DATA_BUS_RUSER,
        m_axi_DATA_BUS_RRESP,
        m_axi_DATA_BUS_BVALID,
        m_axi_DATA_BUS_BREADY,
        m_axi_DATA_BUS_BRESP,
        m_axi_DATA_BUS_BID,
        m_axi_DATA_BUS_BUSER,
        m_axi_DATA_BUS1_AWVALID,
        m_axi_DATA_BUS1_AWREADY,
        m_axi_DATA_BUS1_AWADDR,
        m_axi_DATA_BUS1_AWID,
        m_axi_DATA_BUS1_AWLEN,
        m_axi_DATA_BUS1_AWSIZE,
        m_axi_DATA_BUS1_AWBURST,
        m_axi_DATA_BUS1_AWLOCK,
        m_axi_DATA_BUS1_AWCACHE,
        m_axi_DATA_BUS1_AWPROT,
        m_axi_DATA_BUS1_AWQOS,
        m_axi_DATA_BUS1_AWREGION,
        m_axi_DATA_BUS1_AWUSER,
        m_axi_DATA_BUS1_WVALID,
        m_axi_DATA_BUS1_WREADY,
        m_axi_DATA_BUS1_WDATA,
        m_axi_DATA_BUS1_WSTRB,
        m_axi_DATA_BUS1_WLAST,
        m_axi_DATA_BUS1_WID,
        m_axi_DATA_BUS1_WUSER,
        m_axi_DATA_BUS1_ARVALID,
        m_axi_DATA_BUS1_ARREADY,
        m_axi_DATA_BUS1_ARADDR,
        m_axi_DATA_BUS1_ARID,
        m_axi_DATA_BUS1_ARLEN,
        m_axi_DATA_BUS1_ARSIZE,
        m_axi_DATA_BUS1_ARBURST,
        m_axi_DATA_BUS1_ARLOCK,
        m_axi_DATA_BUS1_ARCACHE,
        m_axi_DATA_BUS1_ARPROT,
        m_axi_DATA_BUS1_ARQOS,
        m_axi_DATA_BUS1_ARREGION,
        m_axi_DATA_BUS1_ARUSER,
        m_axi_DATA_BUS1_RVALID,
        m_axi_DATA_BUS1_RREADY,
        m_axi_DATA_BUS1_RDATA,
        m_axi_DATA_BUS1_RLAST,
        m_axi_DATA_BUS1_RID,
        m_axi_DATA_BUS1_RUSER,
        m_axi_DATA_BUS1_RRESP,
        m_axi_DATA_BUS1_BVALID,
        m_axi_DATA_BUS1_BREADY,
        m_axi_DATA_BUS1_BRESP,
        m_axi_DATA_BUS1_BID,
        m_axi_DATA_BUS1_BUSER,
        s_axi_CTRL_BUS_AWVALID,
        s_axi_CTRL_BUS_AWREADY,
        s_axi_CTRL_BUS_AWADDR,
        s_axi_CTRL_BUS_WVALID,
        s_axi_CTRL_BUS_WREADY,
        s_axi_CTRL_BUS_WDATA,
        s_axi_CTRL_BUS_WSTRB,
        s_axi_CTRL_BUS_ARVALID,
        s_axi_CTRL_BUS_ARREADY,
        s_axi_CTRL_BUS_ARADDR,
        s_axi_CTRL_BUS_RVALID,
        s_axi_CTRL_BUS_RREADY,
        s_axi_CTRL_BUS_RDATA,
        s_axi_CTRL_BUS_RRESP,
        s_axi_CTRL_BUS_BVALID,
        s_axi_CTRL_BUS_BREADY,
        s_axi_CTRL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 27'd1;
parameter    ap_ST_fsm_state2 = 27'd2;
parameter    ap_ST_fsm_state3 = 27'd4;
parameter    ap_ST_fsm_state4 = 27'd8;
parameter    ap_ST_fsm_state5 = 27'd16;
parameter    ap_ST_fsm_state6 = 27'd32;
parameter    ap_ST_fsm_state7 = 27'd64;
parameter    ap_ST_fsm_state8 = 27'd128;
parameter    ap_ST_fsm_state9 = 27'd256;
parameter    ap_ST_fsm_state10 = 27'd512;
parameter    ap_ST_fsm_state11 = 27'd1024;
parameter    ap_ST_fsm_state12 = 27'd2048;
parameter    ap_ST_fsm_state13 = 27'd4096;
parameter    ap_ST_fsm_state14 = 27'd8192;
parameter    ap_ST_fsm_state15 = 27'd16384;
parameter    ap_ST_fsm_state16 = 27'd32768;
parameter    ap_ST_fsm_state17 = 27'd65536;
parameter    ap_ST_fsm_state18 = 27'd131072;
parameter    ap_ST_fsm_state19 = 27'd262144;
parameter    ap_ST_fsm_state20 = 27'd524288;
parameter    ap_ST_fsm_state21 = 27'd1048576;
parameter    ap_ST_fsm_state22 = 27'd2097152;
parameter    ap_ST_fsm_state23 = 27'd4194304;
parameter    ap_ST_fsm_state24 = 27'd8388608;
parameter    ap_ST_fsm_state25 = 27'd16777216;
parameter    ap_ST_fsm_state26 = 27'd33554432;
parameter    ap_ST_fsm_state27 = 27'd67108864;
parameter    C_S_AXI_CTRL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_BUS_ADDR_WIDTH = 8;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_BUS_ID_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS_ADDR_WIDTH = 64;
parameter    C_M_AXI_DATA_BUS_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_BUS_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS_WUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS_RUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS_USER_VALUE = 0;
parameter    C_M_AXI_DATA_BUS_PROT_VALUE = 0;
parameter    C_M_AXI_DATA_BUS_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_BUS1_ID_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS1_ADDR_WIDTH = 64;
parameter    C_M_AXI_DATA_BUS1_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_BUS1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS1_WUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS1_RUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS1_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUS1_USER_VALUE = 0;
parameter    C_M_AXI_DATA_BUS1_PROT_VALUE = 0;
parameter    C_M_AXI_DATA_BUS1_CACHE_VALUE = 3;

parameter C_S_AXI_CTRL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DATA_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DATA_BUS1_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_DATA_BUS_AWVALID;
input   m_axi_DATA_BUS_AWREADY;
output  [C_M_AXI_DATA_BUS_ADDR_WIDTH - 1:0] m_axi_DATA_BUS_AWADDR;
output  [C_M_AXI_DATA_BUS_ID_WIDTH - 1:0] m_axi_DATA_BUS_AWID;
output  [7:0] m_axi_DATA_BUS_AWLEN;
output  [2:0] m_axi_DATA_BUS_AWSIZE;
output  [1:0] m_axi_DATA_BUS_AWBURST;
output  [1:0] m_axi_DATA_BUS_AWLOCK;
output  [3:0] m_axi_DATA_BUS_AWCACHE;
output  [2:0] m_axi_DATA_BUS_AWPROT;
output  [3:0] m_axi_DATA_BUS_AWQOS;
output  [3:0] m_axi_DATA_BUS_AWREGION;
output  [C_M_AXI_DATA_BUS_AWUSER_WIDTH - 1:0] m_axi_DATA_BUS_AWUSER;
output   m_axi_DATA_BUS_WVALID;
input   m_axi_DATA_BUS_WREADY;
output  [C_M_AXI_DATA_BUS_DATA_WIDTH - 1:0] m_axi_DATA_BUS_WDATA;
output  [C_M_AXI_DATA_BUS_WSTRB_WIDTH - 1:0] m_axi_DATA_BUS_WSTRB;
output   m_axi_DATA_BUS_WLAST;
output  [C_M_AXI_DATA_BUS_ID_WIDTH - 1:0] m_axi_DATA_BUS_WID;
output  [C_M_AXI_DATA_BUS_WUSER_WIDTH - 1:0] m_axi_DATA_BUS_WUSER;
output   m_axi_DATA_BUS_ARVALID;
input   m_axi_DATA_BUS_ARREADY;
output  [C_M_AXI_DATA_BUS_ADDR_WIDTH - 1:0] m_axi_DATA_BUS_ARADDR;
output  [C_M_AXI_DATA_BUS_ID_WIDTH - 1:0] m_axi_DATA_BUS_ARID;
output  [7:0] m_axi_DATA_BUS_ARLEN;
output  [2:0] m_axi_DATA_BUS_ARSIZE;
output  [1:0] m_axi_DATA_BUS_ARBURST;
output  [1:0] m_axi_DATA_BUS_ARLOCK;
output  [3:0] m_axi_DATA_BUS_ARCACHE;
output  [2:0] m_axi_DATA_BUS_ARPROT;
output  [3:0] m_axi_DATA_BUS_ARQOS;
output  [3:0] m_axi_DATA_BUS_ARREGION;
output  [C_M_AXI_DATA_BUS_ARUSER_WIDTH - 1:0] m_axi_DATA_BUS_ARUSER;
input   m_axi_DATA_BUS_RVALID;
output   m_axi_DATA_BUS_RREADY;
input  [C_M_AXI_DATA_BUS_DATA_WIDTH - 1:0] m_axi_DATA_BUS_RDATA;
input   m_axi_DATA_BUS_RLAST;
input  [C_M_AXI_DATA_BUS_ID_WIDTH - 1:0] m_axi_DATA_BUS_RID;
input  [C_M_AXI_DATA_BUS_RUSER_WIDTH - 1:0] m_axi_DATA_BUS_RUSER;
input  [1:0] m_axi_DATA_BUS_RRESP;
input   m_axi_DATA_BUS_BVALID;
output   m_axi_DATA_BUS_BREADY;
input  [1:0] m_axi_DATA_BUS_BRESP;
input  [C_M_AXI_DATA_BUS_ID_WIDTH - 1:0] m_axi_DATA_BUS_BID;
input  [C_M_AXI_DATA_BUS_BUSER_WIDTH - 1:0] m_axi_DATA_BUS_BUSER;
output   m_axi_DATA_BUS1_AWVALID;
input   m_axi_DATA_BUS1_AWREADY;
output  [C_M_AXI_DATA_BUS1_ADDR_WIDTH - 1:0] m_axi_DATA_BUS1_AWADDR;
output  [C_M_AXI_DATA_BUS1_ID_WIDTH - 1:0] m_axi_DATA_BUS1_AWID;
output  [7:0] m_axi_DATA_BUS1_AWLEN;
output  [2:0] m_axi_DATA_BUS1_AWSIZE;
output  [1:0] m_axi_DATA_BUS1_AWBURST;
output  [1:0] m_axi_DATA_BUS1_AWLOCK;
output  [3:0] m_axi_DATA_BUS1_AWCACHE;
output  [2:0] m_axi_DATA_BUS1_AWPROT;
output  [3:0] m_axi_DATA_BUS1_AWQOS;
output  [3:0] m_axi_DATA_BUS1_AWREGION;
output  [C_M_AXI_DATA_BUS1_AWUSER_WIDTH - 1:0] m_axi_DATA_BUS1_AWUSER;
output   m_axi_DATA_BUS1_WVALID;
input   m_axi_DATA_BUS1_WREADY;
output  [C_M_AXI_DATA_BUS1_DATA_WIDTH - 1:0] m_axi_DATA_BUS1_WDATA;
output  [C_M_AXI_DATA_BUS1_WSTRB_WIDTH - 1:0] m_axi_DATA_BUS1_WSTRB;
output   m_axi_DATA_BUS1_WLAST;
output  [C_M_AXI_DATA_BUS1_ID_WIDTH - 1:0] m_axi_DATA_BUS1_WID;
output  [C_M_AXI_DATA_BUS1_WUSER_WIDTH - 1:0] m_axi_DATA_BUS1_WUSER;
output   m_axi_DATA_BUS1_ARVALID;
input   m_axi_DATA_BUS1_ARREADY;
output  [C_M_AXI_DATA_BUS1_ADDR_WIDTH - 1:0] m_axi_DATA_BUS1_ARADDR;
output  [C_M_AXI_DATA_BUS1_ID_WIDTH - 1:0] m_axi_DATA_BUS1_ARID;
output  [7:0] m_axi_DATA_BUS1_ARLEN;
output  [2:0] m_axi_DATA_BUS1_ARSIZE;
output  [1:0] m_axi_DATA_BUS1_ARBURST;
output  [1:0] m_axi_DATA_BUS1_ARLOCK;
output  [3:0] m_axi_DATA_BUS1_ARCACHE;
output  [2:0] m_axi_DATA_BUS1_ARPROT;
output  [3:0] m_axi_DATA_BUS1_ARQOS;
output  [3:0] m_axi_DATA_BUS1_ARREGION;
output  [C_M_AXI_DATA_BUS1_ARUSER_WIDTH - 1:0] m_axi_DATA_BUS1_ARUSER;
input   m_axi_DATA_BUS1_RVALID;
output   m_axi_DATA_BUS1_RREADY;
input  [C_M_AXI_DATA_BUS1_DATA_WIDTH - 1:0] m_axi_DATA_BUS1_RDATA;
input   m_axi_DATA_BUS1_RLAST;
input  [C_M_AXI_DATA_BUS1_ID_WIDTH - 1:0] m_axi_DATA_BUS1_RID;
input  [C_M_AXI_DATA_BUS1_RUSER_WIDTH - 1:0] m_axi_DATA_BUS1_RUSER;
input  [1:0] m_axi_DATA_BUS1_RRESP;
input   m_axi_DATA_BUS1_BVALID;
output   m_axi_DATA_BUS1_BREADY;
input  [1:0] m_axi_DATA_BUS1_BRESP;
input  [C_M_AXI_DATA_BUS1_ID_WIDTH - 1:0] m_axi_DATA_BUS1_BID;
input  [C_M_AXI_DATA_BUS1_BUSER_WIDTH - 1:0] m_axi_DATA_BUS1_BUSER;
input   s_axi_CTRL_BUS_AWVALID;
output   s_axi_CTRL_BUS_AWREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_CTRL_BUS_AWADDR;
input   s_axi_CTRL_BUS_WVALID;
output   s_axi_CTRL_BUS_WREADY;
input  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_CTRL_BUS_WDATA;
input  [C_S_AXI_CTRL_BUS_WSTRB_WIDTH - 1:0] s_axi_CTRL_BUS_WSTRB;
input   s_axi_CTRL_BUS_ARVALID;
output   s_axi_CTRL_BUS_ARREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_CTRL_BUS_ARADDR;
output   s_axi_CTRL_BUS_RVALID;
input   s_axi_CTRL_BUS_RREADY;
output  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_CTRL_BUS_RDATA;
output  [1:0] s_axi_CTRL_BUS_RRESP;
output   s_axi_CTRL_BUS_BVALID;
input   s_axi_CTRL_BUS_BREADY;
output  [1:0] s_axi_CTRL_BUS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] ifm;
reg   [63:0] ifm_0_data_reg;
reg    ifm_0_vld_reg;
reg    ifm_0_ack_out;
wire   [63:0] ofm;
reg   [63:0] ofm_0_data_reg;
reg    ofm_0_vld_reg;
reg    ofm_0_ack_out;
wire   [63:0] weight;
reg   [63:0] weight_0_data_reg;
reg    weight_0_vld_reg;
reg    weight_0_ack_out;
wire   [63:0] bias;
reg   [63:0] bias_0_data_reg;
reg    bias_0_vld_reg;
reg    bias_0_ack_out;
wire   [31:0] k_s_pad_ltype;
reg   [31:0] k_s_pad_ltype_0_data_reg;
reg    k_s_pad_ltype_0_vld_reg;
reg    k_s_pad_ltype_0_ack_out;
wire   [31:0] iofm_num;
reg   [31:0] iofm_num_0_data_reg;
reg    iofm_num_0_vld_reg;
reg    iofm_num_0_ack_out;
wire   [31:0] ifm_w_h;
reg   [31:0] ifm_w_h_0_data_reg;
reg    ifm_w_h_0_vld_reg;
reg    ifm_w_h_0_ack_out;
wire   [31:0] ofm_w_h;
reg   [31:0] ofm_w_h_0_data_reg;
reg    ofm_w_h_0_vld_reg;
reg    ofm_w_h_0_ack_out;
wire   [31:0] TRTC;
reg   [31:0] TRTC_0_data_reg;
reg    TRTC_0_vld_reg;
reg    TRTC_0_ack_out;
wire   [31:0] TMTN;
reg   [31:0] TMTN_0_data_reg;
reg    TMTN_0_vld_reg;
reg    TMTN_0_ack_out;
wire   [31:0] OFM_num_bound;
reg   [31:0] OFM_num_bound_0_data_reg;
reg    OFM_num_bound_0_vld_reg;
reg    OFM_num_bound_0_ack_out;
wire   [31:0] mLoopsxTM;
reg   [31:0] mLoopsxTM_0_data_reg;
reg    mLoopsxTM_0_vld_reg;
reg    mLoopsxTM_0_ack_out;
wire   [31:0] mLoops_a1xTM;
reg   [31:0] mLoops_a1xTM_0_data_reg;
reg    mLoops_a1xTM_0_vld_reg;
reg    mLoops_a1xTM_0_ack_out;
wire   [15:0] pad_val;
reg   [15:0] pad_val_0_data_reg;
reg    pad_val_0_vld_reg;
reg    pad_val_0_ack_out;
wire   [31:0] TRowTCol;
reg   [31:0] TRowTCol_0_data_reg;
reg    TRowTCol_0_vld_reg;
reg    TRowTCol_0_ack_out;
wire   [31:0] IHW;
wire   [31:0] OHW;
wire   [31:0] KK_INumxKK;
reg   [31:0] KK_INumxKK_0_data_reg;
reg    KK_INumxKK_0_vld_reg;
reg    KK_INumxKK_0_ack_out;
wire   [31:0] en_bits;
reg   [31:0] en_bits_0_data_reg;
reg    en_bits_0_vld_reg;
reg    en_bits_0_ack_out;
wire   [31:0] WeightQ;
reg   [31:0] WeightQ_0_data_reg;
reg    WeightQ_0_vld_reg;
reg    WeightQ_0_ack_out;
wire   [31:0] BetaQ;
reg   [31:0] BetaQ_0_data_reg;
reg    BetaQ_0_vld_reg;
reg    BetaQ_0_ack_out;
wire   [31:0] InputQ;
reg   [31:0] InputQ_0_data_reg;
reg    InputQ_0_vld_reg;
reg    InputQ_0_ack_out;
wire   [31:0] OutputQ;
reg   [31:0] OutputQ_0_data_reg;
reg    OutputQ_0_vld_reg;
reg    OutputQ_0_ack_out;
reg   [9:0] local_buf_1_address0;
reg    local_buf_1_ce0;
reg    local_buf_1_we0;
wire   [31:0] local_buf_1_q0;
reg   [9:0] bias_buffer_address0;
reg    bias_buffer_ce0;
reg    bias_buffer_we0;
wire   [15:0] bias_buffer_q0;
reg   [9:0] ofm_buffer1_0_address0;
reg    ofm_buffer1_0_ce0;
reg    ofm_buffer1_0_we0;
wire   [31:0] ofm_buffer1_0_q0;
reg    ofm_buffer1_0_ce1;
wire   [31:0] ofm_buffer1_0_q1;
reg   [9:0] ofm_buffer1_1_address0;
reg    ofm_buffer1_1_ce0;
reg    ofm_buffer1_1_we0;
wire   [31:0] ofm_buffer1_1_q0;
reg    ofm_buffer1_1_ce1;
wire   [31:0] ofm_buffer1_1_q1;
reg   [9:0] ofm_buffer1_2_address0;
reg    ofm_buffer1_2_ce0;
reg    ofm_buffer1_2_we0;
wire   [31:0] ofm_buffer1_2_q0;
reg    ofm_buffer1_2_ce1;
wire   [31:0] ofm_buffer1_2_q1;
reg   [9:0] ofm_buffer1_3_address0;
reg    ofm_buffer1_3_ce0;
reg    ofm_buffer1_3_we0;
wire   [31:0] ofm_buffer1_3_q0;
reg    ofm_buffer1_3_ce1;
wire   [31:0] ofm_buffer1_3_q1;
reg   [9:0] ofm_buffer1_4_address0;
reg    ofm_buffer1_4_ce0;
reg    ofm_buffer1_4_we0;
wire   [31:0] ofm_buffer1_4_q0;
reg    ofm_buffer1_4_ce1;
wire   [31:0] ofm_buffer1_4_q1;
reg   [9:0] ofm_buffer1_5_address0;
reg    ofm_buffer1_5_ce0;
reg    ofm_buffer1_5_we0;
wire   [31:0] ofm_buffer1_5_q0;
reg    ofm_buffer1_5_ce1;
wire   [31:0] ofm_buffer1_5_q1;
reg   [9:0] ofm_buffer1_6_address0;
reg    ofm_buffer1_6_ce0;
reg    ofm_buffer1_6_we0;
wire   [31:0] ofm_buffer1_6_q0;
reg    ofm_buffer1_6_ce1;
wire   [31:0] ofm_buffer1_6_q1;
reg   [9:0] ofm_buffer1_7_address0;
reg    ofm_buffer1_7_ce0;
reg    ofm_buffer1_7_we0;
wire   [31:0] ofm_buffer1_7_q0;
reg    ofm_buffer1_7_ce1;
wire   [31:0] ofm_buffer1_7_q1;
reg   [9:0] ofm_buffer1_8_address0;
reg    ofm_buffer1_8_ce0;
reg    ofm_buffer1_8_we0;
wire   [31:0] ofm_buffer1_8_q0;
reg    ofm_buffer1_8_ce1;
wire   [31:0] ofm_buffer1_8_q1;
reg   [9:0] ofm_buffer1_9_address0;
reg    ofm_buffer1_9_ce0;
reg    ofm_buffer1_9_we0;
wire   [31:0] ofm_buffer1_9_q0;
reg    ofm_buffer1_9_ce1;
wire   [31:0] ofm_buffer1_9_q1;
reg   [9:0] ofm_buffer1_10_address0;
reg    ofm_buffer1_10_ce0;
reg    ofm_buffer1_10_we0;
wire   [31:0] ofm_buffer1_10_q0;
reg    ofm_buffer1_10_ce1;
wire   [31:0] ofm_buffer1_10_q1;
reg   [9:0] ofm_buffer1_11_address0;
reg    ofm_buffer1_11_ce0;
reg    ofm_buffer1_11_we0;
wire   [31:0] ofm_buffer1_11_q0;
reg    ofm_buffer1_11_ce1;
wire   [31:0] ofm_buffer1_11_q1;
reg   [9:0] ofm_buffer1_12_address0;
reg    ofm_buffer1_12_ce0;
reg    ofm_buffer1_12_we0;
wire   [31:0] ofm_buffer1_12_q0;
reg    ofm_buffer1_12_ce1;
wire   [31:0] ofm_buffer1_12_q1;
reg   [9:0] ofm_buffer1_13_address0;
reg    ofm_buffer1_13_ce0;
reg    ofm_buffer1_13_we0;
wire   [31:0] ofm_buffer1_13_q0;
reg    ofm_buffer1_13_ce1;
wire   [31:0] ofm_buffer1_13_q1;
reg   [9:0] ofm_buffer1_14_address0;
reg    ofm_buffer1_14_ce0;
reg    ofm_buffer1_14_we0;
wire   [31:0] ofm_buffer1_14_q0;
reg    ofm_buffer1_14_ce1;
wire   [31:0] ofm_buffer1_14_q1;
reg   [9:0] ofm_buffer1_15_address0;
reg    ofm_buffer1_15_ce0;
reg    ofm_buffer1_15_we0;
wire   [31:0] ofm_buffer1_15_q0;
reg    ofm_buffer1_15_ce1;
wire   [31:0] ofm_buffer1_15_q1;
reg   [9:0] ofm_buffer1_16_address0;
reg    ofm_buffer1_16_ce0;
reg    ofm_buffer1_16_we0;
wire   [31:0] ofm_buffer1_16_q0;
reg    ofm_buffer1_16_ce1;
wire   [31:0] ofm_buffer1_16_q1;
reg   [9:0] ofm_buffer1_17_address0;
reg    ofm_buffer1_17_ce0;
reg    ofm_buffer1_17_we0;
wire   [31:0] ofm_buffer1_17_q0;
reg    ofm_buffer1_17_ce1;
wire   [31:0] ofm_buffer1_17_q1;
reg   [9:0] ofm_buffer1_18_address0;
reg    ofm_buffer1_18_ce0;
reg    ofm_buffer1_18_we0;
wire   [31:0] ofm_buffer1_18_q0;
reg    ofm_buffer1_18_ce1;
wire   [31:0] ofm_buffer1_18_q1;
reg   [9:0] ofm_buffer1_19_address0;
reg    ofm_buffer1_19_ce0;
reg    ofm_buffer1_19_we0;
wire   [31:0] ofm_buffer1_19_q0;
reg    ofm_buffer1_19_ce1;
wire   [31:0] ofm_buffer1_19_q1;
reg   [9:0] ofm_buffer1_20_address0;
reg    ofm_buffer1_20_ce0;
reg    ofm_buffer1_20_we0;
wire   [31:0] ofm_buffer1_20_q0;
reg    ofm_buffer1_20_ce1;
wire   [31:0] ofm_buffer1_20_q1;
reg   [9:0] ofm_buffer1_21_address0;
reg    ofm_buffer1_21_ce0;
reg    ofm_buffer1_21_we0;
wire   [31:0] ofm_buffer1_21_q0;
reg    ofm_buffer1_21_ce1;
wire   [31:0] ofm_buffer1_21_q1;
reg   [9:0] ofm_buffer1_22_address0;
reg    ofm_buffer1_22_ce0;
reg    ofm_buffer1_22_we0;
wire   [31:0] ofm_buffer1_22_q0;
reg    ofm_buffer1_22_ce1;
wire   [31:0] ofm_buffer1_22_q1;
reg   [9:0] ofm_buffer1_23_address0;
reg    ofm_buffer1_23_ce0;
reg    ofm_buffer1_23_we0;
wire   [31:0] ofm_buffer1_23_q0;
reg    ofm_buffer1_23_ce1;
wire   [31:0] ofm_buffer1_23_q1;
reg   [9:0] ofm_buffer1_24_address0;
reg    ofm_buffer1_24_ce0;
reg    ofm_buffer1_24_we0;
wire   [31:0] ofm_buffer1_24_q0;
reg    ofm_buffer1_24_ce1;
wire   [31:0] ofm_buffer1_24_q1;
reg   [9:0] ofm_buffer1_25_address0;
reg    ofm_buffer1_25_ce0;
reg    ofm_buffer1_25_we0;
wire   [31:0] ofm_buffer1_25_q0;
reg    ofm_buffer1_25_ce1;
wire   [31:0] ofm_buffer1_25_q1;
reg   [9:0] ofm_buffer1_26_address0;
reg    ofm_buffer1_26_ce0;
reg    ofm_buffer1_26_we0;
wire   [31:0] ofm_buffer1_26_q0;
reg    ofm_buffer1_26_ce1;
wire   [31:0] ofm_buffer1_26_q1;
reg   [9:0] ofm_buffer1_27_address0;
reg    ofm_buffer1_27_ce0;
reg    ofm_buffer1_27_we0;
wire   [31:0] ofm_buffer1_27_q0;
reg    ofm_buffer1_27_ce1;
wire   [31:0] ofm_buffer1_27_q1;
reg   [9:0] ofm_buffer1_28_address0;
reg    ofm_buffer1_28_ce0;
reg    ofm_buffer1_28_we0;
wire   [31:0] ofm_buffer1_28_q0;
reg    ofm_buffer1_28_ce1;
wire   [31:0] ofm_buffer1_28_q1;
reg   [9:0] ofm_buffer1_29_address0;
reg    ofm_buffer1_29_ce0;
reg    ofm_buffer1_29_we0;
wire   [31:0] ofm_buffer1_29_q0;
reg    ofm_buffer1_29_ce1;
wire   [31:0] ofm_buffer1_29_q1;
reg   [9:0] ofm_buffer1_30_address0;
reg    ofm_buffer1_30_ce0;
reg    ofm_buffer1_30_we0;
wire   [31:0] ofm_buffer1_30_q0;
reg    ofm_buffer1_30_ce1;
wire   [31:0] ofm_buffer1_30_q1;
reg   [9:0] ofm_buffer1_31_address0;
reg    ofm_buffer1_31_ce0;
reg    ofm_buffer1_31_we0;
wire   [31:0] ofm_buffer1_31_q0;
reg    ofm_buffer1_31_ce1;
wire   [31:0] ofm_buffer1_31_q1;
reg   [9:0] ofm_buffer1_32_address0;
reg    ofm_buffer1_32_ce0;
reg    ofm_buffer1_32_we0;
wire   [31:0] ofm_buffer1_32_q0;
reg    ofm_buffer1_32_ce1;
wire   [31:0] ofm_buffer1_32_q1;
reg   [9:0] ofm_buffer1_33_address0;
reg    ofm_buffer1_33_ce0;
reg    ofm_buffer1_33_we0;
wire   [31:0] ofm_buffer1_33_q0;
reg    ofm_buffer1_33_ce1;
wire   [31:0] ofm_buffer1_33_q1;
reg   [9:0] ofm_buffer1_34_address0;
reg    ofm_buffer1_34_ce0;
reg    ofm_buffer1_34_we0;
wire   [31:0] ofm_buffer1_34_q0;
reg    ofm_buffer1_34_ce1;
wire   [31:0] ofm_buffer1_34_q1;
reg   [9:0] ofm_buffer1_35_address0;
reg    ofm_buffer1_35_ce0;
reg    ofm_buffer1_35_we0;
wire   [31:0] ofm_buffer1_35_q0;
reg    ofm_buffer1_35_ce1;
wire   [31:0] ofm_buffer1_35_q1;
reg   [9:0] ofm_buffer1_36_address0;
reg    ofm_buffer1_36_ce0;
reg    ofm_buffer1_36_we0;
wire   [31:0] ofm_buffer1_36_q0;
reg    ofm_buffer1_36_ce1;
wire   [31:0] ofm_buffer1_36_q1;
reg   [9:0] ofm_buffer1_37_address0;
reg    ofm_buffer1_37_ce0;
reg    ofm_buffer1_37_we0;
wire   [31:0] ofm_buffer1_37_q0;
reg    ofm_buffer1_37_ce1;
wire   [31:0] ofm_buffer1_37_q1;
reg   [9:0] ofm_buffer1_38_address0;
reg    ofm_buffer1_38_ce0;
reg    ofm_buffer1_38_we0;
wire   [31:0] ofm_buffer1_38_q0;
reg    ofm_buffer1_38_ce1;
wire   [31:0] ofm_buffer1_38_q1;
reg   [9:0] ofm_buffer1_39_address0;
reg    ofm_buffer1_39_ce0;
reg    ofm_buffer1_39_we0;
wire   [31:0] ofm_buffer1_39_q0;
reg    ofm_buffer1_39_ce1;
wire   [31:0] ofm_buffer1_39_q1;
reg   [9:0] ofm_buffer1_40_address0;
reg    ofm_buffer1_40_ce0;
reg    ofm_buffer1_40_we0;
wire   [31:0] ofm_buffer1_40_q0;
reg    ofm_buffer1_40_ce1;
wire   [31:0] ofm_buffer1_40_q1;
reg   [9:0] ofm_buffer1_41_address0;
reg    ofm_buffer1_41_ce0;
reg    ofm_buffer1_41_we0;
wire   [31:0] ofm_buffer1_41_q0;
reg    ofm_buffer1_41_ce1;
wire   [31:0] ofm_buffer1_41_q1;
reg   [9:0] ofm_buffer1_42_address0;
reg    ofm_buffer1_42_ce0;
reg    ofm_buffer1_42_we0;
wire   [31:0] ofm_buffer1_42_q0;
reg    ofm_buffer1_42_ce1;
wire   [31:0] ofm_buffer1_42_q1;
reg   [9:0] ofm_buffer1_43_address0;
reg    ofm_buffer1_43_ce0;
reg    ofm_buffer1_43_we0;
wire   [31:0] ofm_buffer1_43_q0;
reg    ofm_buffer1_43_ce1;
wire   [31:0] ofm_buffer1_43_q1;
reg   [9:0] ofm_buffer1_44_address0;
reg    ofm_buffer1_44_ce0;
reg    ofm_buffer1_44_we0;
wire   [31:0] ofm_buffer1_44_q0;
reg    ofm_buffer1_44_ce1;
wire   [31:0] ofm_buffer1_44_q1;
reg   [9:0] ofm_buffer1_45_address0;
reg    ofm_buffer1_45_ce0;
reg    ofm_buffer1_45_we0;
wire   [31:0] ofm_buffer1_45_q0;
reg    ofm_buffer1_45_ce1;
wire   [31:0] ofm_buffer1_45_q1;
reg   [9:0] ofm_buffer1_46_address0;
reg    ofm_buffer1_46_ce0;
reg    ofm_buffer1_46_we0;
wire   [31:0] ofm_buffer1_46_q0;
reg    ofm_buffer1_46_ce1;
wire   [31:0] ofm_buffer1_46_q1;
reg   [9:0] ofm_buffer1_47_address0;
reg    ofm_buffer1_47_ce0;
reg    ofm_buffer1_47_we0;
wire   [31:0] ofm_buffer1_47_q0;
reg    ofm_buffer1_47_ce1;
wire   [31:0] ofm_buffer1_47_q1;
reg   [9:0] ofm_buffer1_48_address0;
reg    ofm_buffer1_48_ce0;
reg    ofm_buffer1_48_we0;
wire   [31:0] ofm_buffer1_48_q0;
reg    ofm_buffer1_48_ce1;
wire   [31:0] ofm_buffer1_48_q1;
reg   [9:0] ofm_buffer1_49_address0;
reg    ofm_buffer1_49_ce0;
reg    ofm_buffer1_49_we0;
wire   [31:0] ofm_buffer1_49_q0;
reg    ofm_buffer1_49_ce1;
wire   [31:0] ofm_buffer1_49_q1;
reg   [9:0] ofm_buffer1_50_address0;
reg    ofm_buffer1_50_ce0;
reg    ofm_buffer1_50_we0;
wire   [31:0] ofm_buffer1_50_q0;
reg    ofm_buffer1_50_ce1;
wire   [31:0] ofm_buffer1_50_q1;
reg   [9:0] ofm_buffer1_51_address0;
reg    ofm_buffer1_51_ce0;
reg    ofm_buffer1_51_we0;
wire   [31:0] ofm_buffer1_51_q0;
reg    ofm_buffer1_51_ce1;
wire   [31:0] ofm_buffer1_51_q1;
reg   [9:0] ofm_buffer1_52_address0;
reg    ofm_buffer1_52_ce0;
reg    ofm_buffer1_52_we0;
wire   [31:0] ofm_buffer1_52_q0;
reg    ofm_buffer1_52_ce1;
wire   [31:0] ofm_buffer1_52_q1;
reg   [9:0] ofm_buffer1_53_address0;
reg    ofm_buffer1_53_ce0;
reg    ofm_buffer1_53_we0;
wire   [31:0] ofm_buffer1_53_q0;
reg    ofm_buffer1_53_ce1;
wire   [31:0] ofm_buffer1_53_q1;
reg   [9:0] ofm_buffer1_54_address0;
reg    ofm_buffer1_54_ce0;
reg    ofm_buffer1_54_we0;
wire   [31:0] ofm_buffer1_54_q0;
reg    ofm_buffer1_54_ce1;
wire   [31:0] ofm_buffer1_54_q1;
reg   [9:0] ofm_buffer1_55_address0;
reg    ofm_buffer1_55_ce0;
reg    ofm_buffer1_55_we0;
wire   [31:0] ofm_buffer1_55_q0;
reg    ofm_buffer1_55_ce1;
wire   [31:0] ofm_buffer1_55_q1;
reg   [9:0] ofm_buffer1_56_address0;
reg    ofm_buffer1_56_ce0;
reg    ofm_buffer1_56_we0;
wire   [31:0] ofm_buffer1_56_q0;
reg    ofm_buffer1_56_ce1;
wire   [31:0] ofm_buffer1_56_q1;
reg   [9:0] ofm_buffer1_57_address0;
reg    ofm_buffer1_57_ce0;
reg    ofm_buffer1_57_we0;
wire   [31:0] ofm_buffer1_57_q0;
reg    ofm_buffer1_57_ce1;
wire   [31:0] ofm_buffer1_57_q1;
reg   [9:0] ofm_buffer1_58_address0;
reg    ofm_buffer1_58_ce0;
reg    ofm_buffer1_58_we0;
wire   [31:0] ofm_buffer1_58_q0;
reg    ofm_buffer1_58_ce1;
wire   [31:0] ofm_buffer1_58_q1;
reg   [9:0] ofm_buffer1_59_address0;
reg    ofm_buffer1_59_ce0;
reg    ofm_buffer1_59_we0;
wire   [31:0] ofm_buffer1_59_q0;
reg    ofm_buffer1_59_ce1;
wire   [31:0] ofm_buffer1_59_q1;
reg   [9:0] ofm_buffer0_0_address0;
reg    ofm_buffer0_0_ce0;
reg    ofm_buffer0_0_we0;
wire   [31:0] ofm_buffer0_0_q0;
reg    ofm_buffer0_0_ce1;
wire   [31:0] ofm_buffer0_0_q1;
reg   [9:0] ofm_buffer0_1_address0;
reg    ofm_buffer0_1_ce0;
reg    ofm_buffer0_1_we0;
wire   [31:0] ofm_buffer0_1_q0;
reg    ofm_buffer0_1_ce1;
wire   [31:0] ofm_buffer0_1_q1;
reg   [9:0] ofm_buffer0_2_address0;
reg    ofm_buffer0_2_ce0;
reg    ofm_buffer0_2_we0;
wire   [31:0] ofm_buffer0_2_q0;
reg    ofm_buffer0_2_ce1;
wire   [31:0] ofm_buffer0_2_q1;
reg   [9:0] ofm_buffer0_3_address0;
reg    ofm_buffer0_3_ce0;
reg    ofm_buffer0_3_we0;
wire   [31:0] ofm_buffer0_3_q0;
reg    ofm_buffer0_3_ce1;
wire   [31:0] ofm_buffer0_3_q1;
reg   [9:0] ofm_buffer0_4_address0;
reg    ofm_buffer0_4_ce0;
reg    ofm_buffer0_4_we0;
wire   [31:0] ofm_buffer0_4_q0;
reg    ofm_buffer0_4_ce1;
wire   [31:0] ofm_buffer0_4_q1;
reg   [9:0] ofm_buffer0_5_address0;
reg    ofm_buffer0_5_ce0;
reg    ofm_buffer0_5_we0;
wire   [31:0] ofm_buffer0_5_q0;
reg    ofm_buffer0_5_ce1;
wire   [31:0] ofm_buffer0_5_q1;
reg   [9:0] ofm_buffer0_6_address0;
reg    ofm_buffer0_6_ce0;
reg    ofm_buffer0_6_we0;
wire   [31:0] ofm_buffer0_6_q0;
reg    ofm_buffer0_6_ce1;
wire   [31:0] ofm_buffer0_6_q1;
reg   [9:0] ofm_buffer0_7_address0;
reg    ofm_buffer0_7_ce0;
reg    ofm_buffer0_7_we0;
wire   [31:0] ofm_buffer0_7_q0;
reg    ofm_buffer0_7_ce1;
wire   [31:0] ofm_buffer0_7_q1;
reg   [9:0] ofm_buffer0_8_address0;
reg    ofm_buffer0_8_ce0;
reg    ofm_buffer0_8_we0;
wire   [31:0] ofm_buffer0_8_q0;
reg    ofm_buffer0_8_ce1;
wire   [31:0] ofm_buffer0_8_q1;
reg   [9:0] ofm_buffer0_9_address0;
reg    ofm_buffer0_9_ce0;
reg    ofm_buffer0_9_we0;
wire   [31:0] ofm_buffer0_9_q0;
reg    ofm_buffer0_9_ce1;
wire   [31:0] ofm_buffer0_9_q1;
reg   [9:0] ofm_buffer0_10_address0;
reg    ofm_buffer0_10_ce0;
reg    ofm_buffer0_10_we0;
wire   [31:0] ofm_buffer0_10_q0;
reg    ofm_buffer0_10_ce1;
wire   [31:0] ofm_buffer0_10_q1;
reg   [9:0] ofm_buffer0_11_address0;
reg    ofm_buffer0_11_ce0;
reg    ofm_buffer0_11_we0;
wire   [31:0] ofm_buffer0_11_q0;
reg    ofm_buffer0_11_ce1;
wire   [31:0] ofm_buffer0_11_q1;
reg   [9:0] ofm_buffer0_12_address0;
reg    ofm_buffer0_12_ce0;
reg    ofm_buffer0_12_we0;
wire   [31:0] ofm_buffer0_12_q0;
reg    ofm_buffer0_12_ce1;
wire   [31:0] ofm_buffer0_12_q1;
reg   [9:0] ofm_buffer0_13_address0;
reg    ofm_buffer0_13_ce0;
reg    ofm_buffer0_13_we0;
wire   [31:0] ofm_buffer0_13_q0;
reg    ofm_buffer0_13_ce1;
wire   [31:0] ofm_buffer0_13_q1;
reg   [9:0] ofm_buffer0_14_address0;
reg    ofm_buffer0_14_ce0;
reg    ofm_buffer0_14_we0;
wire   [31:0] ofm_buffer0_14_q0;
reg    ofm_buffer0_14_ce1;
wire   [31:0] ofm_buffer0_14_q1;
reg   [9:0] ofm_buffer0_15_address0;
reg    ofm_buffer0_15_ce0;
reg    ofm_buffer0_15_we0;
wire   [31:0] ofm_buffer0_15_q0;
reg    ofm_buffer0_15_ce1;
wire   [31:0] ofm_buffer0_15_q1;
reg   [9:0] ofm_buffer0_16_address0;
reg    ofm_buffer0_16_ce0;
reg    ofm_buffer0_16_we0;
wire   [31:0] ofm_buffer0_16_q0;
reg    ofm_buffer0_16_ce1;
wire   [31:0] ofm_buffer0_16_q1;
reg   [9:0] ofm_buffer0_17_address0;
reg    ofm_buffer0_17_ce0;
reg    ofm_buffer0_17_we0;
wire   [31:0] ofm_buffer0_17_q0;
reg    ofm_buffer0_17_ce1;
wire   [31:0] ofm_buffer0_17_q1;
reg   [9:0] ofm_buffer0_18_address0;
reg    ofm_buffer0_18_ce0;
reg    ofm_buffer0_18_we0;
wire   [31:0] ofm_buffer0_18_q0;
reg    ofm_buffer0_18_ce1;
wire   [31:0] ofm_buffer0_18_q1;
reg   [9:0] ofm_buffer0_19_address0;
reg    ofm_buffer0_19_ce0;
reg    ofm_buffer0_19_we0;
wire   [31:0] ofm_buffer0_19_q0;
reg    ofm_buffer0_19_ce1;
wire   [31:0] ofm_buffer0_19_q1;
reg   [9:0] ofm_buffer0_20_address0;
reg    ofm_buffer0_20_ce0;
reg    ofm_buffer0_20_we0;
wire   [31:0] ofm_buffer0_20_q0;
reg    ofm_buffer0_20_ce1;
wire   [31:0] ofm_buffer0_20_q1;
reg   [9:0] ofm_buffer0_21_address0;
reg    ofm_buffer0_21_ce0;
reg    ofm_buffer0_21_we0;
wire   [31:0] ofm_buffer0_21_q0;
reg    ofm_buffer0_21_ce1;
wire   [31:0] ofm_buffer0_21_q1;
reg   [9:0] ofm_buffer0_22_address0;
reg    ofm_buffer0_22_ce0;
reg    ofm_buffer0_22_we0;
wire   [31:0] ofm_buffer0_22_q0;
reg    ofm_buffer0_22_ce1;
wire   [31:0] ofm_buffer0_22_q1;
reg   [9:0] ofm_buffer0_23_address0;
reg    ofm_buffer0_23_ce0;
reg    ofm_buffer0_23_we0;
wire   [31:0] ofm_buffer0_23_q0;
reg    ofm_buffer0_23_ce1;
wire   [31:0] ofm_buffer0_23_q1;
reg   [9:0] ofm_buffer0_24_address0;
reg    ofm_buffer0_24_ce0;
reg    ofm_buffer0_24_we0;
wire   [31:0] ofm_buffer0_24_q0;
reg    ofm_buffer0_24_ce1;
wire   [31:0] ofm_buffer0_24_q1;
reg   [9:0] ofm_buffer0_25_address0;
reg    ofm_buffer0_25_ce0;
reg    ofm_buffer0_25_we0;
wire   [31:0] ofm_buffer0_25_q0;
reg    ofm_buffer0_25_ce1;
wire   [31:0] ofm_buffer0_25_q1;
reg   [9:0] ofm_buffer0_26_address0;
reg    ofm_buffer0_26_ce0;
reg    ofm_buffer0_26_we0;
wire   [31:0] ofm_buffer0_26_q0;
reg    ofm_buffer0_26_ce1;
wire   [31:0] ofm_buffer0_26_q1;
reg   [9:0] ofm_buffer0_27_address0;
reg    ofm_buffer0_27_ce0;
reg    ofm_buffer0_27_we0;
wire   [31:0] ofm_buffer0_27_q0;
reg    ofm_buffer0_27_ce1;
wire   [31:0] ofm_buffer0_27_q1;
reg   [9:0] ofm_buffer0_28_address0;
reg    ofm_buffer0_28_ce0;
reg    ofm_buffer0_28_we0;
wire   [31:0] ofm_buffer0_28_q0;
reg    ofm_buffer0_28_ce1;
wire   [31:0] ofm_buffer0_28_q1;
reg   [9:0] ofm_buffer0_29_address0;
reg    ofm_buffer0_29_ce0;
reg    ofm_buffer0_29_we0;
wire   [31:0] ofm_buffer0_29_q0;
reg    ofm_buffer0_29_ce1;
wire   [31:0] ofm_buffer0_29_q1;
reg   [9:0] ofm_buffer0_30_address0;
reg    ofm_buffer0_30_ce0;
reg    ofm_buffer0_30_we0;
wire   [31:0] ofm_buffer0_30_q0;
reg    ofm_buffer0_30_ce1;
wire   [31:0] ofm_buffer0_30_q1;
reg   [9:0] ofm_buffer0_31_address0;
reg    ofm_buffer0_31_ce0;
reg    ofm_buffer0_31_we0;
wire   [31:0] ofm_buffer0_31_q0;
reg    ofm_buffer0_31_ce1;
wire   [31:0] ofm_buffer0_31_q1;
reg   [9:0] ofm_buffer0_32_address0;
reg    ofm_buffer0_32_ce0;
reg    ofm_buffer0_32_we0;
wire   [31:0] ofm_buffer0_32_q0;
reg    ofm_buffer0_32_ce1;
wire   [31:0] ofm_buffer0_32_q1;
reg   [9:0] ofm_buffer0_33_address0;
reg    ofm_buffer0_33_ce0;
reg    ofm_buffer0_33_we0;
wire   [31:0] ofm_buffer0_33_q0;
reg    ofm_buffer0_33_ce1;
wire   [31:0] ofm_buffer0_33_q1;
reg   [9:0] ofm_buffer0_34_address0;
reg    ofm_buffer0_34_ce0;
reg    ofm_buffer0_34_we0;
wire   [31:0] ofm_buffer0_34_q0;
reg    ofm_buffer0_34_ce1;
wire   [31:0] ofm_buffer0_34_q1;
reg   [9:0] ofm_buffer0_35_address0;
reg    ofm_buffer0_35_ce0;
reg    ofm_buffer0_35_we0;
wire   [31:0] ofm_buffer0_35_q0;
reg    ofm_buffer0_35_ce1;
wire   [31:0] ofm_buffer0_35_q1;
reg   [9:0] ofm_buffer0_36_address0;
reg    ofm_buffer0_36_ce0;
reg    ofm_buffer0_36_we0;
wire   [31:0] ofm_buffer0_36_q0;
reg    ofm_buffer0_36_ce1;
wire   [31:0] ofm_buffer0_36_q1;
reg   [9:0] ofm_buffer0_37_address0;
reg    ofm_buffer0_37_ce0;
reg    ofm_buffer0_37_we0;
wire   [31:0] ofm_buffer0_37_q0;
reg    ofm_buffer0_37_ce1;
wire   [31:0] ofm_buffer0_37_q1;
reg   [9:0] ofm_buffer0_38_address0;
reg    ofm_buffer0_38_ce0;
reg    ofm_buffer0_38_we0;
wire   [31:0] ofm_buffer0_38_q0;
reg    ofm_buffer0_38_ce1;
wire   [31:0] ofm_buffer0_38_q1;
reg   [9:0] ofm_buffer0_39_address0;
reg    ofm_buffer0_39_ce0;
reg    ofm_buffer0_39_we0;
wire   [31:0] ofm_buffer0_39_q0;
reg    ofm_buffer0_39_ce1;
wire   [31:0] ofm_buffer0_39_q1;
reg   [9:0] ofm_buffer0_40_address0;
reg    ofm_buffer0_40_ce0;
reg    ofm_buffer0_40_we0;
wire   [31:0] ofm_buffer0_40_q0;
reg    ofm_buffer0_40_ce1;
wire   [31:0] ofm_buffer0_40_q1;
reg   [9:0] ofm_buffer0_41_address0;
reg    ofm_buffer0_41_ce0;
reg    ofm_buffer0_41_we0;
wire   [31:0] ofm_buffer0_41_q0;
reg    ofm_buffer0_41_ce1;
wire   [31:0] ofm_buffer0_41_q1;
reg   [9:0] ofm_buffer0_42_address0;
reg    ofm_buffer0_42_ce0;
reg    ofm_buffer0_42_we0;
wire   [31:0] ofm_buffer0_42_q0;
reg    ofm_buffer0_42_ce1;
wire   [31:0] ofm_buffer0_42_q1;
reg   [9:0] ofm_buffer0_43_address0;
reg    ofm_buffer0_43_ce0;
reg    ofm_buffer0_43_we0;
wire   [31:0] ofm_buffer0_43_q0;
reg    ofm_buffer0_43_ce1;
wire   [31:0] ofm_buffer0_43_q1;
reg   [9:0] ofm_buffer0_44_address0;
reg    ofm_buffer0_44_ce0;
reg    ofm_buffer0_44_we0;
wire   [31:0] ofm_buffer0_44_q0;
reg    ofm_buffer0_44_ce1;
wire   [31:0] ofm_buffer0_44_q1;
reg   [9:0] ofm_buffer0_45_address0;
reg    ofm_buffer0_45_ce0;
reg    ofm_buffer0_45_we0;
wire   [31:0] ofm_buffer0_45_q0;
reg    ofm_buffer0_45_ce1;
wire   [31:0] ofm_buffer0_45_q1;
reg   [9:0] ofm_buffer0_46_address0;
reg    ofm_buffer0_46_ce0;
reg    ofm_buffer0_46_we0;
wire   [31:0] ofm_buffer0_46_q0;
reg    ofm_buffer0_46_ce1;
wire   [31:0] ofm_buffer0_46_q1;
reg   [9:0] ofm_buffer0_47_address0;
reg    ofm_buffer0_47_ce0;
reg    ofm_buffer0_47_we0;
wire   [31:0] ofm_buffer0_47_q0;
reg    ofm_buffer0_47_ce1;
wire   [31:0] ofm_buffer0_47_q1;
reg   [9:0] ofm_buffer0_48_address0;
reg    ofm_buffer0_48_ce0;
reg    ofm_buffer0_48_we0;
wire   [31:0] ofm_buffer0_48_q0;
reg    ofm_buffer0_48_ce1;
wire   [31:0] ofm_buffer0_48_q1;
reg   [9:0] ofm_buffer0_49_address0;
reg    ofm_buffer0_49_ce0;
reg    ofm_buffer0_49_we0;
wire   [31:0] ofm_buffer0_49_q0;
reg    ofm_buffer0_49_ce1;
wire   [31:0] ofm_buffer0_49_q1;
reg   [9:0] ofm_buffer0_50_address0;
reg    ofm_buffer0_50_ce0;
reg    ofm_buffer0_50_we0;
wire   [31:0] ofm_buffer0_50_q0;
reg    ofm_buffer0_50_ce1;
wire   [31:0] ofm_buffer0_50_q1;
reg   [9:0] ofm_buffer0_51_address0;
reg    ofm_buffer0_51_ce0;
reg    ofm_buffer0_51_we0;
wire   [31:0] ofm_buffer0_51_q0;
reg    ofm_buffer0_51_ce1;
wire   [31:0] ofm_buffer0_51_q1;
reg   [9:0] ofm_buffer0_52_address0;
reg    ofm_buffer0_52_ce0;
reg    ofm_buffer0_52_we0;
wire   [31:0] ofm_buffer0_52_q0;
reg    ofm_buffer0_52_ce1;
wire   [31:0] ofm_buffer0_52_q1;
reg   [9:0] ofm_buffer0_53_address0;
reg    ofm_buffer0_53_ce0;
reg    ofm_buffer0_53_we0;
wire   [31:0] ofm_buffer0_53_q0;
reg    ofm_buffer0_53_ce1;
wire   [31:0] ofm_buffer0_53_q1;
reg   [9:0] ofm_buffer0_54_address0;
reg    ofm_buffer0_54_ce0;
reg    ofm_buffer0_54_we0;
wire   [31:0] ofm_buffer0_54_q0;
reg    ofm_buffer0_54_ce1;
wire   [31:0] ofm_buffer0_54_q1;
reg   [9:0] ofm_buffer0_55_address0;
reg    ofm_buffer0_55_ce0;
reg    ofm_buffer0_55_we0;
wire   [31:0] ofm_buffer0_55_q0;
reg    ofm_buffer0_55_ce1;
wire   [31:0] ofm_buffer0_55_q1;
reg   [9:0] ofm_buffer0_56_address0;
reg    ofm_buffer0_56_ce0;
reg    ofm_buffer0_56_we0;
wire   [31:0] ofm_buffer0_56_q0;
reg    ofm_buffer0_56_ce1;
wire   [31:0] ofm_buffer0_56_q1;
reg   [9:0] ofm_buffer0_57_address0;
reg    ofm_buffer0_57_ce0;
reg    ofm_buffer0_57_we0;
wire   [31:0] ofm_buffer0_57_q0;
reg    ofm_buffer0_57_ce1;
wire   [31:0] ofm_buffer0_57_q1;
reg   [9:0] ofm_buffer0_58_address0;
reg    ofm_buffer0_58_ce0;
reg    ofm_buffer0_58_we0;
wire   [31:0] ofm_buffer0_58_q0;
reg    ofm_buffer0_58_ce1;
wire   [31:0] ofm_buffer0_58_q1;
reg   [9:0] ofm_buffer0_59_address0;
reg    ofm_buffer0_59_ce0;
reg    ofm_buffer0_59_we0;
wire   [31:0] ofm_buffer0_59_q0;
reg    ofm_buffer0_59_ce1;
wire   [31:0] ofm_buffer0_59_q1;
reg    DATA_BUS1_blk_n_AR;
wire    ap_CS_fsm_state7;
reg   [15:0] pad_val_read_reg_2952;
wire    ap_CS_fsm_state2;
reg   [31:0] mLoops_a1xTM_read_reg_2957;
reg   [31:0] mLoopsxTM_read_reg_2962;
reg   [31:0] OFM_num_bound_read_reg_2967;
reg   [63:0] bias_read_reg_2972;
reg   [63:0] weight_read_reg_2977;
reg   [63:0] ofm_read_reg_2982;
reg   [63:0] ifm_read_reg_2987;
wire   [4:0] empty_fu_2379_p1;
reg   [4:0] empty_reg_2992;
wire   [4:0] empty_162_fu_2391_p1;
reg   [4:0] empty_162_reg_2997;
wire   [0:0] IsNotConv_fu_2395_p1;
reg   [0:0] IsNotConv_reg_3002;
reg   [11:0] ifm_w_reg_3007;
reg   [0:0] tmp_1_reg_3012;
wire   [11:0] ifm_h_fu_2417_p1;
reg   [11:0] ifm_h_reg_3017;
reg   [11:0] ofm_w_reg_3023;
reg   [0:0] tmp_2_reg_3028;
wire   [11:0] ofm_h_fu_2439_p1;
reg   [11:0] ofm_h_reg_3033;
reg   [4:0] TR_reg_3039;
wire   [4:0] TC_fu_2453_p1;
reg   [4:0] TC_reg_3045;
reg   [5:0] TM_reg_3051;
wire   [1:0] TN_fu_2467_p1;
reg   [1:0] TN_reg_3056;
reg   [11:0] ifm_num_reg_3061;
wire   [11:0] ofm_num_fu_2481_p1;
reg   [11:0] ofm_num_reg_3066;
reg   [7:0] ksize_reg_3072;
reg   [1:0] kstride_reg_3078;
reg   [2:0] pad_int_reg_3083;
wire   [7:0] ltype_fu_2515_p1;
reg   [7:0] ltype_reg_3088;
reg   [15:0] TRow_reg_3094;
wire   [15:0] TCol_fu_2529_p1;
reg   [15:0] TCol_reg_3099;
reg   [7:0] KK_reg_3104;
reg   [0:0] IsReLU_reg_3109;
reg   [0:0] LoadBias_reg_3114;
wire   [10:0] trunc_ln637_fu_2559_p1;
reg   [10:0] trunc_ln637_reg_3119;
wire   [4:0] WeightAddInputSubInter_fu_2569_p2;
reg   [4:0] WeightAddInputSubInter_reg_3124;
reg   [10:0] tmp_reg_3129;
reg   [10:0] tmp_s_reg_3134;
wire    ap_CS_fsm_state3;
wire   [12:0] IW_align_256b_2_fu_2618_p3;
reg   [12:0] IW_align_256b_2_reg_3149;
wire   [12:0] OW_align_256b_2_fu_2642_p3;
reg   [12:0] OW_align_256b_2_reg_3154;
wire   [31:0] zext_ln636_fu_2657_p1;
reg   [31:0] zext_ln636_reg_3169;
wire    ap_CS_fsm_state6;
wire   [31:0] zext_ln642_fu_2660_p1;
reg   [31:0] zext_ln642_reg_3174;
wire   [31:0] zext_ln643_fu_2663_p1;
reg   [31:0] zext_ln643_reg_3180;
wire   [31:0] zext_ln645_fu_2666_p1;
reg   [31:0] zext_ln645_reg_3186;
wire   [31:0] zext_ln647_fu_2669_p1;
reg   [31:0] zext_ln647_reg_3194;
wire   [7:0] zext_ln648_1_fu_2672_p1;
reg   [7:0] zext_ln648_1_reg_3200;
wire   [31:0] zext_ln648_fu_2675_p1;
reg   [31:0] zext_ln648_reg_3205;
wire   [7:0] zext_ln651_fu_2678_p1;
reg   [7:0] zext_ln651_reg_3211;
wire   [4:0] InterSubBeta_fu_2681_p2;
reg   [4:0] InterSubBeta_reg_3216;
wire   [4:0] InterSubOutput_fu_2686_p2;
reg   [4:0] InterSubOutput_reg_3221;
wire  signed [23:0] grp_fu_2940_p2;
reg   [23:0] mul_ln674_reg_3226;
wire  signed [23:0] grp_fu_2946_p2;
reg   [23:0] mul_ln675_reg_3231;
wire   [7:0] K_1_fu_2691_p2;
reg   [7:0] K_1_reg_3236;
reg   [9:0] NUM_reg_3241;
reg   [61:0] p_cast_reg_3247;
wire   [31:0] NUM_cast_fu_2730_p1;
wire   [15:0] tmp_256b_0_fu_2734_p1;
reg   [15:0] tmp_256b_0_reg_3263;
wire    ap_CS_fsm_state17;
reg   [15:0] tmp_256b_1_reg_3268;
reg   [31:0] tr_6_reg_3304;
wire    ap_CS_fsm_state20;
wire   [31:0] sub_ln693_fu_2761_p2;
reg   [31:0] sub_ln693_reg_3312;
wire   [0:0] icmp_ln691_fu_2756_p2;
wire   [7:0] trunc_ln693_fu_2766_p1;
reg   [7:0] trunc_ln693_reg_3317;
wire   [7:0] TR_MIN_fu_2774_p3;
reg   [7:0] TR_MIN_reg_3322;
wire    ap_CS_fsm_state21;
wire   [31:0] sub_ln696_fu_2785_p2;
reg   [31:0] sub_ln696_reg_3331;
wire    ap_CS_fsm_state22;
wire   [0:0] icmp_ln694_fu_2780_p2;
wire   [7:0] trunc_ln696_fu_2790_p1;
reg   [7:0] trunc_ln696_reg_3336;
wire   [7:0] TC_MIN_fu_2807_p3;
reg   [7:0] TC_MIN_reg_3341;
wire    ap_CS_fsm_state23;
wire   [31:0] sub_ln700_fu_2818_p2;
reg   [31:0] sub_ln700_reg_3350;
wire    ap_CS_fsm_state24;
wire   [0:0] icmp_ln698_fu_2813_p2;
wire   [0:0] input_flag_fu_2823_p2;
reg   [0:0] input_flag_reg_3356;
wire   [0:0] process_flag_fu_2839_p2;
reg   [0:0] process_flag_reg_3361;
wire   [0:0] write_flag_fu_2850_p3;
reg   [0:0] write_flag_reg_3366;
wire   [15:0] trunc_ln684_fu_2857_p1;
reg   [15:0] trunc_ln684_reg_3371;
wire   [15:0] trunc_ln684_1_fu_2861_p1;
reg   [15:0] trunc_ln684_1_reg_3377;
wire   [31:0] tc_6_fu_2864_p2;
wire   [31:0] TM_MIN_fu_2873_p3;
reg   [31:0] TM_MIN_reg_3388;
wire    ap_CS_fsm_state25;
wire   [15:0] trunc_ln711_fu_2895_p1;
reg   [15:0] trunc_ln711_reg_3405;
wire    ap_CS_fsm_state26;
reg   [0:0] pingpongm_reg_1274;
wire   [7:0] trunc_ln711_1_fu_2900_p1;
reg   [7:0] trunc_ln711_1_reg_3410;
wire   [15:0] trunc_ln720_fu_2905_p1;
reg   [15:0] trunc_ln720_reg_3415;
wire   [7:0] trunc_ln720_1_fu_2910_p1;
reg   [7:0] trunc_ln720_1_reg_3420;
wire   [31:0] tm_3_fu_2935_p2;
wire    ap_CS_fsm_state27;
wire    grp_FPGA_Acc_Pipeline_1_fu_1299_ap_start;
wire    grp_FPGA_Acc_Pipeline_1_fu_1299_ap_done;
wire    grp_FPGA_Acc_Pipeline_1_fu_1299_ap_idle;
wire    grp_FPGA_Acc_Pipeline_1_fu_1299_ap_ready;
wire    grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWVALID;
wire   [63:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWADDR;
wire   [0:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWID;
wire   [31:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWLEN;
wire   [2:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWSIZE;
wire   [1:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWBURST;
wire   [1:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWLOCK;
wire   [3:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWCACHE;
wire   [2:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWPROT;
wire   [3:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWQOS;
wire   [3:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWREGION;
wire   [0:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWUSER;
wire    grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_WVALID;
wire   [31:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_WDATA;
wire   [3:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_WSTRB;
wire    grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_WLAST;
wire   [0:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_WID;
wire   [0:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_WUSER;
wire    grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARVALID;
wire   [63:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARADDR;
wire   [0:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARID;
wire   [31:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARLEN;
wire   [2:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARSIZE;
wire   [1:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARBURST;
wire   [1:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARLOCK;
wire   [3:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARCACHE;
wire   [2:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARPROT;
wire   [3:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARQOS;
wire   [3:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARREGION;
wire   [0:0] grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARUSER;
wire    grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_RREADY;
wire    grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_BREADY;
wire   [9:0] grp_FPGA_Acc_Pipeline_1_fu_1299_local_buf_1_address0;
wire    grp_FPGA_Acc_Pipeline_1_fu_1299_local_buf_1_ce0;
wire    grp_FPGA_Acc_Pipeline_1_fu_1299_local_buf_1_we0;
wire   [31:0] grp_FPGA_Acc_Pipeline_1_fu_1299_local_buf_1_d0;
wire    grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_ap_start;
wire    grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_ap_done;
wire    grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_ap_idle;
wire    grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_ap_ready;
wire   [9:0] grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_bias_buffer_address0;
wire    grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_bias_buffer_ce0;
wire    grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_bias_buffer_we0;
wire   [15:0] grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_bias_buffer_d0;
wire   [9:0] grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_local_buf_1_address0;
wire    grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_local_buf_1_ce0;
wire    grp_load_compute_wrapper_fu_1320_ap_start;
wire    grp_load_compute_wrapper_fu_1320_ap_done;
wire    grp_load_compute_wrapper_fu_1320_ap_idle;
wire    grp_load_compute_wrapper_fu_1320_ap_ready;
wire    grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWVALID;
wire   [63:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWADDR;
wire   [0:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWID;
wire   [31:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWLEN;
wire   [2:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWSIZE;
wire   [1:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWBURST;
wire   [1:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWLOCK;
wire   [3:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWCACHE;
wire   [2:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWPROT;
wire   [3:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWQOS;
wire   [3:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWREGION;
wire   [0:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWUSER;
wire    grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_WVALID;
wire   [31:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_WDATA;
wire   [3:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_WSTRB;
wire    grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_WLAST;
wire   [0:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_WID;
wire   [0:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_WUSER;
wire    grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARVALID;
wire   [63:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARADDR;
wire   [0:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARID;
wire   [31:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARLEN;
wire   [2:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARSIZE;
wire   [1:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARBURST;
wire   [1:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARLOCK;
wire   [3:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARCACHE;
wire   [2:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARPROT;
wire   [3:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARQOS;
wire   [3:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARREGION;
wire   [0:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARUSER;
wire    grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_RREADY;
wire    grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_BREADY;
wire    grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWVALID;
wire   [63:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWADDR;
wire   [0:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWID;
wire   [31:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWLEN;
wire   [2:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWSIZE;
wire   [1:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWBURST;
wire   [1:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWLOCK;
wire   [3:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWCACHE;
wire   [2:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWPROT;
wire   [3:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWQOS;
wire   [3:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWREGION;
wire   [0:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWUSER;
wire    grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_WVALID;
wire   [31:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_WDATA;
wire   [3:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_WSTRB;
wire    grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_WLAST;
wire   [0:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_WID;
wire   [0:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_WUSER;
wire    grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARVALID;
wire   [63:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARADDR;
wire   [0:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARID;
wire   [31:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARLEN;
wire   [2:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARSIZE;
wire   [1:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARBURST;
wire   [1:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARLOCK;
wire   [3:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARCACHE;
wire   [2:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARPROT;
wire   [3:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARQOS;
wire   [3:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARREGION;
wire   [0:0] grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARUSER;
wire    grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_RREADY;
wire    grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_BREADY;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer1_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer1_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer1_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer1_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer1_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer1_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer1_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer2_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer2_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer2_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer2_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer2_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer2_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer2_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer3_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer3_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer3_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer3_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer3_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer3_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer3_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer4_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer4_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer4_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer4_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer4_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer4_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer4_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer5_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer5_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer5_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer5_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer5_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer5_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer5_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer6_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer6_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer6_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer6_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer6_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer6_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer6_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer7_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer7_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer7_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer7_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer7_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer7_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer7_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer8_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer8_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer8_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer8_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer8_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer8_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer8_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer9_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer9_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer9_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer9_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer9_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer9_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer9_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer10_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer10_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer10_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer10_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer10_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer10_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer10_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer11_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer11_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer11_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer11_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer11_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer11_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer11_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer12_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer12_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer12_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer12_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer12_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer12_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer12_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer13_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer13_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer13_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer13_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer13_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer13_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer13_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer14_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer14_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer14_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer14_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer14_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer14_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer14_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer15_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer15_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer15_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer15_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer15_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer15_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer15_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer16_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer16_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer16_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer16_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer16_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer16_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer16_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer17_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer17_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer17_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer17_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer17_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer17_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer17_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer18_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer18_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer18_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer18_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer18_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer18_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer18_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer19_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer19_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer19_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer19_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer19_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer19_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer19_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer20_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer20_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer20_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer20_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer20_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer20_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer20_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer21_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer21_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer21_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer21_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer21_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer21_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer21_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer22_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer22_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer22_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer22_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer22_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer22_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer22_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer23_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer23_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer23_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer23_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer23_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer23_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer23_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer24_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer24_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer24_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer24_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer24_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer24_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer24_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer25_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer25_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer25_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer25_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer25_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer25_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer25_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer26_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer26_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer26_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer26_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer26_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer26_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer26_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer27_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer27_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer27_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer27_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer27_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer27_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer27_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer28_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer28_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer28_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer28_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer28_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer28_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer28_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer29_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer29_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer29_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer29_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer29_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer29_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer29_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer30_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer30_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer30_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer30_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer30_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer30_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer30_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer31_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer31_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer31_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer31_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer31_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer31_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer31_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer32_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer32_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer32_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer32_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer32_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer32_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer32_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer33_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer33_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer33_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer33_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer33_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer33_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer33_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer34_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer34_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer34_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer34_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer34_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer34_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer34_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer35_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer35_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer35_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer35_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer35_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer35_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer35_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer36_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer36_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer36_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer36_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer36_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer36_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer36_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer37_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer37_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer37_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer37_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer37_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer37_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer37_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer38_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer38_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer38_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer38_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer38_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer38_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer38_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer39_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer39_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer39_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer39_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer39_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer39_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer39_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer40_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer40_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer40_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer40_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer40_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer40_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer40_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer41_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer41_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer41_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer41_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer41_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer41_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer41_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer42_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer42_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer42_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer42_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer42_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer42_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer42_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer43_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer43_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer43_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer43_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer43_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer43_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer43_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer44_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer44_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer44_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer44_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer44_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer44_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer44_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer45_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer45_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer45_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer45_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer45_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer45_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer45_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer46_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer46_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer46_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer46_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer46_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer46_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer46_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer47_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer47_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer47_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer47_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer47_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer47_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer47_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer48_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer48_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer48_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer48_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer48_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer48_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer48_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer49_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer49_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer49_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer49_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer49_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer49_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer49_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer50_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer50_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer50_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer50_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer50_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer50_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer50_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer51_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer51_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer51_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer51_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer51_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer51_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer51_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer52_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer52_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer52_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer52_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer52_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer52_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer52_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer53_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer53_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer53_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer53_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer53_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer53_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer53_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer54_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer54_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer54_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer54_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer54_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer54_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer54_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer55_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer55_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer55_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer55_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer55_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer55_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer55_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer56_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer56_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer56_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer56_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer56_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer56_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer56_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer57_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer57_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer57_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer57_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer57_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer57_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer57_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer58_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer58_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer58_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer58_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer58_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer58_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer58_q1;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer59_address0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer59_ce0;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer59_we0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer59_d0;
wire   [9:0] grp_load_compute_wrapper_fu_1320_ofm_buffer59_address1;
wire    grp_load_compute_wrapper_fu_1320_ofm_buffer59_ce1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_ofm_buffer59_q1;
reg   [31:0] grp_load_compute_wrapper_fu_1320_p_read;
reg   [31:0] grp_load_compute_wrapper_fu_1320_p_read1;
reg   [0:0] grp_load_compute_wrapper_fu_1320_pingpongx_offset;
wire   [9:0] grp_load_compute_wrapper_fu_1320_bias_buffer_address0;
wire    grp_load_compute_wrapper_fu_1320_bias_buffer_ce0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ap_return_0;
wire   [31:0] grp_load_compute_wrapper_fu_1320_ap_return_1;
wire    grp_write_back_output_reorg_fu_2168_ap_start;
wire    grp_write_back_output_reorg_fu_2168_ap_done;
wire    grp_write_back_output_reorg_fu_2168_ap_idle;
wire    grp_write_back_output_reorg_fu_2168_ap_ready;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_0_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_0_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_0_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_1_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_1_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_1_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_2_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_2_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_2_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_3_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_3_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_3_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_4_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_4_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_4_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_5_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_5_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_5_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_6_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_6_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_6_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_7_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_7_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_7_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_8_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_8_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_8_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_9_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_9_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_9_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_10_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_10_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_10_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_11_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_11_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_11_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_12_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_12_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_12_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_13_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_13_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_13_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_14_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_14_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_14_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_15_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_15_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_15_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_16_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_16_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_16_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_17_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_17_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_17_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_18_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_18_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_18_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_19_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_19_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_19_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_20_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_20_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_20_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_21_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_21_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_21_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_22_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_22_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_22_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_23_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_23_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_23_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_24_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_24_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_24_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_25_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_25_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_25_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_26_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_26_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_26_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_27_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_27_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_27_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_28_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_28_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_28_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_29_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_29_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_29_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_30_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_30_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_30_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_31_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_31_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_31_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_32_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_32_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_32_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_33_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_33_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_33_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_34_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_34_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_34_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_35_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_35_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_35_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_36_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_36_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_36_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_37_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_37_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_37_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_38_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_38_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_38_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_39_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_39_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_39_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_40_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_40_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_40_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_41_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_41_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_41_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_42_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_42_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_42_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_43_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_43_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_43_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_44_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_44_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_44_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_45_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_45_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_45_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_46_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_46_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_46_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_47_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_47_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_47_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_48_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_48_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_48_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_49_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_49_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_49_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_50_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_50_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_50_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_51_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_51_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_51_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_52_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_52_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_52_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_53_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_53_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_53_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_54_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_54_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_54_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_55_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_55_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_55_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_56_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_56_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_56_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_57_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_57_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_57_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_58_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_58_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_58_q0;
wire   [9:0] grp_write_back_output_reorg_fu_2168_output_buffer_59_address0;
wire    grp_write_back_output_reorg_fu_2168_output_buffer_59_ce0;
reg   [31:0] grp_write_back_output_reorg_fu_2168_output_buffer_59_q0;
wire    grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWVALID;
wire   [63:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWADDR;
wire   [0:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWID;
wire   [31:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWLEN;
wire   [2:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWSIZE;
wire   [1:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWBURST;
wire   [1:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWLOCK;
wire   [3:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWCACHE;
wire   [2:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWPROT;
wire   [3:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWQOS;
wire   [3:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWREGION;
wire   [0:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWUSER;
wire    grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_WVALID;
wire   [31:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_WDATA;
wire   [3:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_WSTRB;
wire    grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_WLAST;
wire   [0:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_WID;
wire   [0:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_WUSER;
wire    grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARVALID;
wire   [63:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARADDR;
wire   [0:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARID;
wire   [31:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARLEN;
wire   [2:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARSIZE;
wire   [1:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARBURST;
wire   [1:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARLOCK;
wire   [3:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARCACHE;
wire   [2:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARPROT;
wire   [3:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARQOS;
wire   [3:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARREGION;
wire   [0:0] grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARUSER;
wire    grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_RREADY;
wire    grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_BREADY;
reg   [15:0] grp_write_back_output_reorg_fu_2168_m;
reg   [7:0] grp_write_back_output_reorg_fu_2168_TM_MIN;
wire    grp_write_back_output_reorg_fu_2168_IsNL;
wire    grp_write_back_output_reorg_fu_2168_enable;
reg    DATA_BUS_AWVALID;
wire    DATA_BUS_AWREADY;
reg    DATA_BUS_WVALID;
wire    DATA_BUS_WREADY;
reg    DATA_BUS_ARVALID;
wire    DATA_BUS_ARREADY;
wire    DATA_BUS_RVALID;
reg    DATA_BUS_RREADY;
wire   [31:0] DATA_BUS_RDATA;
wire    DATA_BUS_RLAST;
wire   [0:0] DATA_BUS_RID;
wire   [0:0] DATA_BUS_RUSER;
wire   [1:0] DATA_BUS_RRESP;
wire    DATA_BUS_BVALID;
reg    DATA_BUS_BREADY;
wire   [1:0] DATA_BUS_BRESP;
wire   [0:0] DATA_BUS_BID;
wire   [0:0] DATA_BUS_BUSER;
wire    DATA_BUS1_AWREADY;
wire    DATA_BUS1_WREADY;
reg    DATA_BUS1_ARVALID;
wire    DATA_BUS1_ARREADY;
reg   [63:0] DATA_BUS1_ARADDR;
reg   [0:0] DATA_BUS1_ARID;
reg   [31:0] DATA_BUS1_ARLEN;
reg   [2:0] DATA_BUS1_ARSIZE;
reg   [1:0] DATA_BUS1_ARBURST;
reg   [1:0] DATA_BUS1_ARLOCK;
reg   [3:0] DATA_BUS1_ARCACHE;
reg   [2:0] DATA_BUS1_ARPROT;
reg   [3:0] DATA_BUS1_ARQOS;
reg   [3:0] DATA_BUS1_ARREGION;
reg   [0:0] DATA_BUS1_ARUSER;
wire    DATA_BUS1_RVALID;
reg    DATA_BUS1_RREADY;
wire   [31:0] DATA_BUS1_RDATA;
wire    DATA_BUS1_RLAST;
wire   [0:0] DATA_BUS1_RID;
wire   [0:0] DATA_BUS1_RUSER;
wire   [1:0] DATA_BUS1_RRESP;
wire    DATA_BUS1_BVALID;
wire   [1:0] DATA_BUS1_BRESP;
wire   [0:0] DATA_BUS1_BID;
wire   [0:0] DATA_BUS1_BUSER;
reg   [31:0] tc_reg_1250;
reg   [31:0] tm_reg_1262;
reg    ap_block_state27_on_subcall_done;
reg   [0:0] ap_phi_mux_pingpongm_1_phi_fu_1290_p4;
reg    grp_FPGA_Acc_Pipeline_1_fu_1299_ap_start_reg;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
reg    grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_ap_start_reg;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
reg    grp_load_compute_wrapper_fu_1320_ap_start_reg;
reg    grp_write_back_output_reorg_fu_2168_ap_start_reg;
wire  signed [63:0] p_cast_cast_fu_2720_p1;
reg   [31:0] tr_fu_1092;
wire   [31:0] tr_7_fu_2794_p2;
reg    ap_block_state19_on_subcall_done;
reg   [31:0] m0_0_1_fu_1096;
reg   [31:0] m1_0_1_fu_1100;
reg   [31:0] TM_MIN0_0_1_fu_1104;
reg   [31:0] TM_MIN1_0_1_fu_1108;
wire    ap_CS_fsm_state16;
wire   [4:0] empty_161_fu_2387_p1;
wire   [4:0] add_ln652_fu_2563_p2;
wire   [4:0] empty_160_fu_2383_p1;
wire   [11:0] IW_align_256b_fu_2601_p3;
wire   [12:0] zext_ln665_fu_2608_p1;
wire   [12:0] IW_align_256b_1_fu_2612_p2;
wire   [11:0] OW_align_256b_fu_2625_p3;
wire   [12:0] zext_ln669_fu_2632_p1;
wire   [12:0] OW_align_256b_1_fu_2636_p2;
wire   [10:0] add_ln549_fu_2696_p2;
wire   [0:0] icmp_ln693_fu_2770_p2;
wire   [0:0] icmp_ln696_fu_2803_p2;
wire   [0:0] icmp_ln702_fu_2828_p2;
wire   [0:0] icmp_ln702_1_fu_2834_p2;
wire   [0:0] icmp_ln703_fu_2845_p2;
wire   [0:0] icmp_ln700_fu_2869_p2;
wire   [12:0] grp_fu_2940_p0;
wire   [11:0] grp_fu_2940_p1;
wire   [12:0] grp_fu_2946_p0;
wire   [11:0] grp_fu_2946_p1;
reg   [26:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
reg    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
reg    ap_ST_fsm_state27_blk;
wire   [23:0] grp_fu_2940_p00;
wire   [23:0] grp_fu_2940_p10;
wire   [23:0] grp_fu_2946_p00;
wire   [23:0] grp_fu_2946_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 27'd1;
#0 ifm_0_data_reg = 64'd0;
#0 ifm_0_vld_reg = 1'b0;
#0 ofm_0_data_reg = 64'd0;
#0 ofm_0_vld_reg = 1'b0;
#0 weight_0_data_reg = 64'd0;
#0 weight_0_vld_reg = 1'b0;
#0 bias_0_data_reg = 64'd0;
#0 bias_0_vld_reg = 1'b0;
#0 k_s_pad_ltype_0_data_reg = 32'd0;
#0 k_s_pad_ltype_0_vld_reg = 1'b0;
#0 iofm_num_0_data_reg = 32'd0;
#0 iofm_num_0_vld_reg = 1'b0;
#0 ifm_w_h_0_data_reg = 32'd0;
#0 ifm_w_h_0_vld_reg = 1'b0;
#0 ofm_w_h_0_data_reg = 32'd0;
#0 ofm_w_h_0_vld_reg = 1'b0;
#0 TRTC_0_data_reg = 32'd0;
#0 TRTC_0_vld_reg = 1'b0;
#0 TMTN_0_data_reg = 32'd0;
#0 TMTN_0_vld_reg = 1'b0;
#0 OFM_num_bound_0_data_reg = 32'd0;
#0 OFM_num_bound_0_vld_reg = 1'b0;
#0 mLoopsxTM_0_data_reg = 32'd0;
#0 mLoopsxTM_0_vld_reg = 1'b0;
#0 mLoops_a1xTM_0_data_reg = 32'd0;
#0 mLoops_a1xTM_0_vld_reg = 1'b0;
#0 pad_val_0_data_reg = 16'd0;
#0 pad_val_0_vld_reg = 1'b0;
#0 TRowTCol_0_data_reg = 32'd0;
#0 TRowTCol_0_vld_reg = 1'b0;
#0 KK_INumxKK_0_data_reg = 32'd0;
#0 KK_INumxKK_0_vld_reg = 1'b0;
#0 en_bits_0_data_reg = 32'd0;
#0 en_bits_0_vld_reg = 1'b0;
#0 WeightQ_0_data_reg = 32'd0;
#0 WeightQ_0_vld_reg = 1'b0;
#0 BetaQ_0_data_reg = 32'd0;
#0 BetaQ_0_vld_reg = 1'b0;
#0 InputQ_0_data_reg = 32'd0;
#0 InputQ_0_vld_reg = 1'b0;
#0 OutputQ_0_data_reg = 32'd0;
#0 OutputQ_0_vld_reg = 1'b0;
#0 grp_FPGA_Acc_Pipeline_1_fu_1299_ap_start_reg = 1'b0;
#0 grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_ap_start_reg = 1'b0;
#0 grp_load_compute_wrapper_fu_1320_ap_start_reg = 1'b0;
#0 grp_write_back_output_reorg_fu_2168_ap_start_reg = 1'b0;
end

FPGA_Acc_local_buf_1 #(
    .DataWidth( 32 ),
    .AddressRange( 513 ),
    .AddressWidth( 10 ))
local_buf_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(local_buf_1_address0),
    .ce0(local_buf_1_ce0),
    .we0(local_buf_1_we0),
    .d0(grp_FPGA_Acc_Pipeline_1_fu_1299_local_buf_1_d0),
    .q0(local_buf_1_q0)
);

FPGA_Acc_bias_buffer #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
bias_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bias_buffer_address0),
    .ce0(bias_buffer_ce0),
    .we0(bias_buffer_we0),
    .d0(grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_bias_buffer_d0),
    .q0(bias_buffer_q0)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_0_address0),
    .ce0(ofm_buffer1_0_ce0),
    .we0(ofm_buffer1_0_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer_d0),
    .q0(ofm_buffer1_0_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer_address1),
    .ce1(ofm_buffer1_0_ce1),
    .q1(ofm_buffer1_0_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_1_address0),
    .ce0(ofm_buffer1_1_ce0),
    .we0(ofm_buffer1_1_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer1_d0),
    .q0(ofm_buffer1_1_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer1_address1),
    .ce1(ofm_buffer1_1_ce1),
    .q1(ofm_buffer1_1_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_2_address0),
    .ce0(ofm_buffer1_2_ce0),
    .we0(ofm_buffer1_2_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer2_d0),
    .q0(ofm_buffer1_2_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer2_address1),
    .ce1(ofm_buffer1_2_ce1),
    .q1(ofm_buffer1_2_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_3_address0),
    .ce0(ofm_buffer1_3_ce0),
    .we0(ofm_buffer1_3_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer3_d0),
    .q0(ofm_buffer1_3_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer3_address1),
    .ce1(ofm_buffer1_3_ce1),
    .q1(ofm_buffer1_3_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_4_address0),
    .ce0(ofm_buffer1_4_ce0),
    .we0(ofm_buffer1_4_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer4_d0),
    .q0(ofm_buffer1_4_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer4_address1),
    .ce1(ofm_buffer1_4_ce1),
    .q1(ofm_buffer1_4_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_5_address0),
    .ce0(ofm_buffer1_5_ce0),
    .we0(ofm_buffer1_5_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer5_d0),
    .q0(ofm_buffer1_5_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer5_address1),
    .ce1(ofm_buffer1_5_ce1),
    .q1(ofm_buffer1_5_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_6_address0),
    .ce0(ofm_buffer1_6_ce0),
    .we0(ofm_buffer1_6_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer6_d0),
    .q0(ofm_buffer1_6_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer6_address1),
    .ce1(ofm_buffer1_6_ce1),
    .q1(ofm_buffer1_6_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_7_address0),
    .ce0(ofm_buffer1_7_ce0),
    .we0(ofm_buffer1_7_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer7_d0),
    .q0(ofm_buffer1_7_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer7_address1),
    .ce1(ofm_buffer1_7_ce1),
    .q1(ofm_buffer1_7_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_8_address0),
    .ce0(ofm_buffer1_8_ce0),
    .we0(ofm_buffer1_8_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer8_d0),
    .q0(ofm_buffer1_8_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer8_address1),
    .ce1(ofm_buffer1_8_ce1),
    .q1(ofm_buffer1_8_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_9_address0),
    .ce0(ofm_buffer1_9_ce0),
    .we0(ofm_buffer1_9_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer9_d0),
    .q0(ofm_buffer1_9_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer9_address1),
    .ce1(ofm_buffer1_9_ce1),
    .q1(ofm_buffer1_9_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_10_address0),
    .ce0(ofm_buffer1_10_ce0),
    .we0(ofm_buffer1_10_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer10_d0),
    .q0(ofm_buffer1_10_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer10_address1),
    .ce1(ofm_buffer1_10_ce1),
    .q1(ofm_buffer1_10_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_11_address0),
    .ce0(ofm_buffer1_11_ce0),
    .we0(ofm_buffer1_11_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer11_d0),
    .q0(ofm_buffer1_11_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer11_address1),
    .ce1(ofm_buffer1_11_ce1),
    .q1(ofm_buffer1_11_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_12_address0),
    .ce0(ofm_buffer1_12_ce0),
    .we0(ofm_buffer1_12_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer12_d0),
    .q0(ofm_buffer1_12_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer12_address1),
    .ce1(ofm_buffer1_12_ce1),
    .q1(ofm_buffer1_12_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_13_address0),
    .ce0(ofm_buffer1_13_ce0),
    .we0(ofm_buffer1_13_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer13_d0),
    .q0(ofm_buffer1_13_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer13_address1),
    .ce1(ofm_buffer1_13_ce1),
    .q1(ofm_buffer1_13_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_14_address0),
    .ce0(ofm_buffer1_14_ce0),
    .we0(ofm_buffer1_14_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer14_d0),
    .q0(ofm_buffer1_14_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer14_address1),
    .ce1(ofm_buffer1_14_ce1),
    .q1(ofm_buffer1_14_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_15_address0),
    .ce0(ofm_buffer1_15_ce0),
    .we0(ofm_buffer1_15_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer15_d0),
    .q0(ofm_buffer1_15_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer15_address1),
    .ce1(ofm_buffer1_15_ce1),
    .q1(ofm_buffer1_15_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_16_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_16_address0),
    .ce0(ofm_buffer1_16_ce0),
    .we0(ofm_buffer1_16_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer16_d0),
    .q0(ofm_buffer1_16_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer16_address1),
    .ce1(ofm_buffer1_16_ce1),
    .q1(ofm_buffer1_16_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_17_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_17_address0),
    .ce0(ofm_buffer1_17_ce0),
    .we0(ofm_buffer1_17_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer17_d0),
    .q0(ofm_buffer1_17_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer17_address1),
    .ce1(ofm_buffer1_17_ce1),
    .q1(ofm_buffer1_17_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_18_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_18_address0),
    .ce0(ofm_buffer1_18_ce0),
    .we0(ofm_buffer1_18_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer18_d0),
    .q0(ofm_buffer1_18_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer18_address1),
    .ce1(ofm_buffer1_18_ce1),
    .q1(ofm_buffer1_18_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_19_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_19_address0),
    .ce0(ofm_buffer1_19_ce0),
    .we0(ofm_buffer1_19_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer19_d0),
    .q0(ofm_buffer1_19_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer19_address1),
    .ce1(ofm_buffer1_19_ce1),
    .q1(ofm_buffer1_19_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_20_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_20_address0),
    .ce0(ofm_buffer1_20_ce0),
    .we0(ofm_buffer1_20_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer20_d0),
    .q0(ofm_buffer1_20_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer20_address1),
    .ce1(ofm_buffer1_20_ce1),
    .q1(ofm_buffer1_20_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_21_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_21_address0),
    .ce0(ofm_buffer1_21_ce0),
    .we0(ofm_buffer1_21_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer21_d0),
    .q0(ofm_buffer1_21_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer21_address1),
    .ce1(ofm_buffer1_21_ce1),
    .q1(ofm_buffer1_21_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_22_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_22_address0),
    .ce0(ofm_buffer1_22_ce0),
    .we0(ofm_buffer1_22_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer22_d0),
    .q0(ofm_buffer1_22_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer22_address1),
    .ce1(ofm_buffer1_22_ce1),
    .q1(ofm_buffer1_22_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_23_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_23_address0),
    .ce0(ofm_buffer1_23_ce0),
    .we0(ofm_buffer1_23_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer23_d0),
    .q0(ofm_buffer1_23_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer23_address1),
    .ce1(ofm_buffer1_23_ce1),
    .q1(ofm_buffer1_23_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_24_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_24_address0),
    .ce0(ofm_buffer1_24_ce0),
    .we0(ofm_buffer1_24_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer24_d0),
    .q0(ofm_buffer1_24_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer24_address1),
    .ce1(ofm_buffer1_24_ce1),
    .q1(ofm_buffer1_24_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_25_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_25_address0),
    .ce0(ofm_buffer1_25_ce0),
    .we0(ofm_buffer1_25_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer25_d0),
    .q0(ofm_buffer1_25_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer25_address1),
    .ce1(ofm_buffer1_25_ce1),
    .q1(ofm_buffer1_25_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_26_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_26_address0),
    .ce0(ofm_buffer1_26_ce0),
    .we0(ofm_buffer1_26_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer26_d0),
    .q0(ofm_buffer1_26_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer26_address1),
    .ce1(ofm_buffer1_26_ce1),
    .q1(ofm_buffer1_26_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_27_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_27_address0),
    .ce0(ofm_buffer1_27_ce0),
    .we0(ofm_buffer1_27_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer27_d0),
    .q0(ofm_buffer1_27_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer27_address1),
    .ce1(ofm_buffer1_27_ce1),
    .q1(ofm_buffer1_27_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_28_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_28_address0),
    .ce0(ofm_buffer1_28_ce0),
    .we0(ofm_buffer1_28_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer28_d0),
    .q0(ofm_buffer1_28_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer28_address1),
    .ce1(ofm_buffer1_28_ce1),
    .q1(ofm_buffer1_28_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_29_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_29_address0),
    .ce0(ofm_buffer1_29_ce0),
    .we0(ofm_buffer1_29_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer29_d0),
    .q0(ofm_buffer1_29_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer29_address1),
    .ce1(ofm_buffer1_29_ce1),
    .q1(ofm_buffer1_29_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_30_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_30_address0),
    .ce0(ofm_buffer1_30_ce0),
    .we0(ofm_buffer1_30_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer30_d0),
    .q0(ofm_buffer1_30_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer30_address1),
    .ce1(ofm_buffer1_30_ce1),
    .q1(ofm_buffer1_30_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_31_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_31_address0),
    .ce0(ofm_buffer1_31_ce0),
    .we0(ofm_buffer1_31_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer31_d0),
    .q0(ofm_buffer1_31_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer31_address1),
    .ce1(ofm_buffer1_31_ce1),
    .q1(ofm_buffer1_31_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_32_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_32_address0),
    .ce0(ofm_buffer1_32_ce0),
    .we0(ofm_buffer1_32_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer32_d0),
    .q0(ofm_buffer1_32_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer32_address1),
    .ce1(ofm_buffer1_32_ce1),
    .q1(ofm_buffer1_32_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_33_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_33_address0),
    .ce0(ofm_buffer1_33_ce0),
    .we0(ofm_buffer1_33_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer33_d0),
    .q0(ofm_buffer1_33_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer33_address1),
    .ce1(ofm_buffer1_33_ce1),
    .q1(ofm_buffer1_33_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_34_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_34_address0),
    .ce0(ofm_buffer1_34_ce0),
    .we0(ofm_buffer1_34_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer34_d0),
    .q0(ofm_buffer1_34_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer34_address1),
    .ce1(ofm_buffer1_34_ce1),
    .q1(ofm_buffer1_34_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_35_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_35_address0),
    .ce0(ofm_buffer1_35_ce0),
    .we0(ofm_buffer1_35_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer35_d0),
    .q0(ofm_buffer1_35_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer35_address1),
    .ce1(ofm_buffer1_35_ce1),
    .q1(ofm_buffer1_35_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_36_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_36_address0),
    .ce0(ofm_buffer1_36_ce0),
    .we0(ofm_buffer1_36_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer36_d0),
    .q0(ofm_buffer1_36_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer36_address1),
    .ce1(ofm_buffer1_36_ce1),
    .q1(ofm_buffer1_36_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_37_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_37_address0),
    .ce0(ofm_buffer1_37_ce0),
    .we0(ofm_buffer1_37_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer37_d0),
    .q0(ofm_buffer1_37_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer37_address1),
    .ce1(ofm_buffer1_37_ce1),
    .q1(ofm_buffer1_37_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_38_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_38_address0),
    .ce0(ofm_buffer1_38_ce0),
    .we0(ofm_buffer1_38_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer38_d0),
    .q0(ofm_buffer1_38_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer38_address1),
    .ce1(ofm_buffer1_38_ce1),
    .q1(ofm_buffer1_38_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_39_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_39_address0),
    .ce0(ofm_buffer1_39_ce0),
    .we0(ofm_buffer1_39_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer39_d0),
    .q0(ofm_buffer1_39_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer39_address1),
    .ce1(ofm_buffer1_39_ce1),
    .q1(ofm_buffer1_39_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_40_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_40_address0),
    .ce0(ofm_buffer1_40_ce0),
    .we0(ofm_buffer1_40_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer40_d0),
    .q0(ofm_buffer1_40_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer40_address1),
    .ce1(ofm_buffer1_40_ce1),
    .q1(ofm_buffer1_40_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_41_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_41_address0),
    .ce0(ofm_buffer1_41_ce0),
    .we0(ofm_buffer1_41_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer41_d0),
    .q0(ofm_buffer1_41_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer41_address1),
    .ce1(ofm_buffer1_41_ce1),
    .q1(ofm_buffer1_41_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_42_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_42_address0),
    .ce0(ofm_buffer1_42_ce0),
    .we0(ofm_buffer1_42_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer42_d0),
    .q0(ofm_buffer1_42_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer42_address1),
    .ce1(ofm_buffer1_42_ce1),
    .q1(ofm_buffer1_42_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_43_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_43_address0),
    .ce0(ofm_buffer1_43_ce0),
    .we0(ofm_buffer1_43_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer43_d0),
    .q0(ofm_buffer1_43_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer43_address1),
    .ce1(ofm_buffer1_43_ce1),
    .q1(ofm_buffer1_43_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_44_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_44_address0),
    .ce0(ofm_buffer1_44_ce0),
    .we0(ofm_buffer1_44_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer44_d0),
    .q0(ofm_buffer1_44_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer44_address1),
    .ce1(ofm_buffer1_44_ce1),
    .q1(ofm_buffer1_44_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_45_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_45_address0),
    .ce0(ofm_buffer1_45_ce0),
    .we0(ofm_buffer1_45_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer45_d0),
    .q0(ofm_buffer1_45_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer45_address1),
    .ce1(ofm_buffer1_45_ce1),
    .q1(ofm_buffer1_45_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_46_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_46_address0),
    .ce0(ofm_buffer1_46_ce0),
    .we0(ofm_buffer1_46_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer46_d0),
    .q0(ofm_buffer1_46_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer46_address1),
    .ce1(ofm_buffer1_46_ce1),
    .q1(ofm_buffer1_46_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_47_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_47_address0),
    .ce0(ofm_buffer1_47_ce0),
    .we0(ofm_buffer1_47_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer47_d0),
    .q0(ofm_buffer1_47_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer47_address1),
    .ce1(ofm_buffer1_47_ce1),
    .q1(ofm_buffer1_47_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_48_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_48_address0),
    .ce0(ofm_buffer1_48_ce0),
    .we0(ofm_buffer1_48_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer48_d0),
    .q0(ofm_buffer1_48_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer48_address1),
    .ce1(ofm_buffer1_48_ce1),
    .q1(ofm_buffer1_48_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_49_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_49_address0),
    .ce0(ofm_buffer1_49_ce0),
    .we0(ofm_buffer1_49_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer49_d0),
    .q0(ofm_buffer1_49_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer49_address1),
    .ce1(ofm_buffer1_49_ce1),
    .q1(ofm_buffer1_49_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_50_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_50_address0),
    .ce0(ofm_buffer1_50_ce0),
    .we0(ofm_buffer1_50_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer50_d0),
    .q0(ofm_buffer1_50_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer50_address1),
    .ce1(ofm_buffer1_50_ce1),
    .q1(ofm_buffer1_50_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_51_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_51_address0),
    .ce0(ofm_buffer1_51_ce0),
    .we0(ofm_buffer1_51_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer51_d0),
    .q0(ofm_buffer1_51_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer51_address1),
    .ce1(ofm_buffer1_51_ce1),
    .q1(ofm_buffer1_51_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_52_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_52_address0),
    .ce0(ofm_buffer1_52_ce0),
    .we0(ofm_buffer1_52_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer52_d0),
    .q0(ofm_buffer1_52_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer52_address1),
    .ce1(ofm_buffer1_52_ce1),
    .q1(ofm_buffer1_52_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_53_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_53_address0),
    .ce0(ofm_buffer1_53_ce0),
    .we0(ofm_buffer1_53_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer53_d0),
    .q0(ofm_buffer1_53_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer53_address1),
    .ce1(ofm_buffer1_53_ce1),
    .q1(ofm_buffer1_53_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_54_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_54_address0),
    .ce0(ofm_buffer1_54_ce0),
    .we0(ofm_buffer1_54_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer54_d0),
    .q0(ofm_buffer1_54_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer54_address1),
    .ce1(ofm_buffer1_54_ce1),
    .q1(ofm_buffer1_54_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_55_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_55_address0),
    .ce0(ofm_buffer1_55_ce0),
    .we0(ofm_buffer1_55_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer55_d0),
    .q0(ofm_buffer1_55_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer55_address1),
    .ce1(ofm_buffer1_55_ce1),
    .q1(ofm_buffer1_55_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_56_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_56_address0),
    .ce0(ofm_buffer1_56_ce0),
    .we0(ofm_buffer1_56_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer56_d0),
    .q0(ofm_buffer1_56_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer56_address1),
    .ce1(ofm_buffer1_56_ce1),
    .q1(ofm_buffer1_56_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_57_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_57_address0),
    .ce0(ofm_buffer1_57_ce0),
    .we0(ofm_buffer1_57_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer57_d0),
    .q0(ofm_buffer1_57_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer57_address1),
    .ce1(ofm_buffer1_57_ce1),
    .q1(ofm_buffer1_57_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_58_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_58_address0),
    .ce0(ofm_buffer1_58_ce0),
    .we0(ofm_buffer1_58_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer58_d0),
    .q0(ofm_buffer1_58_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer58_address1),
    .ce1(ofm_buffer1_58_ce1),
    .q1(ofm_buffer1_58_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer1_59_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer1_59_address0),
    .ce0(ofm_buffer1_59_ce0),
    .we0(ofm_buffer1_59_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer59_d0),
    .q0(ofm_buffer1_59_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer59_address1),
    .ce1(ofm_buffer1_59_ce1),
    .q1(ofm_buffer1_59_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_0_address0),
    .ce0(ofm_buffer0_0_ce0),
    .we0(ofm_buffer0_0_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer_d0),
    .q0(ofm_buffer0_0_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer_address1),
    .ce1(ofm_buffer0_0_ce1),
    .q1(ofm_buffer0_0_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_1_address0),
    .ce0(ofm_buffer0_1_ce0),
    .we0(ofm_buffer0_1_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer1_d0),
    .q0(ofm_buffer0_1_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer1_address1),
    .ce1(ofm_buffer0_1_ce1),
    .q1(ofm_buffer0_1_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_2_address0),
    .ce0(ofm_buffer0_2_ce0),
    .we0(ofm_buffer0_2_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer2_d0),
    .q0(ofm_buffer0_2_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer2_address1),
    .ce1(ofm_buffer0_2_ce1),
    .q1(ofm_buffer0_2_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_3_address0),
    .ce0(ofm_buffer0_3_ce0),
    .we0(ofm_buffer0_3_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer3_d0),
    .q0(ofm_buffer0_3_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer3_address1),
    .ce1(ofm_buffer0_3_ce1),
    .q1(ofm_buffer0_3_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_4_address0),
    .ce0(ofm_buffer0_4_ce0),
    .we0(ofm_buffer0_4_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer4_d0),
    .q0(ofm_buffer0_4_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer4_address1),
    .ce1(ofm_buffer0_4_ce1),
    .q1(ofm_buffer0_4_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_5_address0),
    .ce0(ofm_buffer0_5_ce0),
    .we0(ofm_buffer0_5_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer5_d0),
    .q0(ofm_buffer0_5_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer5_address1),
    .ce1(ofm_buffer0_5_ce1),
    .q1(ofm_buffer0_5_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_6_address0),
    .ce0(ofm_buffer0_6_ce0),
    .we0(ofm_buffer0_6_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer6_d0),
    .q0(ofm_buffer0_6_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer6_address1),
    .ce1(ofm_buffer0_6_ce1),
    .q1(ofm_buffer0_6_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_7_address0),
    .ce0(ofm_buffer0_7_ce0),
    .we0(ofm_buffer0_7_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer7_d0),
    .q0(ofm_buffer0_7_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer7_address1),
    .ce1(ofm_buffer0_7_ce1),
    .q1(ofm_buffer0_7_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_8_address0),
    .ce0(ofm_buffer0_8_ce0),
    .we0(ofm_buffer0_8_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer8_d0),
    .q0(ofm_buffer0_8_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer8_address1),
    .ce1(ofm_buffer0_8_ce1),
    .q1(ofm_buffer0_8_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_9_address0),
    .ce0(ofm_buffer0_9_ce0),
    .we0(ofm_buffer0_9_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer9_d0),
    .q0(ofm_buffer0_9_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer9_address1),
    .ce1(ofm_buffer0_9_ce1),
    .q1(ofm_buffer0_9_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_10_address0),
    .ce0(ofm_buffer0_10_ce0),
    .we0(ofm_buffer0_10_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer10_d0),
    .q0(ofm_buffer0_10_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer10_address1),
    .ce1(ofm_buffer0_10_ce1),
    .q1(ofm_buffer0_10_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_11_address0),
    .ce0(ofm_buffer0_11_ce0),
    .we0(ofm_buffer0_11_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer11_d0),
    .q0(ofm_buffer0_11_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer11_address1),
    .ce1(ofm_buffer0_11_ce1),
    .q1(ofm_buffer0_11_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_12_address0),
    .ce0(ofm_buffer0_12_ce0),
    .we0(ofm_buffer0_12_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer12_d0),
    .q0(ofm_buffer0_12_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer12_address1),
    .ce1(ofm_buffer0_12_ce1),
    .q1(ofm_buffer0_12_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_13_address0),
    .ce0(ofm_buffer0_13_ce0),
    .we0(ofm_buffer0_13_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer13_d0),
    .q0(ofm_buffer0_13_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer13_address1),
    .ce1(ofm_buffer0_13_ce1),
    .q1(ofm_buffer0_13_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_14_address0),
    .ce0(ofm_buffer0_14_ce0),
    .we0(ofm_buffer0_14_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer14_d0),
    .q0(ofm_buffer0_14_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer14_address1),
    .ce1(ofm_buffer0_14_ce1),
    .q1(ofm_buffer0_14_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_15_address0),
    .ce0(ofm_buffer0_15_ce0),
    .we0(ofm_buffer0_15_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer15_d0),
    .q0(ofm_buffer0_15_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer15_address1),
    .ce1(ofm_buffer0_15_ce1),
    .q1(ofm_buffer0_15_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_16_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_16_address0),
    .ce0(ofm_buffer0_16_ce0),
    .we0(ofm_buffer0_16_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer16_d0),
    .q0(ofm_buffer0_16_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer16_address1),
    .ce1(ofm_buffer0_16_ce1),
    .q1(ofm_buffer0_16_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_17_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_17_address0),
    .ce0(ofm_buffer0_17_ce0),
    .we0(ofm_buffer0_17_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer17_d0),
    .q0(ofm_buffer0_17_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer17_address1),
    .ce1(ofm_buffer0_17_ce1),
    .q1(ofm_buffer0_17_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_18_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_18_address0),
    .ce0(ofm_buffer0_18_ce0),
    .we0(ofm_buffer0_18_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer18_d0),
    .q0(ofm_buffer0_18_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer18_address1),
    .ce1(ofm_buffer0_18_ce1),
    .q1(ofm_buffer0_18_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_19_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_19_address0),
    .ce0(ofm_buffer0_19_ce0),
    .we0(ofm_buffer0_19_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer19_d0),
    .q0(ofm_buffer0_19_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer19_address1),
    .ce1(ofm_buffer0_19_ce1),
    .q1(ofm_buffer0_19_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_20_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_20_address0),
    .ce0(ofm_buffer0_20_ce0),
    .we0(ofm_buffer0_20_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer20_d0),
    .q0(ofm_buffer0_20_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer20_address1),
    .ce1(ofm_buffer0_20_ce1),
    .q1(ofm_buffer0_20_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_21_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_21_address0),
    .ce0(ofm_buffer0_21_ce0),
    .we0(ofm_buffer0_21_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer21_d0),
    .q0(ofm_buffer0_21_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer21_address1),
    .ce1(ofm_buffer0_21_ce1),
    .q1(ofm_buffer0_21_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_22_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_22_address0),
    .ce0(ofm_buffer0_22_ce0),
    .we0(ofm_buffer0_22_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer22_d0),
    .q0(ofm_buffer0_22_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer22_address1),
    .ce1(ofm_buffer0_22_ce1),
    .q1(ofm_buffer0_22_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_23_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_23_address0),
    .ce0(ofm_buffer0_23_ce0),
    .we0(ofm_buffer0_23_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer23_d0),
    .q0(ofm_buffer0_23_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer23_address1),
    .ce1(ofm_buffer0_23_ce1),
    .q1(ofm_buffer0_23_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_24_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_24_address0),
    .ce0(ofm_buffer0_24_ce0),
    .we0(ofm_buffer0_24_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer24_d0),
    .q0(ofm_buffer0_24_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer24_address1),
    .ce1(ofm_buffer0_24_ce1),
    .q1(ofm_buffer0_24_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_25_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_25_address0),
    .ce0(ofm_buffer0_25_ce0),
    .we0(ofm_buffer0_25_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer25_d0),
    .q0(ofm_buffer0_25_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer25_address1),
    .ce1(ofm_buffer0_25_ce1),
    .q1(ofm_buffer0_25_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_26_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_26_address0),
    .ce0(ofm_buffer0_26_ce0),
    .we0(ofm_buffer0_26_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer26_d0),
    .q0(ofm_buffer0_26_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer26_address1),
    .ce1(ofm_buffer0_26_ce1),
    .q1(ofm_buffer0_26_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_27_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_27_address0),
    .ce0(ofm_buffer0_27_ce0),
    .we0(ofm_buffer0_27_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer27_d0),
    .q0(ofm_buffer0_27_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer27_address1),
    .ce1(ofm_buffer0_27_ce1),
    .q1(ofm_buffer0_27_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_28_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_28_address0),
    .ce0(ofm_buffer0_28_ce0),
    .we0(ofm_buffer0_28_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer28_d0),
    .q0(ofm_buffer0_28_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer28_address1),
    .ce1(ofm_buffer0_28_ce1),
    .q1(ofm_buffer0_28_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_29_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_29_address0),
    .ce0(ofm_buffer0_29_ce0),
    .we0(ofm_buffer0_29_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer29_d0),
    .q0(ofm_buffer0_29_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer29_address1),
    .ce1(ofm_buffer0_29_ce1),
    .q1(ofm_buffer0_29_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_30_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_30_address0),
    .ce0(ofm_buffer0_30_ce0),
    .we0(ofm_buffer0_30_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer30_d0),
    .q0(ofm_buffer0_30_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer30_address1),
    .ce1(ofm_buffer0_30_ce1),
    .q1(ofm_buffer0_30_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_31_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_31_address0),
    .ce0(ofm_buffer0_31_ce0),
    .we0(ofm_buffer0_31_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer31_d0),
    .q0(ofm_buffer0_31_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer31_address1),
    .ce1(ofm_buffer0_31_ce1),
    .q1(ofm_buffer0_31_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_32_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_32_address0),
    .ce0(ofm_buffer0_32_ce0),
    .we0(ofm_buffer0_32_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer32_d0),
    .q0(ofm_buffer0_32_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer32_address1),
    .ce1(ofm_buffer0_32_ce1),
    .q1(ofm_buffer0_32_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_33_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_33_address0),
    .ce0(ofm_buffer0_33_ce0),
    .we0(ofm_buffer0_33_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer33_d0),
    .q0(ofm_buffer0_33_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer33_address1),
    .ce1(ofm_buffer0_33_ce1),
    .q1(ofm_buffer0_33_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_34_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_34_address0),
    .ce0(ofm_buffer0_34_ce0),
    .we0(ofm_buffer0_34_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer34_d0),
    .q0(ofm_buffer0_34_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer34_address1),
    .ce1(ofm_buffer0_34_ce1),
    .q1(ofm_buffer0_34_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_35_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_35_address0),
    .ce0(ofm_buffer0_35_ce0),
    .we0(ofm_buffer0_35_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer35_d0),
    .q0(ofm_buffer0_35_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer35_address1),
    .ce1(ofm_buffer0_35_ce1),
    .q1(ofm_buffer0_35_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_36_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_36_address0),
    .ce0(ofm_buffer0_36_ce0),
    .we0(ofm_buffer0_36_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer36_d0),
    .q0(ofm_buffer0_36_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer36_address1),
    .ce1(ofm_buffer0_36_ce1),
    .q1(ofm_buffer0_36_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_37_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_37_address0),
    .ce0(ofm_buffer0_37_ce0),
    .we0(ofm_buffer0_37_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer37_d0),
    .q0(ofm_buffer0_37_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer37_address1),
    .ce1(ofm_buffer0_37_ce1),
    .q1(ofm_buffer0_37_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_38_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_38_address0),
    .ce0(ofm_buffer0_38_ce0),
    .we0(ofm_buffer0_38_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer38_d0),
    .q0(ofm_buffer0_38_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer38_address1),
    .ce1(ofm_buffer0_38_ce1),
    .q1(ofm_buffer0_38_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_39_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_39_address0),
    .ce0(ofm_buffer0_39_ce0),
    .we0(ofm_buffer0_39_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer39_d0),
    .q0(ofm_buffer0_39_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer39_address1),
    .ce1(ofm_buffer0_39_ce1),
    .q1(ofm_buffer0_39_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_40_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_40_address0),
    .ce0(ofm_buffer0_40_ce0),
    .we0(ofm_buffer0_40_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer40_d0),
    .q0(ofm_buffer0_40_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer40_address1),
    .ce1(ofm_buffer0_40_ce1),
    .q1(ofm_buffer0_40_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_41_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_41_address0),
    .ce0(ofm_buffer0_41_ce0),
    .we0(ofm_buffer0_41_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer41_d0),
    .q0(ofm_buffer0_41_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer41_address1),
    .ce1(ofm_buffer0_41_ce1),
    .q1(ofm_buffer0_41_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_42_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_42_address0),
    .ce0(ofm_buffer0_42_ce0),
    .we0(ofm_buffer0_42_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer42_d0),
    .q0(ofm_buffer0_42_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer42_address1),
    .ce1(ofm_buffer0_42_ce1),
    .q1(ofm_buffer0_42_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_43_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_43_address0),
    .ce0(ofm_buffer0_43_ce0),
    .we0(ofm_buffer0_43_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer43_d0),
    .q0(ofm_buffer0_43_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer43_address1),
    .ce1(ofm_buffer0_43_ce1),
    .q1(ofm_buffer0_43_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_44_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_44_address0),
    .ce0(ofm_buffer0_44_ce0),
    .we0(ofm_buffer0_44_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer44_d0),
    .q0(ofm_buffer0_44_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer44_address1),
    .ce1(ofm_buffer0_44_ce1),
    .q1(ofm_buffer0_44_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_45_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_45_address0),
    .ce0(ofm_buffer0_45_ce0),
    .we0(ofm_buffer0_45_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer45_d0),
    .q0(ofm_buffer0_45_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer45_address1),
    .ce1(ofm_buffer0_45_ce1),
    .q1(ofm_buffer0_45_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_46_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_46_address0),
    .ce0(ofm_buffer0_46_ce0),
    .we0(ofm_buffer0_46_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer46_d0),
    .q0(ofm_buffer0_46_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer46_address1),
    .ce1(ofm_buffer0_46_ce1),
    .q1(ofm_buffer0_46_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_47_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_47_address0),
    .ce0(ofm_buffer0_47_ce0),
    .we0(ofm_buffer0_47_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer47_d0),
    .q0(ofm_buffer0_47_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer47_address1),
    .ce1(ofm_buffer0_47_ce1),
    .q1(ofm_buffer0_47_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_48_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_48_address0),
    .ce0(ofm_buffer0_48_ce0),
    .we0(ofm_buffer0_48_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer48_d0),
    .q0(ofm_buffer0_48_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer48_address1),
    .ce1(ofm_buffer0_48_ce1),
    .q1(ofm_buffer0_48_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_49_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_49_address0),
    .ce0(ofm_buffer0_49_ce0),
    .we0(ofm_buffer0_49_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer49_d0),
    .q0(ofm_buffer0_49_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer49_address1),
    .ce1(ofm_buffer0_49_ce1),
    .q1(ofm_buffer0_49_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_50_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_50_address0),
    .ce0(ofm_buffer0_50_ce0),
    .we0(ofm_buffer0_50_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer50_d0),
    .q0(ofm_buffer0_50_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer50_address1),
    .ce1(ofm_buffer0_50_ce1),
    .q1(ofm_buffer0_50_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_51_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_51_address0),
    .ce0(ofm_buffer0_51_ce0),
    .we0(ofm_buffer0_51_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer51_d0),
    .q0(ofm_buffer0_51_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer51_address1),
    .ce1(ofm_buffer0_51_ce1),
    .q1(ofm_buffer0_51_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_52_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_52_address0),
    .ce0(ofm_buffer0_52_ce0),
    .we0(ofm_buffer0_52_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer52_d0),
    .q0(ofm_buffer0_52_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer52_address1),
    .ce1(ofm_buffer0_52_ce1),
    .q1(ofm_buffer0_52_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_53_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_53_address0),
    .ce0(ofm_buffer0_53_ce0),
    .we0(ofm_buffer0_53_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer53_d0),
    .q0(ofm_buffer0_53_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer53_address1),
    .ce1(ofm_buffer0_53_ce1),
    .q1(ofm_buffer0_53_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_54_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_54_address0),
    .ce0(ofm_buffer0_54_ce0),
    .we0(ofm_buffer0_54_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer54_d0),
    .q0(ofm_buffer0_54_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer54_address1),
    .ce1(ofm_buffer0_54_ce1),
    .q1(ofm_buffer0_54_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_55_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_55_address0),
    .ce0(ofm_buffer0_55_ce0),
    .we0(ofm_buffer0_55_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer55_d0),
    .q0(ofm_buffer0_55_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer55_address1),
    .ce1(ofm_buffer0_55_ce1),
    .q1(ofm_buffer0_55_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_56_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_56_address0),
    .ce0(ofm_buffer0_56_ce0),
    .we0(ofm_buffer0_56_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer56_d0),
    .q0(ofm_buffer0_56_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer56_address1),
    .ce1(ofm_buffer0_56_ce1),
    .q1(ofm_buffer0_56_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_57_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_57_address0),
    .ce0(ofm_buffer0_57_ce0),
    .we0(ofm_buffer0_57_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer57_d0),
    .q0(ofm_buffer0_57_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer57_address1),
    .ce1(ofm_buffer0_57_ce1),
    .q1(ofm_buffer0_57_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_58_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_58_address0),
    .ce0(ofm_buffer0_58_ce0),
    .we0(ofm_buffer0_58_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer58_d0),
    .q0(ofm_buffer0_58_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer58_address1),
    .ce1(ofm_buffer0_58_ce1),
    .q1(ofm_buffer0_58_q1)
);

FPGA_Acc_ofm_buffer1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
ofm_buffer0_59_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ofm_buffer0_59_address0),
    .ce0(ofm_buffer0_59_ce0),
    .we0(ofm_buffer0_59_we0),
    .d0(grp_load_compute_wrapper_fu_1320_ofm_buffer59_d0),
    .q0(ofm_buffer0_59_q0),
    .address1(grp_load_compute_wrapper_fu_1320_ofm_buffer59_address1),
    .ce1(ofm_buffer0_59_ce1),
    .q1(ofm_buffer0_59_q1)
);

FPGA_Acc_FPGA_Acc_Pipeline_1 grp_FPGA_Acc_Pipeline_1_fu_1299(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_FPGA_Acc_Pipeline_1_fu_1299_ap_start),
    .ap_done(grp_FPGA_Acc_Pipeline_1_fu_1299_ap_done),
    .ap_idle(grp_FPGA_Acc_Pipeline_1_fu_1299_ap_idle),
    .ap_ready(grp_FPGA_Acc_Pipeline_1_fu_1299_ap_ready),
    .m_axi_DATA_BUS1_AWVALID(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWVALID),
    .m_axi_DATA_BUS1_AWREADY(1'b0),
    .m_axi_DATA_BUS1_AWADDR(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWADDR),
    .m_axi_DATA_BUS1_AWID(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWID),
    .m_axi_DATA_BUS1_AWLEN(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWLEN),
    .m_axi_DATA_BUS1_AWSIZE(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWSIZE),
    .m_axi_DATA_BUS1_AWBURST(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWBURST),
    .m_axi_DATA_BUS1_AWLOCK(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWLOCK),
    .m_axi_DATA_BUS1_AWCACHE(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWCACHE),
    .m_axi_DATA_BUS1_AWPROT(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWPROT),
    .m_axi_DATA_BUS1_AWQOS(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWQOS),
    .m_axi_DATA_BUS1_AWREGION(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWREGION),
    .m_axi_DATA_BUS1_AWUSER(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_AWUSER),
    .m_axi_DATA_BUS1_WVALID(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_WVALID),
    .m_axi_DATA_BUS1_WREADY(1'b0),
    .m_axi_DATA_BUS1_WDATA(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_WDATA),
    .m_axi_DATA_BUS1_WSTRB(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_WSTRB),
    .m_axi_DATA_BUS1_WLAST(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_WLAST),
    .m_axi_DATA_BUS1_WID(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_WID),
    .m_axi_DATA_BUS1_WUSER(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_WUSER),
    .m_axi_DATA_BUS1_ARVALID(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARVALID),
    .m_axi_DATA_BUS1_ARREADY(DATA_BUS1_ARREADY),
    .m_axi_DATA_BUS1_ARADDR(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARADDR),
    .m_axi_DATA_BUS1_ARID(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARID),
    .m_axi_DATA_BUS1_ARLEN(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARLEN),
    .m_axi_DATA_BUS1_ARSIZE(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARSIZE),
    .m_axi_DATA_BUS1_ARBURST(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARBURST),
    .m_axi_DATA_BUS1_ARLOCK(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARLOCK),
    .m_axi_DATA_BUS1_ARCACHE(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARCACHE),
    .m_axi_DATA_BUS1_ARPROT(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARPROT),
    .m_axi_DATA_BUS1_ARQOS(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARQOS),
    .m_axi_DATA_BUS1_ARREGION(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARREGION),
    .m_axi_DATA_BUS1_ARUSER(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARUSER),
    .m_axi_DATA_BUS1_RVALID(DATA_BUS1_RVALID),
    .m_axi_DATA_BUS1_RREADY(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_RREADY),
    .m_axi_DATA_BUS1_RDATA(DATA_BUS1_RDATA),
    .m_axi_DATA_BUS1_RLAST(DATA_BUS1_RLAST),
    .m_axi_DATA_BUS1_RID(DATA_BUS1_RID),
    .m_axi_DATA_BUS1_RUSER(DATA_BUS1_RUSER),
    .m_axi_DATA_BUS1_RRESP(DATA_BUS1_RRESP),
    .m_axi_DATA_BUS1_BVALID(1'b0),
    .m_axi_DATA_BUS1_BREADY(grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_BREADY),
    .m_axi_DATA_BUS1_BRESP(2'd0),
    .m_axi_DATA_BUS1_BID(1'd0),
    .m_axi_DATA_BUS1_BUSER(1'd0),
    .p_cast_cast(p_cast_reg_3247),
    .NUM(NUM_reg_3241),
    .local_buf_1_address0(grp_FPGA_Acc_Pipeline_1_fu_1299_local_buf_1_address0),
    .local_buf_1_ce0(grp_FPGA_Acc_Pipeline_1_fu_1299_local_buf_1_ce0),
    .local_buf_1_we0(grp_FPGA_Acc_Pipeline_1_fu_1299_local_buf_1_we0),
    .local_buf_1_d0(grp_FPGA_Acc_Pipeline_1_fu_1299_local_buf_1_d0)
);

FPGA_Acc_FPGA_Acc_Pipeline_VITIS_LOOP_561_1 grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_ap_start),
    .ap_done(grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_ap_done),
    .ap_idle(grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_ap_idle),
    .ap_ready(grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_ap_ready),
    .tmp_256b_1(tmp_256b_1_reg_3268),
    .tmp_256b_0(tmp_256b_0_reg_3263),
    .ofm_num(ofm_num_reg_3066),
    .bias_buffer_address0(grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_bias_buffer_address0),
    .bias_buffer_ce0(grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_bias_buffer_ce0),
    .bias_buffer_we0(grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_bias_buffer_we0),
    .bias_buffer_d0(grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_bias_buffer_d0),
    .local_buf_1_address0(grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_local_buf_1_address0),
    .local_buf_1_ce0(grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_local_buf_1_ce0),
    .local_buf_1_q0(local_buf_1_q0)
);

FPGA_Acc_load_compute_wrapper grp_load_compute_wrapper_fu_1320(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_load_compute_wrapper_fu_1320_ap_start),
    .ap_done(grp_load_compute_wrapper_fu_1320_ap_done),
    .ap_idle(grp_load_compute_wrapper_fu_1320_ap_idle),
    .ap_ready(grp_load_compute_wrapper_fu_1320_ap_ready),
    .m_axi_DATA_BUS_AWVALID(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWVALID),
    .m_axi_DATA_BUS_AWREADY(1'b0),
    .m_axi_DATA_BUS_AWADDR(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWADDR),
    .m_axi_DATA_BUS_AWID(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWID),
    .m_axi_DATA_BUS_AWLEN(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWLEN),
    .m_axi_DATA_BUS_AWSIZE(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWSIZE),
    .m_axi_DATA_BUS_AWBURST(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWBURST),
    .m_axi_DATA_BUS_AWLOCK(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWLOCK),
    .m_axi_DATA_BUS_AWCACHE(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWCACHE),
    .m_axi_DATA_BUS_AWPROT(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWPROT),
    .m_axi_DATA_BUS_AWQOS(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWQOS),
    .m_axi_DATA_BUS_AWREGION(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWREGION),
    .m_axi_DATA_BUS_AWUSER(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_AWUSER),
    .m_axi_DATA_BUS_WVALID(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_WVALID),
    .m_axi_DATA_BUS_WREADY(1'b0),
    .m_axi_DATA_BUS_WDATA(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_WDATA),
    .m_axi_DATA_BUS_WSTRB(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_WSTRB),
    .m_axi_DATA_BUS_WLAST(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_WLAST),
    .m_axi_DATA_BUS_WID(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_WID),
    .m_axi_DATA_BUS_WUSER(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_WUSER),
    .m_axi_DATA_BUS_ARVALID(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARVALID),
    .m_axi_DATA_BUS_ARREADY(DATA_BUS_ARREADY),
    .m_axi_DATA_BUS_ARADDR(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARADDR),
    .m_axi_DATA_BUS_ARID(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARID),
    .m_axi_DATA_BUS_ARLEN(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARLEN),
    .m_axi_DATA_BUS_ARSIZE(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARSIZE),
    .m_axi_DATA_BUS_ARBURST(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARBURST),
    .m_axi_DATA_BUS_ARLOCK(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARLOCK),
    .m_axi_DATA_BUS_ARCACHE(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARCACHE),
    .m_axi_DATA_BUS_ARPROT(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARPROT),
    .m_axi_DATA_BUS_ARQOS(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARQOS),
    .m_axi_DATA_BUS_ARREGION(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARREGION),
    .m_axi_DATA_BUS_ARUSER(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARUSER),
    .m_axi_DATA_BUS_RVALID(DATA_BUS_RVALID),
    .m_axi_DATA_BUS_RREADY(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_RREADY),
    .m_axi_DATA_BUS_RDATA(DATA_BUS_RDATA),
    .m_axi_DATA_BUS_RLAST(DATA_BUS_RLAST),
    .m_axi_DATA_BUS_RID(DATA_BUS_RID),
    .m_axi_DATA_BUS_RUSER(DATA_BUS_RUSER),
    .m_axi_DATA_BUS_RRESP(DATA_BUS_RRESP),
    .m_axi_DATA_BUS_BVALID(1'b0),
    .m_axi_DATA_BUS_BREADY(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_BREADY),
    .m_axi_DATA_BUS_BRESP(2'd0),
    .m_axi_DATA_BUS_BID(1'd0),
    .m_axi_DATA_BUS_BUSER(1'd0),
    .ifm(ifm_read_reg_2987),
    .m_axi_DATA_BUS1_AWVALID(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWVALID),
    .m_axi_DATA_BUS1_AWREADY(1'b0),
    .m_axi_DATA_BUS1_AWADDR(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWADDR),
    .m_axi_DATA_BUS1_AWID(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWID),
    .m_axi_DATA_BUS1_AWLEN(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWLEN),
    .m_axi_DATA_BUS1_AWSIZE(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWSIZE),
    .m_axi_DATA_BUS1_AWBURST(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWBURST),
    .m_axi_DATA_BUS1_AWLOCK(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWLOCK),
    .m_axi_DATA_BUS1_AWCACHE(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWCACHE),
    .m_axi_DATA_BUS1_AWPROT(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWPROT),
    .m_axi_DATA_BUS1_AWQOS(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWQOS),
    .m_axi_DATA_BUS1_AWREGION(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWREGION),
    .m_axi_DATA_BUS1_AWUSER(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_AWUSER),
    .m_axi_DATA_BUS1_WVALID(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_WVALID),
    .m_axi_DATA_BUS1_WREADY(1'b0),
    .m_axi_DATA_BUS1_WDATA(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_WDATA),
    .m_axi_DATA_BUS1_WSTRB(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_WSTRB),
    .m_axi_DATA_BUS1_WLAST(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_WLAST),
    .m_axi_DATA_BUS1_WID(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_WID),
    .m_axi_DATA_BUS1_WUSER(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_WUSER),
    .m_axi_DATA_BUS1_ARVALID(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARVALID),
    .m_axi_DATA_BUS1_ARREADY(DATA_BUS1_ARREADY),
    .m_axi_DATA_BUS1_ARADDR(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARADDR),
    .m_axi_DATA_BUS1_ARID(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARID),
    .m_axi_DATA_BUS1_ARLEN(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARLEN),
    .m_axi_DATA_BUS1_ARSIZE(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARSIZE),
    .m_axi_DATA_BUS1_ARBURST(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARBURST),
    .m_axi_DATA_BUS1_ARLOCK(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARLOCK),
    .m_axi_DATA_BUS1_ARCACHE(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARCACHE),
    .m_axi_DATA_BUS1_ARPROT(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARPROT),
    .m_axi_DATA_BUS1_ARQOS(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARQOS),
    .m_axi_DATA_BUS1_ARREGION(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARREGION),
    .m_axi_DATA_BUS1_ARUSER(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARUSER),
    .m_axi_DATA_BUS1_RVALID(DATA_BUS1_RVALID),
    .m_axi_DATA_BUS1_RREADY(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_RREADY),
    .m_axi_DATA_BUS1_RDATA(DATA_BUS1_RDATA),
    .m_axi_DATA_BUS1_RLAST(DATA_BUS1_RLAST),
    .m_axi_DATA_BUS1_RID(DATA_BUS1_RID),
    .m_axi_DATA_BUS1_RUSER(DATA_BUS1_RUSER),
    .m_axi_DATA_BUS1_RRESP(DATA_BUS1_RRESP),
    .m_axi_DATA_BUS1_BVALID(1'b0),
    .m_axi_DATA_BUS1_BREADY(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_BREADY),
    .m_axi_DATA_BUS1_BRESP(2'd0),
    .m_axi_DATA_BUS1_BID(1'd0),
    .m_axi_DATA_BUS1_BUSER(1'd0),
    .weight(weight_read_reg_2977),
    .ofm_buffer_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer_address0),
    .ofm_buffer_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer_ce0),
    .ofm_buffer_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer_we0),
    .ofm_buffer_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer_d0),
    .ofm_buffer_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer_address1),
    .ofm_buffer_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer_ce1),
    .ofm_buffer_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer_q1),
    .ofm_buffer1_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer1_address0),
    .ofm_buffer1_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer1_ce0),
    .ofm_buffer1_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer1_we0),
    .ofm_buffer1_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer1_d0),
    .ofm_buffer1_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer1_address1),
    .ofm_buffer1_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer1_ce1),
    .ofm_buffer1_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer1_q1),
    .ofm_buffer2_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer2_address0),
    .ofm_buffer2_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer2_ce0),
    .ofm_buffer2_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer2_we0),
    .ofm_buffer2_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer2_d0),
    .ofm_buffer2_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer2_address1),
    .ofm_buffer2_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer2_ce1),
    .ofm_buffer2_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer2_q1),
    .ofm_buffer3_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer3_address0),
    .ofm_buffer3_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer3_ce0),
    .ofm_buffer3_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer3_we0),
    .ofm_buffer3_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer3_d0),
    .ofm_buffer3_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer3_address1),
    .ofm_buffer3_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer3_ce1),
    .ofm_buffer3_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer3_q1),
    .ofm_buffer4_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer4_address0),
    .ofm_buffer4_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer4_ce0),
    .ofm_buffer4_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer4_we0),
    .ofm_buffer4_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer4_d0),
    .ofm_buffer4_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer4_address1),
    .ofm_buffer4_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer4_ce1),
    .ofm_buffer4_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer4_q1),
    .ofm_buffer5_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer5_address0),
    .ofm_buffer5_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer5_ce0),
    .ofm_buffer5_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer5_we0),
    .ofm_buffer5_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer5_d0),
    .ofm_buffer5_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer5_address1),
    .ofm_buffer5_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer5_ce1),
    .ofm_buffer5_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer5_q1),
    .ofm_buffer6_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer6_address0),
    .ofm_buffer6_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer6_ce0),
    .ofm_buffer6_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer6_we0),
    .ofm_buffer6_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer6_d0),
    .ofm_buffer6_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer6_address1),
    .ofm_buffer6_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer6_ce1),
    .ofm_buffer6_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer6_q1),
    .ofm_buffer7_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer7_address0),
    .ofm_buffer7_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer7_ce0),
    .ofm_buffer7_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer7_we0),
    .ofm_buffer7_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer7_d0),
    .ofm_buffer7_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer7_address1),
    .ofm_buffer7_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer7_ce1),
    .ofm_buffer7_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer7_q1),
    .ofm_buffer8_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer8_address0),
    .ofm_buffer8_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer8_ce0),
    .ofm_buffer8_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer8_we0),
    .ofm_buffer8_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer8_d0),
    .ofm_buffer8_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer8_address1),
    .ofm_buffer8_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer8_ce1),
    .ofm_buffer8_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer8_q1),
    .ofm_buffer9_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer9_address0),
    .ofm_buffer9_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer9_ce0),
    .ofm_buffer9_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer9_we0),
    .ofm_buffer9_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer9_d0),
    .ofm_buffer9_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer9_address1),
    .ofm_buffer9_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer9_ce1),
    .ofm_buffer9_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer9_q1),
    .ofm_buffer10_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer10_address0),
    .ofm_buffer10_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer10_ce0),
    .ofm_buffer10_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer10_we0),
    .ofm_buffer10_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer10_d0),
    .ofm_buffer10_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer10_address1),
    .ofm_buffer10_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer10_ce1),
    .ofm_buffer10_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer10_q1),
    .ofm_buffer11_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer11_address0),
    .ofm_buffer11_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer11_ce0),
    .ofm_buffer11_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer11_we0),
    .ofm_buffer11_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer11_d0),
    .ofm_buffer11_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer11_address1),
    .ofm_buffer11_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer11_ce1),
    .ofm_buffer11_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer11_q1),
    .ofm_buffer12_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer12_address0),
    .ofm_buffer12_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer12_ce0),
    .ofm_buffer12_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer12_we0),
    .ofm_buffer12_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer12_d0),
    .ofm_buffer12_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer12_address1),
    .ofm_buffer12_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer12_ce1),
    .ofm_buffer12_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer12_q1),
    .ofm_buffer13_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer13_address0),
    .ofm_buffer13_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer13_ce0),
    .ofm_buffer13_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer13_we0),
    .ofm_buffer13_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer13_d0),
    .ofm_buffer13_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer13_address1),
    .ofm_buffer13_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer13_ce1),
    .ofm_buffer13_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer13_q1),
    .ofm_buffer14_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer14_address0),
    .ofm_buffer14_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer14_ce0),
    .ofm_buffer14_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer14_we0),
    .ofm_buffer14_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer14_d0),
    .ofm_buffer14_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer14_address1),
    .ofm_buffer14_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer14_ce1),
    .ofm_buffer14_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer14_q1),
    .ofm_buffer15_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer15_address0),
    .ofm_buffer15_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer15_ce0),
    .ofm_buffer15_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer15_we0),
    .ofm_buffer15_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer15_d0),
    .ofm_buffer15_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer15_address1),
    .ofm_buffer15_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer15_ce1),
    .ofm_buffer15_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer15_q1),
    .ofm_buffer16_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer16_address0),
    .ofm_buffer16_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer16_ce0),
    .ofm_buffer16_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer16_we0),
    .ofm_buffer16_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer16_d0),
    .ofm_buffer16_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer16_address1),
    .ofm_buffer16_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer16_ce1),
    .ofm_buffer16_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer16_q1),
    .ofm_buffer17_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer17_address0),
    .ofm_buffer17_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer17_ce0),
    .ofm_buffer17_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer17_we0),
    .ofm_buffer17_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer17_d0),
    .ofm_buffer17_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer17_address1),
    .ofm_buffer17_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer17_ce1),
    .ofm_buffer17_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer17_q1),
    .ofm_buffer18_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer18_address0),
    .ofm_buffer18_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer18_ce0),
    .ofm_buffer18_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer18_we0),
    .ofm_buffer18_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer18_d0),
    .ofm_buffer18_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer18_address1),
    .ofm_buffer18_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer18_ce1),
    .ofm_buffer18_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer18_q1),
    .ofm_buffer19_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer19_address0),
    .ofm_buffer19_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer19_ce0),
    .ofm_buffer19_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer19_we0),
    .ofm_buffer19_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer19_d0),
    .ofm_buffer19_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer19_address1),
    .ofm_buffer19_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer19_ce1),
    .ofm_buffer19_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer19_q1),
    .ofm_buffer20_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer20_address0),
    .ofm_buffer20_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer20_ce0),
    .ofm_buffer20_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer20_we0),
    .ofm_buffer20_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer20_d0),
    .ofm_buffer20_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer20_address1),
    .ofm_buffer20_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer20_ce1),
    .ofm_buffer20_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer20_q1),
    .ofm_buffer21_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer21_address0),
    .ofm_buffer21_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer21_ce0),
    .ofm_buffer21_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer21_we0),
    .ofm_buffer21_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer21_d0),
    .ofm_buffer21_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer21_address1),
    .ofm_buffer21_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer21_ce1),
    .ofm_buffer21_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer21_q1),
    .ofm_buffer22_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer22_address0),
    .ofm_buffer22_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer22_ce0),
    .ofm_buffer22_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer22_we0),
    .ofm_buffer22_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer22_d0),
    .ofm_buffer22_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer22_address1),
    .ofm_buffer22_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer22_ce1),
    .ofm_buffer22_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer22_q1),
    .ofm_buffer23_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer23_address0),
    .ofm_buffer23_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer23_ce0),
    .ofm_buffer23_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer23_we0),
    .ofm_buffer23_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer23_d0),
    .ofm_buffer23_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer23_address1),
    .ofm_buffer23_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer23_ce1),
    .ofm_buffer23_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer23_q1),
    .ofm_buffer24_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer24_address0),
    .ofm_buffer24_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer24_ce0),
    .ofm_buffer24_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer24_we0),
    .ofm_buffer24_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer24_d0),
    .ofm_buffer24_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer24_address1),
    .ofm_buffer24_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer24_ce1),
    .ofm_buffer24_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer24_q1),
    .ofm_buffer25_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer25_address0),
    .ofm_buffer25_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer25_ce0),
    .ofm_buffer25_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer25_we0),
    .ofm_buffer25_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer25_d0),
    .ofm_buffer25_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer25_address1),
    .ofm_buffer25_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer25_ce1),
    .ofm_buffer25_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer25_q1),
    .ofm_buffer26_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer26_address0),
    .ofm_buffer26_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer26_ce0),
    .ofm_buffer26_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer26_we0),
    .ofm_buffer26_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer26_d0),
    .ofm_buffer26_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer26_address1),
    .ofm_buffer26_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer26_ce1),
    .ofm_buffer26_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer26_q1),
    .ofm_buffer27_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer27_address0),
    .ofm_buffer27_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer27_ce0),
    .ofm_buffer27_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer27_we0),
    .ofm_buffer27_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer27_d0),
    .ofm_buffer27_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer27_address1),
    .ofm_buffer27_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer27_ce1),
    .ofm_buffer27_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer27_q1),
    .ofm_buffer28_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer28_address0),
    .ofm_buffer28_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer28_ce0),
    .ofm_buffer28_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer28_we0),
    .ofm_buffer28_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer28_d0),
    .ofm_buffer28_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer28_address1),
    .ofm_buffer28_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer28_ce1),
    .ofm_buffer28_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer28_q1),
    .ofm_buffer29_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer29_address0),
    .ofm_buffer29_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer29_ce0),
    .ofm_buffer29_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer29_we0),
    .ofm_buffer29_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer29_d0),
    .ofm_buffer29_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer29_address1),
    .ofm_buffer29_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer29_ce1),
    .ofm_buffer29_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer29_q1),
    .ofm_buffer30_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer30_address0),
    .ofm_buffer30_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer30_ce0),
    .ofm_buffer30_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer30_we0),
    .ofm_buffer30_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer30_d0),
    .ofm_buffer30_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer30_address1),
    .ofm_buffer30_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer30_ce1),
    .ofm_buffer30_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer30_q1),
    .ofm_buffer31_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer31_address0),
    .ofm_buffer31_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer31_ce0),
    .ofm_buffer31_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer31_we0),
    .ofm_buffer31_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer31_d0),
    .ofm_buffer31_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer31_address1),
    .ofm_buffer31_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer31_ce1),
    .ofm_buffer31_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer31_q1),
    .ofm_buffer32_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer32_address0),
    .ofm_buffer32_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer32_ce0),
    .ofm_buffer32_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer32_we0),
    .ofm_buffer32_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer32_d0),
    .ofm_buffer32_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer32_address1),
    .ofm_buffer32_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer32_ce1),
    .ofm_buffer32_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer32_q1),
    .ofm_buffer33_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer33_address0),
    .ofm_buffer33_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer33_ce0),
    .ofm_buffer33_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer33_we0),
    .ofm_buffer33_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer33_d0),
    .ofm_buffer33_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer33_address1),
    .ofm_buffer33_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer33_ce1),
    .ofm_buffer33_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer33_q1),
    .ofm_buffer34_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer34_address0),
    .ofm_buffer34_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer34_ce0),
    .ofm_buffer34_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer34_we0),
    .ofm_buffer34_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer34_d0),
    .ofm_buffer34_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer34_address1),
    .ofm_buffer34_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer34_ce1),
    .ofm_buffer34_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer34_q1),
    .ofm_buffer35_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer35_address0),
    .ofm_buffer35_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer35_ce0),
    .ofm_buffer35_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer35_we0),
    .ofm_buffer35_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer35_d0),
    .ofm_buffer35_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer35_address1),
    .ofm_buffer35_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer35_ce1),
    .ofm_buffer35_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer35_q1),
    .ofm_buffer36_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer36_address0),
    .ofm_buffer36_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer36_ce0),
    .ofm_buffer36_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer36_we0),
    .ofm_buffer36_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer36_d0),
    .ofm_buffer36_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer36_address1),
    .ofm_buffer36_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer36_ce1),
    .ofm_buffer36_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer36_q1),
    .ofm_buffer37_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer37_address0),
    .ofm_buffer37_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer37_ce0),
    .ofm_buffer37_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer37_we0),
    .ofm_buffer37_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer37_d0),
    .ofm_buffer37_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer37_address1),
    .ofm_buffer37_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer37_ce1),
    .ofm_buffer37_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer37_q1),
    .ofm_buffer38_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer38_address0),
    .ofm_buffer38_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer38_ce0),
    .ofm_buffer38_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer38_we0),
    .ofm_buffer38_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer38_d0),
    .ofm_buffer38_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer38_address1),
    .ofm_buffer38_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer38_ce1),
    .ofm_buffer38_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer38_q1),
    .ofm_buffer39_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer39_address0),
    .ofm_buffer39_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer39_ce0),
    .ofm_buffer39_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer39_we0),
    .ofm_buffer39_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer39_d0),
    .ofm_buffer39_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer39_address1),
    .ofm_buffer39_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer39_ce1),
    .ofm_buffer39_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer39_q1),
    .ofm_buffer40_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer40_address0),
    .ofm_buffer40_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer40_ce0),
    .ofm_buffer40_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer40_we0),
    .ofm_buffer40_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer40_d0),
    .ofm_buffer40_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer40_address1),
    .ofm_buffer40_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer40_ce1),
    .ofm_buffer40_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer40_q1),
    .ofm_buffer41_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer41_address0),
    .ofm_buffer41_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer41_ce0),
    .ofm_buffer41_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer41_we0),
    .ofm_buffer41_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer41_d0),
    .ofm_buffer41_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer41_address1),
    .ofm_buffer41_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer41_ce1),
    .ofm_buffer41_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer41_q1),
    .ofm_buffer42_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer42_address0),
    .ofm_buffer42_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer42_ce0),
    .ofm_buffer42_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer42_we0),
    .ofm_buffer42_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer42_d0),
    .ofm_buffer42_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer42_address1),
    .ofm_buffer42_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer42_ce1),
    .ofm_buffer42_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer42_q1),
    .ofm_buffer43_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer43_address0),
    .ofm_buffer43_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer43_ce0),
    .ofm_buffer43_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer43_we0),
    .ofm_buffer43_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer43_d0),
    .ofm_buffer43_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer43_address1),
    .ofm_buffer43_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer43_ce1),
    .ofm_buffer43_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer43_q1),
    .ofm_buffer44_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer44_address0),
    .ofm_buffer44_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer44_ce0),
    .ofm_buffer44_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer44_we0),
    .ofm_buffer44_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer44_d0),
    .ofm_buffer44_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer44_address1),
    .ofm_buffer44_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer44_ce1),
    .ofm_buffer44_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer44_q1),
    .ofm_buffer45_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer45_address0),
    .ofm_buffer45_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer45_ce0),
    .ofm_buffer45_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer45_we0),
    .ofm_buffer45_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer45_d0),
    .ofm_buffer45_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer45_address1),
    .ofm_buffer45_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer45_ce1),
    .ofm_buffer45_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer45_q1),
    .ofm_buffer46_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer46_address0),
    .ofm_buffer46_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer46_ce0),
    .ofm_buffer46_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer46_we0),
    .ofm_buffer46_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer46_d0),
    .ofm_buffer46_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer46_address1),
    .ofm_buffer46_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer46_ce1),
    .ofm_buffer46_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer46_q1),
    .ofm_buffer47_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer47_address0),
    .ofm_buffer47_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer47_ce0),
    .ofm_buffer47_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer47_we0),
    .ofm_buffer47_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer47_d0),
    .ofm_buffer47_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer47_address1),
    .ofm_buffer47_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer47_ce1),
    .ofm_buffer47_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer47_q1),
    .ofm_buffer48_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer48_address0),
    .ofm_buffer48_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer48_ce0),
    .ofm_buffer48_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer48_we0),
    .ofm_buffer48_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer48_d0),
    .ofm_buffer48_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer48_address1),
    .ofm_buffer48_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer48_ce1),
    .ofm_buffer48_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer48_q1),
    .ofm_buffer49_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer49_address0),
    .ofm_buffer49_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer49_ce0),
    .ofm_buffer49_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer49_we0),
    .ofm_buffer49_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer49_d0),
    .ofm_buffer49_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer49_address1),
    .ofm_buffer49_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer49_ce1),
    .ofm_buffer49_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer49_q1),
    .ofm_buffer50_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer50_address0),
    .ofm_buffer50_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer50_ce0),
    .ofm_buffer50_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer50_we0),
    .ofm_buffer50_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer50_d0),
    .ofm_buffer50_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer50_address1),
    .ofm_buffer50_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer50_ce1),
    .ofm_buffer50_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer50_q1),
    .ofm_buffer51_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer51_address0),
    .ofm_buffer51_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer51_ce0),
    .ofm_buffer51_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer51_we0),
    .ofm_buffer51_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer51_d0),
    .ofm_buffer51_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer51_address1),
    .ofm_buffer51_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer51_ce1),
    .ofm_buffer51_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer51_q1),
    .ofm_buffer52_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer52_address0),
    .ofm_buffer52_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer52_ce0),
    .ofm_buffer52_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer52_we0),
    .ofm_buffer52_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer52_d0),
    .ofm_buffer52_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer52_address1),
    .ofm_buffer52_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer52_ce1),
    .ofm_buffer52_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer52_q1),
    .ofm_buffer53_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer53_address0),
    .ofm_buffer53_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer53_ce0),
    .ofm_buffer53_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer53_we0),
    .ofm_buffer53_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer53_d0),
    .ofm_buffer53_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer53_address1),
    .ofm_buffer53_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer53_ce1),
    .ofm_buffer53_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer53_q1),
    .ofm_buffer54_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer54_address0),
    .ofm_buffer54_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer54_ce0),
    .ofm_buffer54_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer54_we0),
    .ofm_buffer54_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer54_d0),
    .ofm_buffer54_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer54_address1),
    .ofm_buffer54_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer54_ce1),
    .ofm_buffer54_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer54_q1),
    .ofm_buffer55_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer55_address0),
    .ofm_buffer55_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer55_ce0),
    .ofm_buffer55_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer55_we0),
    .ofm_buffer55_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer55_d0),
    .ofm_buffer55_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer55_address1),
    .ofm_buffer55_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer55_ce1),
    .ofm_buffer55_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer55_q1),
    .ofm_buffer56_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer56_address0),
    .ofm_buffer56_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer56_ce0),
    .ofm_buffer56_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer56_we0),
    .ofm_buffer56_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer56_d0),
    .ofm_buffer56_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer56_address1),
    .ofm_buffer56_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer56_ce1),
    .ofm_buffer56_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer56_q1),
    .ofm_buffer57_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer57_address0),
    .ofm_buffer57_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer57_ce0),
    .ofm_buffer57_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer57_we0),
    .ofm_buffer57_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer57_d0),
    .ofm_buffer57_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer57_address1),
    .ofm_buffer57_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer57_ce1),
    .ofm_buffer57_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer57_q1),
    .ofm_buffer58_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer58_address0),
    .ofm_buffer58_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer58_ce0),
    .ofm_buffer58_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer58_we0),
    .ofm_buffer58_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer58_d0),
    .ofm_buffer58_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer58_address1),
    .ofm_buffer58_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer58_ce1),
    .ofm_buffer58_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer58_q1),
    .ofm_buffer59_address0(grp_load_compute_wrapper_fu_1320_ofm_buffer59_address0),
    .ofm_buffer59_ce0(grp_load_compute_wrapper_fu_1320_ofm_buffer59_ce0),
    .ofm_buffer59_we0(grp_load_compute_wrapper_fu_1320_ofm_buffer59_we0),
    .ofm_buffer59_d0(grp_load_compute_wrapper_fu_1320_ofm_buffer59_d0),
    .ofm_buffer59_address1(grp_load_compute_wrapper_fu_1320_ofm_buffer59_address1),
    .ofm_buffer59_ce1(grp_load_compute_wrapper_fu_1320_ofm_buffer59_ce1),
    .ofm_buffer59_q1(grp_load_compute_wrapper_fu_1320_ofm_buffer59_q1),
    .ksize(ksize_reg_3072),
    .K_1(K_1_reg_3236),
    .kstride(kstride_reg_3078),
    .ifm_num(ifm_num_reg_3061),
    .ifm_w(ifm_w_reg_3007),
    .IW_align_256b(IW_align_256b_2_reg_3149),
    .ifm_h(ifm_h_reg_3017),
    .pad_int(pad_int_reg_3083),
    .ltype(ltype_reg_3088),
    .TRow(TRow_reg_3094),
    .TCol(TCol_reg_3099),
    .IHW(mul_ln675_reg_3231),
    .KK(KK_reg_3104),
    .TC_MIN(TC_MIN_reg_3341),
    .TR_MIN(TR_MIN_reg_3322),
    .TM_MIN(TM_MIN_reg_3388),
    .TN(TN_reg_3056),
    .tm(tm_reg_1262),
    .tr(trunc_ln684_1_reg_3377),
    .tc(trunc_ln684_reg_3371),
    .p_read(grp_load_compute_wrapper_fu_1320_p_read),
    .p_read1(grp_load_compute_wrapper_fu_1320_p_read1),
    .pingpongx_offset(grp_load_compute_wrapper_fu_1320_pingpongx_offset),
    .input_flag(input_flag_reg_3356),
    .process_flag(process_flag_reg_3361),
    .pad_val(pad_val_read_reg_2952),
    .LoadBias(LoadBias_reg_3114),
    .InterSubBeta(InterSubBeta_reg_3216),
    .WeightAddInputSubInter(WeightAddInputSubInter_reg_3124),
    .bias_buffer_address0(grp_load_compute_wrapper_fu_1320_bias_buffer_address0),
    .bias_buffer_ce0(grp_load_compute_wrapper_fu_1320_bias_buffer_ce0),
    .bias_buffer_q0(bias_buffer_q0),
    .ap_return_0(grp_load_compute_wrapper_fu_1320_ap_return_0),
    .ap_return_1(grp_load_compute_wrapper_fu_1320_ap_return_1)
);

FPGA_Acc_write_back_output_reorg grp_write_back_output_reorg_fu_2168(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_write_back_output_reorg_fu_2168_ap_start),
    .ap_done(grp_write_back_output_reorg_fu_2168_ap_done),
    .ap_idle(grp_write_back_output_reorg_fu_2168_ap_idle),
    .ap_ready(grp_write_back_output_reorg_fu_2168_ap_ready),
    .output_buffer_0_address0(grp_write_back_output_reorg_fu_2168_output_buffer_0_address0),
    .output_buffer_0_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_0_ce0),
    .output_buffer_0_q0(grp_write_back_output_reorg_fu_2168_output_buffer_0_q0),
    .output_buffer_1_address0(grp_write_back_output_reorg_fu_2168_output_buffer_1_address0),
    .output_buffer_1_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_1_ce0),
    .output_buffer_1_q0(grp_write_back_output_reorg_fu_2168_output_buffer_1_q0),
    .output_buffer_2_address0(grp_write_back_output_reorg_fu_2168_output_buffer_2_address0),
    .output_buffer_2_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_2_ce0),
    .output_buffer_2_q0(grp_write_back_output_reorg_fu_2168_output_buffer_2_q0),
    .output_buffer_3_address0(grp_write_back_output_reorg_fu_2168_output_buffer_3_address0),
    .output_buffer_3_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_3_ce0),
    .output_buffer_3_q0(grp_write_back_output_reorg_fu_2168_output_buffer_3_q0),
    .output_buffer_4_address0(grp_write_back_output_reorg_fu_2168_output_buffer_4_address0),
    .output_buffer_4_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_4_ce0),
    .output_buffer_4_q0(grp_write_back_output_reorg_fu_2168_output_buffer_4_q0),
    .output_buffer_5_address0(grp_write_back_output_reorg_fu_2168_output_buffer_5_address0),
    .output_buffer_5_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_5_ce0),
    .output_buffer_5_q0(grp_write_back_output_reorg_fu_2168_output_buffer_5_q0),
    .output_buffer_6_address0(grp_write_back_output_reorg_fu_2168_output_buffer_6_address0),
    .output_buffer_6_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_6_ce0),
    .output_buffer_6_q0(grp_write_back_output_reorg_fu_2168_output_buffer_6_q0),
    .output_buffer_7_address0(grp_write_back_output_reorg_fu_2168_output_buffer_7_address0),
    .output_buffer_7_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_7_ce0),
    .output_buffer_7_q0(grp_write_back_output_reorg_fu_2168_output_buffer_7_q0),
    .output_buffer_8_address0(grp_write_back_output_reorg_fu_2168_output_buffer_8_address0),
    .output_buffer_8_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_8_ce0),
    .output_buffer_8_q0(grp_write_back_output_reorg_fu_2168_output_buffer_8_q0),
    .output_buffer_9_address0(grp_write_back_output_reorg_fu_2168_output_buffer_9_address0),
    .output_buffer_9_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_9_ce0),
    .output_buffer_9_q0(grp_write_back_output_reorg_fu_2168_output_buffer_9_q0),
    .output_buffer_10_address0(grp_write_back_output_reorg_fu_2168_output_buffer_10_address0),
    .output_buffer_10_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_10_ce0),
    .output_buffer_10_q0(grp_write_back_output_reorg_fu_2168_output_buffer_10_q0),
    .output_buffer_11_address0(grp_write_back_output_reorg_fu_2168_output_buffer_11_address0),
    .output_buffer_11_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_11_ce0),
    .output_buffer_11_q0(grp_write_back_output_reorg_fu_2168_output_buffer_11_q0),
    .output_buffer_12_address0(grp_write_back_output_reorg_fu_2168_output_buffer_12_address0),
    .output_buffer_12_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_12_ce0),
    .output_buffer_12_q0(grp_write_back_output_reorg_fu_2168_output_buffer_12_q0),
    .output_buffer_13_address0(grp_write_back_output_reorg_fu_2168_output_buffer_13_address0),
    .output_buffer_13_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_13_ce0),
    .output_buffer_13_q0(grp_write_back_output_reorg_fu_2168_output_buffer_13_q0),
    .output_buffer_14_address0(grp_write_back_output_reorg_fu_2168_output_buffer_14_address0),
    .output_buffer_14_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_14_ce0),
    .output_buffer_14_q0(grp_write_back_output_reorg_fu_2168_output_buffer_14_q0),
    .output_buffer_15_address0(grp_write_back_output_reorg_fu_2168_output_buffer_15_address0),
    .output_buffer_15_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_15_ce0),
    .output_buffer_15_q0(grp_write_back_output_reorg_fu_2168_output_buffer_15_q0),
    .output_buffer_16_address0(grp_write_back_output_reorg_fu_2168_output_buffer_16_address0),
    .output_buffer_16_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_16_ce0),
    .output_buffer_16_q0(grp_write_back_output_reorg_fu_2168_output_buffer_16_q0),
    .output_buffer_17_address0(grp_write_back_output_reorg_fu_2168_output_buffer_17_address0),
    .output_buffer_17_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_17_ce0),
    .output_buffer_17_q0(grp_write_back_output_reorg_fu_2168_output_buffer_17_q0),
    .output_buffer_18_address0(grp_write_back_output_reorg_fu_2168_output_buffer_18_address0),
    .output_buffer_18_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_18_ce0),
    .output_buffer_18_q0(grp_write_back_output_reorg_fu_2168_output_buffer_18_q0),
    .output_buffer_19_address0(grp_write_back_output_reorg_fu_2168_output_buffer_19_address0),
    .output_buffer_19_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_19_ce0),
    .output_buffer_19_q0(grp_write_back_output_reorg_fu_2168_output_buffer_19_q0),
    .output_buffer_20_address0(grp_write_back_output_reorg_fu_2168_output_buffer_20_address0),
    .output_buffer_20_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_20_ce0),
    .output_buffer_20_q0(grp_write_back_output_reorg_fu_2168_output_buffer_20_q0),
    .output_buffer_21_address0(grp_write_back_output_reorg_fu_2168_output_buffer_21_address0),
    .output_buffer_21_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_21_ce0),
    .output_buffer_21_q0(grp_write_back_output_reorg_fu_2168_output_buffer_21_q0),
    .output_buffer_22_address0(grp_write_back_output_reorg_fu_2168_output_buffer_22_address0),
    .output_buffer_22_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_22_ce0),
    .output_buffer_22_q0(grp_write_back_output_reorg_fu_2168_output_buffer_22_q0),
    .output_buffer_23_address0(grp_write_back_output_reorg_fu_2168_output_buffer_23_address0),
    .output_buffer_23_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_23_ce0),
    .output_buffer_23_q0(grp_write_back_output_reorg_fu_2168_output_buffer_23_q0),
    .output_buffer_24_address0(grp_write_back_output_reorg_fu_2168_output_buffer_24_address0),
    .output_buffer_24_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_24_ce0),
    .output_buffer_24_q0(grp_write_back_output_reorg_fu_2168_output_buffer_24_q0),
    .output_buffer_25_address0(grp_write_back_output_reorg_fu_2168_output_buffer_25_address0),
    .output_buffer_25_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_25_ce0),
    .output_buffer_25_q0(grp_write_back_output_reorg_fu_2168_output_buffer_25_q0),
    .output_buffer_26_address0(grp_write_back_output_reorg_fu_2168_output_buffer_26_address0),
    .output_buffer_26_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_26_ce0),
    .output_buffer_26_q0(grp_write_back_output_reorg_fu_2168_output_buffer_26_q0),
    .output_buffer_27_address0(grp_write_back_output_reorg_fu_2168_output_buffer_27_address0),
    .output_buffer_27_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_27_ce0),
    .output_buffer_27_q0(grp_write_back_output_reorg_fu_2168_output_buffer_27_q0),
    .output_buffer_28_address0(grp_write_back_output_reorg_fu_2168_output_buffer_28_address0),
    .output_buffer_28_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_28_ce0),
    .output_buffer_28_q0(grp_write_back_output_reorg_fu_2168_output_buffer_28_q0),
    .output_buffer_29_address0(grp_write_back_output_reorg_fu_2168_output_buffer_29_address0),
    .output_buffer_29_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_29_ce0),
    .output_buffer_29_q0(grp_write_back_output_reorg_fu_2168_output_buffer_29_q0),
    .output_buffer_30_address0(grp_write_back_output_reorg_fu_2168_output_buffer_30_address0),
    .output_buffer_30_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_30_ce0),
    .output_buffer_30_q0(grp_write_back_output_reorg_fu_2168_output_buffer_30_q0),
    .output_buffer_31_address0(grp_write_back_output_reorg_fu_2168_output_buffer_31_address0),
    .output_buffer_31_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_31_ce0),
    .output_buffer_31_q0(grp_write_back_output_reorg_fu_2168_output_buffer_31_q0),
    .output_buffer_32_address0(grp_write_back_output_reorg_fu_2168_output_buffer_32_address0),
    .output_buffer_32_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_32_ce0),
    .output_buffer_32_q0(grp_write_back_output_reorg_fu_2168_output_buffer_32_q0),
    .output_buffer_33_address0(grp_write_back_output_reorg_fu_2168_output_buffer_33_address0),
    .output_buffer_33_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_33_ce0),
    .output_buffer_33_q0(grp_write_back_output_reorg_fu_2168_output_buffer_33_q0),
    .output_buffer_34_address0(grp_write_back_output_reorg_fu_2168_output_buffer_34_address0),
    .output_buffer_34_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_34_ce0),
    .output_buffer_34_q0(grp_write_back_output_reorg_fu_2168_output_buffer_34_q0),
    .output_buffer_35_address0(grp_write_back_output_reorg_fu_2168_output_buffer_35_address0),
    .output_buffer_35_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_35_ce0),
    .output_buffer_35_q0(grp_write_back_output_reorg_fu_2168_output_buffer_35_q0),
    .output_buffer_36_address0(grp_write_back_output_reorg_fu_2168_output_buffer_36_address0),
    .output_buffer_36_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_36_ce0),
    .output_buffer_36_q0(grp_write_back_output_reorg_fu_2168_output_buffer_36_q0),
    .output_buffer_37_address0(grp_write_back_output_reorg_fu_2168_output_buffer_37_address0),
    .output_buffer_37_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_37_ce0),
    .output_buffer_37_q0(grp_write_back_output_reorg_fu_2168_output_buffer_37_q0),
    .output_buffer_38_address0(grp_write_back_output_reorg_fu_2168_output_buffer_38_address0),
    .output_buffer_38_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_38_ce0),
    .output_buffer_38_q0(grp_write_back_output_reorg_fu_2168_output_buffer_38_q0),
    .output_buffer_39_address0(grp_write_back_output_reorg_fu_2168_output_buffer_39_address0),
    .output_buffer_39_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_39_ce0),
    .output_buffer_39_q0(grp_write_back_output_reorg_fu_2168_output_buffer_39_q0),
    .output_buffer_40_address0(grp_write_back_output_reorg_fu_2168_output_buffer_40_address0),
    .output_buffer_40_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_40_ce0),
    .output_buffer_40_q0(grp_write_back_output_reorg_fu_2168_output_buffer_40_q0),
    .output_buffer_41_address0(grp_write_back_output_reorg_fu_2168_output_buffer_41_address0),
    .output_buffer_41_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_41_ce0),
    .output_buffer_41_q0(grp_write_back_output_reorg_fu_2168_output_buffer_41_q0),
    .output_buffer_42_address0(grp_write_back_output_reorg_fu_2168_output_buffer_42_address0),
    .output_buffer_42_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_42_ce0),
    .output_buffer_42_q0(grp_write_back_output_reorg_fu_2168_output_buffer_42_q0),
    .output_buffer_43_address0(grp_write_back_output_reorg_fu_2168_output_buffer_43_address0),
    .output_buffer_43_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_43_ce0),
    .output_buffer_43_q0(grp_write_back_output_reorg_fu_2168_output_buffer_43_q0),
    .output_buffer_44_address0(grp_write_back_output_reorg_fu_2168_output_buffer_44_address0),
    .output_buffer_44_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_44_ce0),
    .output_buffer_44_q0(grp_write_back_output_reorg_fu_2168_output_buffer_44_q0),
    .output_buffer_45_address0(grp_write_back_output_reorg_fu_2168_output_buffer_45_address0),
    .output_buffer_45_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_45_ce0),
    .output_buffer_45_q0(grp_write_back_output_reorg_fu_2168_output_buffer_45_q0),
    .output_buffer_46_address0(grp_write_back_output_reorg_fu_2168_output_buffer_46_address0),
    .output_buffer_46_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_46_ce0),
    .output_buffer_46_q0(grp_write_back_output_reorg_fu_2168_output_buffer_46_q0),
    .output_buffer_47_address0(grp_write_back_output_reorg_fu_2168_output_buffer_47_address0),
    .output_buffer_47_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_47_ce0),
    .output_buffer_47_q0(grp_write_back_output_reorg_fu_2168_output_buffer_47_q0),
    .output_buffer_48_address0(grp_write_back_output_reorg_fu_2168_output_buffer_48_address0),
    .output_buffer_48_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_48_ce0),
    .output_buffer_48_q0(grp_write_back_output_reorg_fu_2168_output_buffer_48_q0),
    .output_buffer_49_address0(grp_write_back_output_reorg_fu_2168_output_buffer_49_address0),
    .output_buffer_49_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_49_ce0),
    .output_buffer_49_q0(grp_write_back_output_reorg_fu_2168_output_buffer_49_q0),
    .output_buffer_50_address0(grp_write_back_output_reorg_fu_2168_output_buffer_50_address0),
    .output_buffer_50_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_50_ce0),
    .output_buffer_50_q0(grp_write_back_output_reorg_fu_2168_output_buffer_50_q0),
    .output_buffer_51_address0(grp_write_back_output_reorg_fu_2168_output_buffer_51_address0),
    .output_buffer_51_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_51_ce0),
    .output_buffer_51_q0(grp_write_back_output_reorg_fu_2168_output_buffer_51_q0),
    .output_buffer_52_address0(grp_write_back_output_reorg_fu_2168_output_buffer_52_address0),
    .output_buffer_52_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_52_ce0),
    .output_buffer_52_q0(grp_write_back_output_reorg_fu_2168_output_buffer_52_q0),
    .output_buffer_53_address0(grp_write_back_output_reorg_fu_2168_output_buffer_53_address0),
    .output_buffer_53_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_53_ce0),
    .output_buffer_53_q0(grp_write_back_output_reorg_fu_2168_output_buffer_53_q0),
    .output_buffer_54_address0(grp_write_back_output_reorg_fu_2168_output_buffer_54_address0),
    .output_buffer_54_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_54_ce0),
    .output_buffer_54_q0(grp_write_back_output_reorg_fu_2168_output_buffer_54_q0),
    .output_buffer_55_address0(grp_write_back_output_reorg_fu_2168_output_buffer_55_address0),
    .output_buffer_55_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_55_ce0),
    .output_buffer_55_q0(grp_write_back_output_reorg_fu_2168_output_buffer_55_q0),
    .output_buffer_56_address0(grp_write_back_output_reorg_fu_2168_output_buffer_56_address0),
    .output_buffer_56_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_56_ce0),
    .output_buffer_56_q0(grp_write_back_output_reorg_fu_2168_output_buffer_56_q0),
    .output_buffer_57_address0(grp_write_back_output_reorg_fu_2168_output_buffer_57_address0),
    .output_buffer_57_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_57_ce0),
    .output_buffer_57_q0(grp_write_back_output_reorg_fu_2168_output_buffer_57_q0),
    .output_buffer_58_address0(grp_write_back_output_reorg_fu_2168_output_buffer_58_address0),
    .output_buffer_58_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_58_ce0),
    .output_buffer_58_q0(grp_write_back_output_reorg_fu_2168_output_buffer_58_q0),
    .output_buffer_59_address0(grp_write_back_output_reorg_fu_2168_output_buffer_59_address0),
    .output_buffer_59_ce0(grp_write_back_output_reorg_fu_2168_output_buffer_59_ce0),
    .output_buffer_59_q0(grp_write_back_output_reorg_fu_2168_output_buffer_59_q0),
    .m_axi_DATA_BUS_AWVALID(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWVALID),
    .m_axi_DATA_BUS_AWREADY(DATA_BUS_AWREADY),
    .m_axi_DATA_BUS_AWADDR(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWADDR),
    .m_axi_DATA_BUS_AWID(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWID),
    .m_axi_DATA_BUS_AWLEN(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWLEN),
    .m_axi_DATA_BUS_AWSIZE(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWSIZE),
    .m_axi_DATA_BUS_AWBURST(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWBURST),
    .m_axi_DATA_BUS_AWLOCK(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWLOCK),
    .m_axi_DATA_BUS_AWCACHE(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWCACHE),
    .m_axi_DATA_BUS_AWPROT(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWPROT),
    .m_axi_DATA_BUS_AWQOS(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWQOS),
    .m_axi_DATA_BUS_AWREGION(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWREGION),
    .m_axi_DATA_BUS_AWUSER(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWUSER),
    .m_axi_DATA_BUS_WVALID(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_WVALID),
    .m_axi_DATA_BUS_WREADY(DATA_BUS_WREADY),
    .m_axi_DATA_BUS_WDATA(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_WDATA),
    .m_axi_DATA_BUS_WSTRB(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_WSTRB),
    .m_axi_DATA_BUS_WLAST(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_WLAST),
    .m_axi_DATA_BUS_WID(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_WID),
    .m_axi_DATA_BUS_WUSER(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_WUSER),
    .m_axi_DATA_BUS_ARVALID(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARVALID),
    .m_axi_DATA_BUS_ARREADY(1'b0),
    .m_axi_DATA_BUS_ARADDR(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARADDR),
    .m_axi_DATA_BUS_ARID(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARID),
    .m_axi_DATA_BUS_ARLEN(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARLEN),
    .m_axi_DATA_BUS_ARSIZE(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARSIZE),
    .m_axi_DATA_BUS_ARBURST(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARBURST),
    .m_axi_DATA_BUS_ARLOCK(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARLOCK),
    .m_axi_DATA_BUS_ARCACHE(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARCACHE),
    .m_axi_DATA_BUS_ARPROT(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARPROT),
    .m_axi_DATA_BUS_ARQOS(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARQOS),
    .m_axi_DATA_BUS_ARREGION(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARREGION),
    .m_axi_DATA_BUS_ARUSER(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_ARUSER),
    .m_axi_DATA_BUS_RVALID(1'b0),
    .m_axi_DATA_BUS_RREADY(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_RREADY),
    .m_axi_DATA_BUS_RDATA(32'd0),
    .m_axi_DATA_BUS_RLAST(1'b0),
    .m_axi_DATA_BUS_RID(1'd0),
    .m_axi_DATA_BUS_RUSER(1'd0),
    .m_axi_DATA_BUS_RRESP(2'd0),
    .m_axi_DATA_BUS_BVALID(DATA_BUS_BVALID),
    .m_axi_DATA_BUS_BREADY(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_BREADY),
    .m_axi_DATA_BUS_BRESP(DATA_BUS_BRESP),
    .m_axi_DATA_BUS_BID(DATA_BUS_BID),
    .m_axi_DATA_BUS_BUSER(DATA_BUS_BUSER),
    .Output_r(ofm_read_reg_2982),
    .r(trunc_ln684_1_reg_3377),
    .c(trunc_ln684_reg_3371),
    .m(grp_write_back_output_reorg_fu_2168_m),
    .Output_w(OW_align_256b_2_reg_3154),
    .TM_MIN(grp_write_back_output_reorg_fu_2168_TM_MIN),
    .TR_MIN(TR_MIN_reg_3322),
    .TC_MIN(TC_MIN_reg_3341),
    .OHxOW(mul_ln674_reg_3226),
    .IsNL(grp_write_back_output_reorg_fu_2168_IsNL),
    .enable(grp_write_back_output_reorg_fu_2168_enable),
    .InterSubOutput(InterSubOutput_reg_3221),
    .ltype(ltype_reg_3088)
);

FPGA_Acc_CTRL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_BUS_DATA_WIDTH ))
CTRL_BUS_s_axi_U(
    .AWVALID(s_axi_CTRL_BUS_AWVALID),
    .AWREADY(s_axi_CTRL_BUS_AWREADY),
    .AWADDR(s_axi_CTRL_BUS_AWADDR),
    .WVALID(s_axi_CTRL_BUS_WVALID),
    .WREADY(s_axi_CTRL_BUS_WREADY),
    .WDATA(s_axi_CTRL_BUS_WDATA),
    .WSTRB(s_axi_CTRL_BUS_WSTRB),
    .ARVALID(s_axi_CTRL_BUS_ARVALID),
    .ARREADY(s_axi_CTRL_BUS_ARREADY),
    .ARADDR(s_axi_CTRL_BUS_ARADDR),
    .RVALID(s_axi_CTRL_BUS_RVALID),
    .RREADY(s_axi_CTRL_BUS_RREADY),
    .RDATA(s_axi_CTRL_BUS_RDATA),
    .RRESP(s_axi_CTRL_BUS_RRESP),
    .BVALID(s_axi_CTRL_BUS_BVALID),
    .BREADY(s_axi_CTRL_BUS_BREADY),
    .BRESP(s_axi_CTRL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ifm(ifm),
    .ofm(ofm),
    .weight(weight),
    .bias(bias),
    .k_s_pad_ltype(k_s_pad_ltype),
    .iofm_num(iofm_num),
    .ifm_w_h(ifm_w_h),
    .ofm_w_h(ofm_w_h),
    .TRTC(TRTC),
    .TMTN(TMTN),
    .OFM_num_bound(OFM_num_bound),
    .mLoopsxTM(mLoopsxTM),
    .mLoops_a1xTM(mLoops_a1xTM),
    .pad_val(pad_val),
    .TRowTCol(TRowTCol),
    .IHW(IHW),
    .OHW(OHW),
    .KK_INumxKK(KK_INumxKK),
    .en_bits(en_bits),
    .WeightQ(WeightQ),
    .BetaQ(BetaQ),
    .InputQ(InputQ),
    .OutputQ(OutputQ),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

FPGA_Acc_DATA_BUS_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 1 ),
    .NUM_WRITE_OUTSTANDING( 1 ),
    .MAX_READ_BURST_LENGTH( 64 ),
    .MAX_WRITE_BURST_LENGTH( 64 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DATA_BUS_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DATA_BUS_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DATA_BUS_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DATA_BUS_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DATA_BUS_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DATA_BUS_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DATA_BUS_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DATA_BUS_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_DATA_BUS_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DATA_BUS_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DATA_BUS_CACHE_VALUE ))
DATA_BUS_m_axi_U(
    .AWVALID(m_axi_DATA_BUS_AWVALID),
    .AWREADY(m_axi_DATA_BUS_AWREADY),
    .AWADDR(m_axi_DATA_BUS_AWADDR),
    .AWID(m_axi_DATA_BUS_AWID),
    .AWLEN(m_axi_DATA_BUS_AWLEN),
    .AWSIZE(m_axi_DATA_BUS_AWSIZE),
    .AWBURST(m_axi_DATA_BUS_AWBURST),
    .AWLOCK(m_axi_DATA_BUS_AWLOCK),
    .AWCACHE(m_axi_DATA_BUS_AWCACHE),
    .AWPROT(m_axi_DATA_BUS_AWPROT),
    .AWQOS(m_axi_DATA_BUS_AWQOS),
    .AWREGION(m_axi_DATA_BUS_AWREGION),
    .AWUSER(m_axi_DATA_BUS_AWUSER),
    .WVALID(m_axi_DATA_BUS_WVALID),
    .WREADY(m_axi_DATA_BUS_WREADY),
    .WDATA(m_axi_DATA_BUS_WDATA),
    .WSTRB(m_axi_DATA_BUS_WSTRB),
    .WLAST(m_axi_DATA_BUS_WLAST),
    .WID(m_axi_DATA_BUS_WID),
    .WUSER(m_axi_DATA_BUS_WUSER),
    .ARVALID(m_axi_DATA_BUS_ARVALID),
    .ARREADY(m_axi_DATA_BUS_ARREADY),
    .ARADDR(m_axi_DATA_BUS_ARADDR),
    .ARID(m_axi_DATA_BUS_ARID),
    .ARLEN(m_axi_DATA_BUS_ARLEN),
    .ARSIZE(m_axi_DATA_BUS_ARSIZE),
    .ARBURST(m_axi_DATA_BUS_ARBURST),
    .ARLOCK(m_axi_DATA_BUS_ARLOCK),
    .ARCACHE(m_axi_DATA_BUS_ARCACHE),
    .ARPROT(m_axi_DATA_BUS_ARPROT),
    .ARQOS(m_axi_DATA_BUS_ARQOS),
    .ARREGION(m_axi_DATA_BUS_ARREGION),
    .ARUSER(m_axi_DATA_BUS_ARUSER),
    .RVALID(m_axi_DATA_BUS_RVALID),
    .RREADY(m_axi_DATA_BUS_RREADY),
    .RDATA(m_axi_DATA_BUS_RDATA),
    .RLAST(m_axi_DATA_BUS_RLAST),
    .RID(m_axi_DATA_BUS_RID),
    .RUSER(m_axi_DATA_BUS_RUSER),
    .RRESP(m_axi_DATA_BUS_RRESP),
    .BVALID(m_axi_DATA_BUS_BVALID),
    .BREADY(m_axi_DATA_BUS_BREADY),
    .BRESP(m_axi_DATA_BUS_BRESP),
    .BID(m_axi_DATA_BUS_BID),
    .BUSER(m_axi_DATA_BUS_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(DATA_BUS_ARVALID),
    .I_ARREADY(DATA_BUS_ARREADY),
    .I_ARADDR(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARADDR),
    .I_ARID(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARID),
    .I_ARLEN(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARLEN),
    .I_ARSIZE(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARSIZE),
    .I_ARLOCK(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARLOCK),
    .I_ARCACHE(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARCACHE),
    .I_ARQOS(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARQOS),
    .I_ARPROT(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARPROT),
    .I_ARUSER(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARUSER),
    .I_ARBURST(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARBURST),
    .I_ARREGION(grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARREGION),
    .I_RVALID(DATA_BUS_RVALID),
    .I_RREADY(DATA_BUS_RREADY),
    .I_RDATA(DATA_BUS_RDATA),
    .I_RID(DATA_BUS_RID),
    .I_RUSER(DATA_BUS_RUSER),
    .I_RRESP(DATA_BUS_RRESP),
    .I_RLAST(DATA_BUS_RLAST),
    .I_AWVALID(DATA_BUS_AWVALID),
    .I_AWREADY(DATA_BUS_AWREADY),
    .I_AWADDR(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWADDR),
    .I_AWID(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWID),
    .I_AWLEN(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWLEN),
    .I_AWSIZE(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWSIZE),
    .I_AWLOCK(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWLOCK),
    .I_AWCACHE(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWCACHE),
    .I_AWQOS(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWQOS),
    .I_AWPROT(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWPROT),
    .I_AWUSER(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWUSER),
    .I_AWBURST(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWBURST),
    .I_AWREGION(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWREGION),
    .I_WVALID(DATA_BUS_WVALID),
    .I_WREADY(DATA_BUS_WREADY),
    .I_WDATA(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_WDATA),
    .I_WID(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_WID),
    .I_WUSER(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_WUSER),
    .I_WLAST(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_WLAST),
    .I_WSTRB(grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_WSTRB),
    .I_BVALID(DATA_BUS_BVALID),
    .I_BREADY(DATA_BUS_BREADY),
    .I_BRESP(DATA_BUS_BRESP),
    .I_BID(DATA_BUS_BID),
    .I_BUSER(DATA_BUS_BUSER)
);

FPGA_Acc_DATA_BUS1_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 1 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 128 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DATA_BUS1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DATA_BUS1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DATA_BUS1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DATA_BUS1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DATA_BUS1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DATA_BUS1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DATA_BUS1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DATA_BUS1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_DATA_BUS1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DATA_BUS1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DATA_BUS1_CACHE_VALUE ))
DATA_BUS1_m_axi_U(
    .AWVALID(m_axi_DATA_BUS1_AWVALID),
    .AWREADY(m_axi_DATA_BUS1_AWREADY),
    .AWADDR(m_axi_DATA_BUS1_AWADDR),
    .AWID(m_axi_DATA_BUS1_AWID),
    .AWLEN(m_axi_DATA_BUS1_AWLEN),
    .AWSIZE(m_axi_DATA_BUS1_AWSIZE),
    .AWBURST(m_axi_DATA_BUS1_AWBURST),
    .AWLOCK(m_axi_DATA_BUS1_AWLOCK),
    .AWCACHE(m_axi_DATA_BUS1_AWCACHE),
    .AWPROT(m_axi_DATA_BUS1_AWPROT),
    .AWQOS(m_axi_DATA_BUS1_AWQOS),
    .AWREGION(m_axi_DATA_BUS1_AWREGION),
    .AWUSER(m_axi_DATA_BUS1_AWUSER),
    .WVALID(m_axi_DATA_BUS1_WVALID),
    .WREADY(m_axi_DATA_BUS1_WREADY),
    .WDATA(m_axi_DATA_BUS1_WDATA),
    .WSTRB(m_axi_DATA_BUS1_WSTRB),
    .WLAST(m_axi_DATA_BUS1_WLAST),
    .WID(m_axi_DATA_BUS1_WID),
    .WUSER(m_axi_DATA_BUS1_WUSER),
    .ARVALID(m_axi_DATA_BUS1_ARVALID),
    .ARREADY(m_axi_DATA_BUS1_ARREADY),
    .ARADDR(m_axi_DATA_BUS1_ARADDR),
    .ARID(m_axi_DATA_BUS1_ARID),
    .ARLEN(m_axi_DATA_BUS1_ARLEN),
    .ARSIZE(m_axi_DATA_BUS1_ARSIZE),
    .ARBURST(m_axi_DATA_BUS1_ARBURST),
    .ARLOCK(m_axi_DATA_BUS1_ARLOCK),
    .ARCACHE(m_axi_DATA_BUS1_ARCACHE),
    .ARPROT(m_axi_DATA_BUS1_ARPROT),
    .ARQOS(m_axi_DATA_BUS1_ARQOS),
    .ARREGION(m_axi_DATA_BUS1_ARREGION),
    .ARUSER(m_axi_DATA_BUS1_ARUSER),
    .RVALID(m_axi_DATA_BUS1_RVALID),
    .RREADY(m_axi_DATA_BUS1_RREADY),
    .RDATA(m_axi_DATA_BUS1_RDATA),
    .RLAST(m_axi_DATA_BUS1_RLAST),
    .RID(m_axi_DATA_BUS1_RID),
    .RUSER(m_axi_DATA_BUS1_RUSER),
    .RRESP(m_axi_DATA_BUS1_RRESP),
    .BVALID(m_axi_DATA_BUS1_BVALID),
    .BREADY(m_axi_DATA_BUS1_BREADY),
    .BRESP(m_axi_DATA_BUS1_BRESP),
    .BID(m_axi_DATA_BUS1_BID),
    .BUSER(m_axi_DATA_BUS1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(DATA_BUS1_ARVALID),
    .I_ARREADY(DATA_BUS1_ARREADY),
    .I_ARADDR(DATA_BUS1_ARADDR),
    .I_ARID(DATA_BUS1_ARID),
    .I_ARLEN(DATA_BUS1_ARLEN),
    .I_ARSIZE(DATA_BUS1_ARSIZE),
    .I_ARLOCK(DATA_BUS1_ARLOCK),
    .I_ARCACHE(DATA_BUS1_ARCACHE),
    .I_ARQOS(DATA_BUS1_ARQOS),
    .I_ARPROT(DATA_BUS1_ARPROT),
    .I_ARUSER(DATA_BUS1_ARUSER),
    .I_ARBURST(DATA_BUS1_ARBURST),
    .I_ARREGION(DATA_BUS1_ARREGION),
    .I_RVALID(DATA_BUS1_RVALID),
    .I_RREADY(DATA_BUS1_RREADY),
    .I_RDATA(DATA_BUS1_RDATA),
    .I_RID(DATA_BUS1_RID),
    .I_RUSER(DATA_BUS1_RUSER),
    .I_RRESP(DATA_BUS1_RRESP),
    .I_RLAST(DATA_BUS1_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(DATA_BUS1_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(DATA_BUS1_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(DATA_BUS1_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(DATA_BUS1_BRESP),
    .I_BID(DATA_BUS1_BID),
    .I_BUSER(DATA_BUS1_BUSER)
);

FPGA_Acc_mul_mul_13ns_12ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 24 ))
mul_mul_13ns_12ns_24_4_1_U1554(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2940_p0),
    .din1(grp_fu_2940_p1),
    .ce(1'b1),
    .dout(grp_fu_2940_p2)
);

FPGA_Acc_mul_mul_13ns_12ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 24 ))
mul_mul_13ns_12ns_24_4_1_U1555(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2946_p0),
    .din1(grp_fu_2946_p1),
    .ce(1'b1),
    .dout(grp_fu_2946_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_FPGA_Acc_Pipeline_1_fu_1299_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state14)) begin
            grp_FPGA_Acc_Pipeline_1_fu_1299_ap_start_reg <= 1'b1;
        end else if ((grp_FPGA_Acc_Pipeline_1_fu_1299_ap_ready == 1'b1)) begin
            grp_FPGA_Acc_Pipeline_1_fu_1299_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state18)) begin
            grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_ap_start_reg <= 1'b1;
        end else if ((grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_ap_ready == 1'b1)) begin
            grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_load_compute_wrapper_fu_1320_ap_start_reg <= 1'b0;
    end else begin
        if ((((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
            grp_load_compute_wrapper_fu_1320_ap_start_reg <= 1'b1;
        end else if ((grp_load_compute_wrapper_fu_1320_ap_ready == 1'b1)) begin
            grp_load_compute_wrapper_fu_1320_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_write_back_output_reorg_fu_2168_ap_start_reg <= 1'b0;
    end else begin
        if ((((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
            grp_write_back_output_reorg_fu_2168_ap_start_reg <= 1'b1;
        end else if ((grp_write_back_output_reorg_fu_2168_ap_ready == 1'b1)) begin
            grp_write_back_output_reorg_fu_2168_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state27_on_subcall_done) & (1'b1 == ap_CS_fsm_state27))) begin
        pingpongm_reg_1274 <= ap_phi_mux_pingpongm_1_phi_fu_1290_p4;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        pingpongm_reg_1274 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln698_fu_2813_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        tc_reg_1250 <= tc_6_fu_2864_p2;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        tc_reg_1250 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state27_on_subcall_done) & (1'b1 == ap_CS_fsm_state27))) begin
        tm_reg_1262 <= tm_3_fu_2935_p2;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        tm_reg_1262 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19))) begin
        tr_fu_1092 <= 32'd0;
    end else if (((icmp_ln694_fu_2780_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        tr_fu_1092 <= tr_7_fu_2794_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == BetaQ_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == BetaQ_0_vld_reg)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == BetaQ_0_vld_reg) & (1'b1 == 1'b1)))) begin
        BetaQ_0_data_reg <= BetaQ;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        IW_align_256b_2_reg_3149[12 : 1] <= IW_align_256b_2_fu_2618_p3[12 : 1];
        OW_align_256b_2_reg_3154[12 : 1] <= OW_align_256b_2_fu_2642_p3[12 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == InputQ_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == InputQ_0_vld_reg)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == InputQ_0_vld_reg) & (1'b1 == 1'b1)))) begin
        InputQ_0_data_reg <= InputQ;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        InterSubBeta_reg_3216 <= InterSubBeta_fu_2681_p2;
        InterSubOutput_reg_3221 <= InterSubOutput_fu_2686_p2;
        K_1_reg_3236 <= K_1_fu_2691_p2;
        mul_ln674_reg_3226 <= grp_fu_2940_p2;
        mul_ln675_reg_3231 <= grp_fu_2946_p2;
        zext_ln636_reg_3169[11 : 0] <= zext_ln636_fu_2657_p1[11 : 0];
        zext_ln642_reg_3174[11 : 0] <= zext_ln642_fu_2660_p1[11 : 0];
        zext_ln643_reg_3180[11 : 0] <= zext_ln643_fu_2663_p1[11 : 0];
        zext_ln645_reg_3186[5 : 0] <= zext_ln645_fu_2666_p1[5 : 0];
        zext_ln647_reg_3194[4 : 0] <= zext_ln647_fu_2669_p1[4 : 0];
        zext_ln648_1_reg_3200[4 : 0] <= zext_ln648_1_fu_2672_p1[4 : 0];
        zext_ln648_reg_3205[4 : 0] <= zext_ln648_fu_2675_p1[4 : 0];
        zext_ln651_reg_3211[4 : 0] <= zext_ln651_fu_2678_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IsNotConv_reg_3002 <= IsNotConv_fu_2395_p1;
        IsReLU_reg_3109 <= en_bits_0_data_reg[32'd2];
        KK_reg_3104 <= {{KK_INumxKK_0_data_reg[31:24]}};
        LoadBias_reg_3114 <= en_bits_0_data_reg[32'd1];
        OFM_num_bound_read_reg_2967 <= OFM_num_bound_0_data_reg;
        TC_reg_3045 <= TC_fu_2453_p1;
        TCol_reg_3099 <= TCol_fu_2529_p1;
        TM_reg_3051 <= {{TMTN_0_data_reg[21:16]}};
        TN_reg_3056 <= TN_fu_2467_p1;
        TR_reg_3039 <= {{TRTC_0_data_reg[20:16]}};
        TRow_reg_3094 <= {{TRowTCol_0_data_reg[31:16]}};
        WeightAddInputSubInter_reg_3124 <= WeightAddInputSubInter_fu_2569_p2;
        bias_read_reg_2972 <= bias_0_data_reg;
        empty_162_reg_2997 <= empty_162_fu_2391_p1;
        empty_reg_2992 <= empty_fu_2379_p1;
        ifm_h_reg_3017 <= ifm_h_fu_2417_p1;
        ifm_num_reg_3061 <= {{iofm_num_0_data_reg[27:16]}};
        ifm_read_reg_2987 <= ifm_0_data_reg;
        ifm_w_reg_3007 <= {{ifm_w_h_0_data_reg[27:16]}};
        ksize_reg_3072 <= {{k_s_pad_ltype_0_data_reg[31:24]}};
        kstride_reg_3078 <= {{k_s_pad_ltype_0_data_reg[17:16]}};
        ltype_reg_3088 <= ltype_fu_2515_p1;
        mLoops_a1xTM_read_reg_2957 <= mLoops_a1xTM_0_data_reg;
        mLoopsxTM_read_reg_2962 <= mLoopsxTM_0_data_reg;
        ofm_h_reg_3033 <= ofm_h_fu_2439_p1;
        ofm_num_reg_3066 <= ofm_num_fu_2481_p1;
        ofm_read_reg_2982 <= ofm_0_data_reg;
        ofm_w_reg_3023 <= {{ofm_w_h_0_data_reg[27:16]}};
        pad_int_reg_3083 <= {{k_s_pad_ltype_0_data_reg[10:8]}};
        pad_val_read_reg_2952 <= pad_val_0_data_reg;
        tmp_1_reg_3012 <= ifm_w_h_0_data_reg[32'd16];
        tmp_2_reg_3028 <= ofm_w_h_0_data_reg[32'd16];
        tmp_reg_3129 <= {{ifm_w_h_0_data_reg[27:17]}};
        tmp_s_reg_3134 <= {{ofm_w_h_0_data_reg[27:17]}};
        trunc_ln637_reg_3119 <= trunc_ln637_fu_2559_p1;
        weight_read_reg_2977 <= weight_0_data_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == KK_INumxKK_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == KK_INumxKK_0_vld_reg)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == KK_INumxKK_0_vld_reg) & (1'b1 == 1'b1)))) begin
        KK_INumxKK_0_data_reg <= KK_INumxKK;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == LoadBias_reg_3114) & (1'b1 == ap_CS_fsm_state6))) begin
        NUM_reg_3241 <= {{add_ln549_fu_2696_p2[10:1]}};
        p_cast_reg_3247 <= {{bias_read_reg_2972[63:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == OFM_num_bound_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == OFM_num_bound_0_vld_reg)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == OFM_num_bound_0_vld_reg) & (1'b1 == 1'b1)))) begin
        OFM_num_bound_0_data_reg <= OFM_num_bound;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == OutputQ_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == OutputQ_0_vld_reg)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == OutputQ_0_vld_reg) & (1'b1 == 1'b1)))) begin
        OutputQ_0_data_reg <= OutputQ;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        TC_MIN_reg_3341 <= TC_MIN_fu_2807_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == TMTN_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == TMTN_0_vld_reg)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == TMTN_0_vld_reg) & (1'b1 == 1'b1)))) begin
        TMTN_0_data_reg <= TMTN;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state27_on_subcall_done) & (pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        TM_MIN0_0_1_fu_1104 <= grp_load_compute_wrapper_fu_1320_ap_return_1;
        m0_0_1_fu_1096 <= grp_load_compute_wrapper_fu_1320_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state27_on_subcall_done) & (pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        TM_MIN1_0_1_fu_1108 <= grp_load_compute_wrapper_fu_1320_ap_return_1;
        m1_0_1_fu_1100 <= grp_load_compute_wrapper_fu_1320_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        TM_MIN_reg_3388 <= TM_MIN_fu_2873_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == TRTC_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == TRTC_0_vld_reg)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == TRTC_0_vld_reg) & (1'b1 == 1'b1)))) begin
        TRTC_0_data_reg <= TRTC;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        TR_MIN_reg_3322 <= TR_MIN_fu_2774_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == TRowTCol_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == TRowTCol_0_vld_reg)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == TRowTCol_0_vld_reg) & (1'b1 == 1'b1)))) begin
        TRowTCol_0_data_reg <= TRowTCol;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == WeightQ_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == WeightQ_0_vld_reg)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == WeightQ_0_vld_reg) & (1'b1 == 1'b1)))) begin
        WeightQ_0_data_reg <= WeightQ;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (bias_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (bias_0_vld_reg == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (bias_0_vld_reg == 1'b0)))) begin
        bias_0_data_reg <= bias;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (en_bits_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (en_bits_0_vld_reg == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (en_bits_0_vld_reg == 1'b0)))) begin
        en_bits_0_data_reg <= en_bits;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (ifm_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (ifm_0_vld_reg == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (ifm_0_vld_reg == 1'b0)))) begin
        ifm_0_data_reg <= ifm;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (ifm_w_h_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (ifm_w_h_0_vld_reg == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (ifm_w_h_0_vld_reg == 1'b0)))) begin
        ifm_w_h_0_data_reg <= ifm_w_h;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln698_fu_2813_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        input_flag_reg_3356 <= input_flag_fu_2823_p2;
        process_flag_reg_3361 <= process_flag_fu_2839_p2;
        sub_ln700_reg_3350 <= sub_ln700_fu_2818_p2;
        trunc_ln684_1_reg_3377 <= trunc_ln684_1_fu_2861_p1;
        trunc_ln684_reg_3371 <= trunc_ln684_fu_2857_p1;
        write_flag_reg_3366 <= write_flag_fu_2850_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (iofm_num_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (iofm_num_0_vld_reg == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (iofm_num_0_vld_reg == 1'b0)))) begin
        iofm_num_0_data_reg <= iofm_num;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (k_s_pad_ltype_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (k_s_pad_ltype_0_vld_reg == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (k_s_pad_ltype_0_vld_reg == 1'b0)))) begin
        k_s_pad_ltype_0_data_reg <= k_s_pad_ltype;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (mLoops_a1xTM_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (mLoops_a1xTM_0_vld_reg == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (mLoops_a1xTM_0_vld_reg == 1'b0)))) begin
        mLoops_a1xTM_0_data_reg <= mLoops_a1xTM;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (mLoopsxTM_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (mLoopsxTM_0_vld_reg == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (mLoopsxTM_0_vld_reg == 1'b0)))) begin
        mLoopsxTM_0_data_reg <= mLoopsxTM;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (ofm_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (ofm_0_vld_reg == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (ofm_0_vld_reg == 1'b0)))) begin
        ofm_0_data_reg <= ofm;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (ofm_w_h_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (ofm_w_h_0_vld_reg == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (ofm_w_h_0_vld_reg == 1'b0)))) begin
        ofm_w_h_0_data_reg <= ofm_w_h;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (pad_val_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (pad_val_0_vld_reg == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (pad_val_0_vld_reg == 1'b0)))) begin
        pad_val_0_data_reg <= pad_val;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln691_fu_2756_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        sub_ln693_reg_3312 <= sub_ln693_fu_2761_p2;
        trunc_ln693_reg_3317 <= trunc_ln693_fu_2766_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln694_fu_2780_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        sub_ln696_reg_3331 <= sub_ln696_fu_2785_p2;
        trunc_ln696_reg_3336 <= trunc_ln696_fu_2790_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_256b_0_reg_3263 <= tmp_256b_0_fu_2734_p1;
        tmp_256b_1_reg_3268 <= {{local_buf_1_q0[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tr_6_reg_3304 <= tr_fu_1092;
    end
end

always @ (posedge ap_clk) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        trunc_ln711_1_reg_3410 <= trunc_ln711_1_fu_2900_p1;
        trunc_ln711_reg_3405 <= trunc_ln711_fu_2895_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        trunc_ln720_1_reg_3420 <= trunc_ln720_1_fu_2910_p1;
        trunc_ln720_reg_3415 <= trunc_ln720_fu_2905_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (weight_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (weight_0_vld_reg == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (weight_0_vld_reg == 1'b0)))) begin
        weight_0_data_reg <= weight;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        BetaQ_0_ack_out = 1'b1;
    end else begin
        BetaQ_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == DATA_BUS1_ARREADY) & (1'b1 == ap_CS_fsm_state7))) begin
        DATA_BUS1_ARADDR = p_cast_cast_fu_2720_p1;
    end else if ((((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
        DATA_BUS1_ARADDR = grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        DATA_BUS1_ARADDR = grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARADDR;
    end else begin
        DATA_BUS1_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
        DATA_BUS1_ARBURST = grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        DATA_BUS1_ARBURST = grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARBURST;
    end else begin
        DATA_BUS1_ARBURST = 2'd0;
    end
end

always @ (*) begin
    if ((((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
        DATA_BUS1_ARCACHE = grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        DATA_BUS1_ARCACHE = grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARCACHE;
    end else begin
        DATA_BUS1_ARCACHE = 4'd0;
    end
end

always @ (*) begin
    if ((((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
        DATA_BUS1_ARID = grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARID;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        DATA_BUS1_ARID = grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARID;
    end else begin
        DATA_BUS1_ARID = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == DATA_BUS1_ARREADY) & (1'b1 == ap_CS_fsm_state7))) begin
        DATA_BUS1_ARLEN = NUM_cast_fu_2730_p1;
    end else if ((((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
        DATA_BUS1_ARLEN = grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        DATA_BUS1_ARLEN = grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARLEN;
    end else begin
        DATA_BUS1_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
        DATA_BUS1_ARLOCK = grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        DATA_BUS1_ARLOCK = grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARLOCK;
    end else begin
        DATA_BUS1_ARLOCK = 2'd0;
    end
end

always @ (*) begin
    if ((((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
        DATA_BUS1_ARPROT = grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        DATA_BUS1_ARPROT = grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARPROT;
    end else begin
        DATA_BUS1_ARPROT = 3'd0;
    end
end

always @ (*) begin
    if ((((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
        DATA_BUS1_ARQOS = grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        DATA_BUS1_ARQOS = grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARQOS;
    end else begin
        DATA_BUS1_ARQOS = 4'd0;
    end
end

always @ (*) begin
    if ((((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
        DATA_BUS1_ARREGION = grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        DATA_BUS1_ARREGION = grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARREGION;
    end else begin
        DATA_BUS1_ARREGION = 4'd0;
    end
end

always @ (*) begin
    if ((((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
        DATA_BUS1_ARSIZE = grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        DATA_BUS1_ARSIZE = grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARSIZE;
    end else begin
        DATA_BUS1_ARSIZE = 3'd0;
    end
end

always @ (*) begin
    if ((((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
        DATA_BUS1_ARUSER = grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        DATA_BUS1_ARUSER = grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARUSER;
    end else begin
        DATA_BUS1_ARUSER = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == DATA_BUS1_ARREADY) & (1'b1 == ap_CS_fsm_state7))) begin
        DATA_BUS1_ARVALID = 1'b1;
    end else if ((((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
        DATA_BUS1_ARVALID = grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        DATA_BUS1_ARVALID = grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_ARVALID;
    end else begin
        DATA_BUS1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
        DATA_BUS1_RREADY = grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS1_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        DATA_BUS1_RREADY = grp_FPGA_Acc_Pipeline_1_fu_1299_m_axi_DATA_BUS1_RREADY;
    end else begin
        DATA_BUS1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        DATA_BUS1_blk_n_AR = m_axi_DATA_BUS1_ARREADY;
    end else begin
        DATA_BUS1_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
        DATA_BUS_ARVALID = grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_ARVALID;
    end else begin
        DATA_BUS_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
        DATA_BUS_AWVALID = grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_AWVALID;
    end else begin
        DATA_BUS_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
        DATA_BUS_BREADY = grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_BREADY;
    end else begin
        DATA_BUS_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
        DATA_BUS_RREADY = grp_load_compute_wrapper_fu_1320_m_axi_DATA_BUS_RREADY;
    end else begin
        DATA_BUS_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
        DATA_BUS_WVALID = grp_write_back_output_reorg_fu_2168_m_axi_DATA_BUS_WVALID;
    end else begin
        DATA_BUS_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        InputQ_0_ack_out = 1'b1;
    end else begin
        InputQ_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        KK_INumxKK_0_ack_out = 1'b1;
    end else begin
        KK_INumxKK_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        OFM_num_bound_0_ack_out = 1'b1;
    end else begin
        OFM_num_bound_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        OutputQ_0_ack_out = 1'b1;
    end else begin
        OutputQ_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        TMTN_0_ack_out = 1'b1;
    end else begin
        TMTN_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        TRTC_0_ack_out = 1'b1;
    end else begin
        TRTC_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        TRowTCol_0_ack_out = 1'b1;
    end else begin
        TRowTCol_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        WeightQ_0_ack_out = 1'b1;
    end else begin
        WeightQ_0_ack_out = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

always @ (*) begin
    if ((grp_FPGA_Acc_Pipeline_1_fu_1299_ap_done == 1'b0)) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state19_on_subcall_done)) begin
        ap_ST_fsm_state19_blk = 1'b1;
    end else begin
        ap_ST_fsm_state19_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state27_on_subcall_done)) begin
        ap_ST_fsm_state27_blk = 1'b1;
    end else begin
        ap_ST_fsm_state27_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((1'b0 == DATA_BUS1_ARREADY)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ap_phi_mux_pingpongm_1_phi_fu_1290_p4 = 1'd1;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ap_phi_mux_pingpongm_1_phi_fu_1290_p4 = 1'd0;
        end else begin
            ap_phi_mux_pingpongm_1_phi_fu_1290_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_pingpongm_1_phi_fu_1290_p4 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        bias_0_ack_out = 1'b1;
    end else begin
        bias_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27)))) begin
        bias_buffer_address0 = grp_load_compute_wrapper_fu_1320_bias_buffer_address0;
    end else if (((1'd1 == LoadBias_reg_3114) & (1'b1 == ap_CS_fsm_state19))) begin
        bias_buffer_address0 = grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_bias_buffer_address0;
    end else begin
        bias_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27)))) begin
        bias_buffer_ce0 = grp_load_compute_wrapper_fu_1320_bias_buffer_ce0;
    end else if (((1'd1 == LoadBias_reg_3114) & (1'b1 == ap_CS_fsm_state19))) begin
        bias_buffer_ce0 = grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_bias_buffer_ce0;
    end else begin
        bias_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == LoadBias_reg_3114) & (1'b1 == ap_CS_fsm_state19))) begin
        bias_buffer_we0 = grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_bias_buffer_we0;
    end else begin
        bias_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        en_bits_0_ack_out = 1'b1;
    end else begin
        en_bits_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer10_q1 = ofm_buffer0_10_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer10_q1 = ofm_buffer1_10_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer10_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer10_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer11_q1 = ofm_buffer0_11_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer11_q1 = ofm_buffer1_11_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer11_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer11_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer12_q1 = ofm_buffer0_12_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer12_q1 = ofm_buffer1_12_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer12_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer12_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer13_q1 = ofm_buffer0_13_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer13_q1 = ofm_buffer1_13_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer13_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer13_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer14_q1 = ofm_buffer0_14_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer14_q1 = ofm_buffer1_14_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer14_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer14_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer15_q1 = ofm_buffer0_15_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer15_q1 = ofm_buffer1_15_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer15_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer15_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer16_q1 = ofm_buffer0_16_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer16_q1 = ofm_buffer1_16_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer16_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer16_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer17_q1 = ofm_buffer0_17_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer17_q1 = ofm_buffer1_17_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer17_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer17_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer18_q1 = ofm_buffer0_18_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer18_q1 = ofm_buffer1_18_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer18_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer18_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer19_q1 = ofm_buffer0_19_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer19_q1 = ofm_buffer1_19_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer19_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer19_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer1_q1 = ofm_buffer0_1_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer1_q1 = ofm_buffer1_1_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer1_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer1_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer20_q1 = ofm_buffer0_20_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer20_q1 = ofm_buffer1_20_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer20_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer20_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer21_q1 = ofm_buffer0_21_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer21_q1 = ofm_buffer1_21_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer21_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer21_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer22_q1 = ofm_buffer0_22_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer22_q1 = ofm_buffer1_22_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer22_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer22_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer23_q1 = ofm_buffer0_23_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer23_q1 = ofm_buffer1_23_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer23_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer23_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer24_q1 = ofm_buffer0_24_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer24_q1 = ofm_buffer1_24_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer24_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer24_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer25_q1 = ofm_buffer0_25_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer25_q1 = ofm_buffer1_25_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer25_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer25_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer26_q1 = ofm_buffer0_26_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer26_q1 = ofm_buffer1_26_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer26_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer26_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer27_q1 = ofm_buffer0_27_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer27_q1 = ofm_buffer1_27_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer27_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer27_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer28_q1 = ofm_buffer0_28_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer28_q1 = ofm_buffer1_28_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer28_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer28_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer29_q1 = ofm_buffer0_29_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer29_q1 = ofm_buffer1_29_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer29_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer29_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer2_q1 = ofm_buffer0_2_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer2_q1 = ofm_buffer1_2_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer2_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer2_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer30_q1 = ofm_buffer0_30_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer30_q1 = ofm_buffer1_30_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer30_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer30_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer31_q1 = ofm_buffer0_31_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer31_q1 = ofm_buffer1_31_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer31_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer31_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer32_q1 = ofm_buffer0_32_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer32_q1 = ofm_buffer1_32_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer32_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer32_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer33_q1 = ofm_buffer0_33_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer33_q1 = ofm_buffer1_33_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer33_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer33_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer34_q1 = ofm_buffer0_34_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer34_q1 = ofm_buffer1_34_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer34_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer34_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer35_q1 = ofm_buffer0_35_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer35_q1 = ofm_buffer1_35_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer35_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer35_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer36_q1 = ofm_buffer0_36_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer36_q1 = ofm_buffer1_36_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer36_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer36_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer37_q1 = ofm_buffer0_37_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer37_q1 = ofm_buffer1_37_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer37_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer37_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer38_q1 = ofm_buffer0_38_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer38_q1 = ofm_buffer1_38_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer38_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer38_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer39_q1 = ofm_buffer0_39_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer39_q1 = ofm_buffer1_39_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer39_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer39_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer3_q1 = ofm_buffer0_3_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer3_q1 = ofm_buffer1_3_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer3_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer3_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer40_q1 = ofm_buffer0_40_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer40_q1 = ofm_buffer1_40_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer40_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer40_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer41_q1 = ofm_buffer0_41_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer41_q1 = ofm_buffer1_41_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer41_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer41_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer42_q1 = ofm_buffer0_42_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer42_q1 = ofm_buffer1_42_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer42_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer42_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer43_q1 = ofm_buffer0_43_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer43_q1 = ofm_buffer1_43_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer43_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer43_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer44_q1 = ofm_buffer0_44_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer44_q1 = ofm_buffer1_44_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer44_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer44_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer45_q1 = ofm_buffer0_45_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer45_q1 = ofm_buffer1_45_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer45_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer45_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer46_q1 = ofm_buffer0_46_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer46_q1 = ofm_buffer1_46_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer46_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer46_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer47_q1 = ofm_buffer0_47_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer47_q1 = ofm_buffer1_47_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer47_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer47_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer48_q1 = ofm_buffer0_48_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer48_q1 = ofm_buffer1_48_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer48_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer48_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer49_q1 = ofm_buffer0_49_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer49_q1 = ofm_buffer1_49_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer49_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer49_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer4_q1 = ofm_buffer0_4_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer4_q1 = ofm_buffer1_4_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer4_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer4_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer50_q1 = ofm_buffer0_50_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer50_q1 = ofm_buffer1_50_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer50_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer50_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer51_q1 = ofm_buffer0_51_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer51_q1 = ofm_buffer1_51_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer51_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer51_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer52_q1 = ofm_buffer0_52_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer52_q1 = ofm_buffer1_52_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer52_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer52_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer53_q1 = ofm_buffer0_53_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer53_q1 = ofm_buffer1_53_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer53_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer53_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer54_q1 = ofm_buffer0_54_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer54_q1 = ofm_buffer1_54_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer54_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer54_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer55_q1 = ofm_buffer0_55_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer55_q1 = ofm_buffer1_55_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer55_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer55_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer56_q1 = ofm_buffer0_56_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer56_q1 = ofm_buffer1_56_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer56_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer56_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer57_q1 = ofm_buffer0_57_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer57_q1 = ofm_buffer1_57_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer57_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer57_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer58_q1 = ofm_buffer0_58_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer58_q1 = ofm_buffer1_58_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer58_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer58_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer59_q1 = ofm_buffer0_59_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer59_q1 = ofm_buffer1_59_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer59_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer59_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer5_q1 = ofm_buffer0_5_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer5_q1 = ofm_buffer1_5_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer5_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer5_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer6_q1 = ofm_buffer0_6_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer6_q1 = ofm_buffer1_6_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer6_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer6_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer7_q1 = ofm_buffer0_7_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer7_q1 = ofm_buffer1_7_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer7_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer7_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer8_q1 = ofm_buffer0_8_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer8_q1 = ofm_buffer1_8_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer8_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer8_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer9_q1 = ofm_buffer0_9_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer9_q1 = ofm_buffer1_9_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer9_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer9_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer_q1 = ofm_buffer0_0_q1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer_q1 = ofm_buffer1_0_q1;
        end else begin
            grp_load_compute_wrapper_fu_1320_ofm_buffer_q1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_ofm_buffer_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_p_read = m0_0_1_fu_1096;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_p_read = m1_0_1_fu_1100;
        end else begin
            grp_load_compute_wrapper_fu_1320_p_read = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_p_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_p_read1 = TM_MIN0_0_1_fu_1104;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_p_read1 = TM_MIN1_0_1_fu_1108;
        end else begin
            grp_load_compute_wrapper_fu_1320_p_read1 = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_p_read1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_load_compute_wrapper_fu_1320_pingpongx_offset = 1'd1;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_load_compute_wrapper_fu_1320_pingpongx_offset = 1'd0;
        end else begin
            grp_load_compute_wrapper_fu_1320_pingpongx_offset = 'bx;
        end
    end else begin
        grp_load_compute_wrapper_fu_1320_pingpongx_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_TM_MIN = trunc_ln720_1_reg_3420;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_TM_MIN = trunc_ln711_1_reg_3410;
        end else begin
            grp_write_back_output_reorg_fu_2168_TM_MIN = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_TM_MIN = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_m = trunc_ln720_reg_3415;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_m = trunc_ln711_reg_3405;
        end else begin
            grp_write_back_output_reorg_fu_2168_m = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_m = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_0_q0 = ofm_buffer1_0_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_0_q0 = ofm_buffer0_0_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_0_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_10_q0 = ofm_buffer1_10_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_10_q0 = ofm_buffer0_10_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_10_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_10_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_11_q0 = ofm_buffer1_11_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_11_q0 = ofm_buffer0_11_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_11_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_11_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_12_q0 = ofm_buffer1_12_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_12_q0 = ofm_buffer0_12_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_12_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_12_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_13_q0 = ofm_buffer1_13_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_13_q0 = ofm_buffer0_13_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_13_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_13_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_14_q0 = ofm_buffer1_14_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_14_q0 = ofm_buffer0_14_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_14_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_14_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_15_q0 = ofm_buffer1_15_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_15_q0 = ofm_buffer0_15_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_15_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_15_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_16_q0 = ofm_buffer1_16_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_16_q0 = ofm_buffer0_16_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_16_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_16_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_17_q0 = ofm_buffer1_17_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_17_q0 = ofm_buffer0_17_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_17_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_17_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_18_q0 = ofm_buffer1_18_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_18_q0 = ofm_buffer0_18_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_18_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_18_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_19_q0 = ofm_buffer1_19_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_19_q0 = ofm_buffer0_19_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_19_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_19_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_1_q0 = ofm_buffer1_1_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_1_q0 = ofm_buffer0_1_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_1_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_1_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_20_q0 = ofm_buffer1_20_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_20_q0 = ofm_buffer0_20_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_20_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_20_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_21_q0 = ofm_buffer1_21_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_21_q0 = ofm_buffer0_21_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_21_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_21_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_22_q0 = ofm_buffer1_22_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_22_q0 = ofm_buffer0_22_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_22_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_22_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_23_q0 = ofm_buffer1_23_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_23_q0 = ofm_buffer0_23_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_23_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_23_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_24_q0 = ofm_buffer1_24_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_24_q0 = ofm_buffer0_24_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_24_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_24_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_25_q0 = ofm_buffer1_25_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_25_q0 = ofm_buffer0_25_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_25_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_25_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_26_q0 = ofm_buffer1_26_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_26_q0 = ofm_buffer0_26_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_26_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_26_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_27_q0 = ofm_buffer1_27_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_27_q0 = ofm_buffer0_27_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_27_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_27_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_28_q0 = ofm_buffer1_28_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_28_q0 = ofm_buffer0_28_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_28_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_28_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_29_q0 = ofm_buffer1_29_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_29_q0 = ofm_buffer0_29_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_29_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_29_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_2_q0 = ofm_buffer1_2_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_2_q0 = ofm_buffer0_2_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_2_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_2_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_30_q0 = ofm_buffer1_30_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_30_q0 = ofm_buffer0_30_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_30_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_30_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_31_q0 = ofm_buffer1_31_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_31_q0 = ofm_buffer0_31_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_31_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_31_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_32_q0 = ofm_buffer1_32_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_32_q0 = ofm_buffer0_32_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_32_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_32_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_33_q0 = ofm_buffer1_33_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_33_q0 = ofm_buffer0_33_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_33_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_33_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_34_q0 = ofm_buffer1_34_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_34_q0 = ofm_buffer0_34_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_34_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_34_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_35_q0 = ofm_buffer1_35_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_35_q0 = ofm_buffer0_35_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_35_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_35_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_36_q0 = ofm_buffer1_36_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_36_q0 = ofm_buffer0_36_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_36_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_36_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_37_q0 = ofm_buffer1_37_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_37_q0 = ofm_buffer0_37_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_37_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_37_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_38_q0 = ofm_buffer1_38_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_38_q0 = ofm_buffer0_38_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_38_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_38_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_39_q0 = ofm_buffer1_39_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_39_q0 = ofm_buffer0_39_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_39_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_39_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_3_q0 = ofm_buffer1_3_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_3_q0 = ofm_buffer0_3_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_3_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_3_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_40_q0 = ofm_buffer1_40_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_40_q0 = ofm_buffer0_40_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_40_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_40_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_41_q0 = ofm_buffer1_41_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_41_q0 = ofm_buffer0_41_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_41_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_41_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_42_q0 = ofm_buffer1_42_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_42_q0 = ofm_buffer0_42_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_42_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_42_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_43_q0 = ofm_buffer1_43_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_43_q0 = ofm_buffer0_43_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_43_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_43_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_44_q0 = ofm_buffer1_44_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_44_q0 = ofm_buffer0_44_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_44_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_44_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_45_q0 = ofm_buffer1_45_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_45_q0 = ofm_buffer0_45_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_45_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_45_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_46_q0 = ofm_buffer1_46_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_46_q0 = ofm_buffer0_46_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_46_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_46_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_47_q0 = ofm_buffer1_47_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_47_q0 = ofm_buffer0_47_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_47_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_47_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_48_q0 = ofm_buffer1_48_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_48_q0 = ofm_buffer0_48_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_48_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_48_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_49_q0 = ofm_buffer1_49_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_49_q0 = ofm_buffer0_49_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_49_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_49_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_4_q0 = ofm_buffer1_4_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_4_q0 = ofm_buffer0_4_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_4_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_4_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_50_q0 = ofm_buffer1_50_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_50_q0 = ofm_buffer0_50_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_50_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_50_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_51_q0 = ofm_buffer1_51_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_51_q0 = ofm_buffer0_51_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_51_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_51_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_52_q0 = ofm_buffer1_52_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_52_q0 = ofm_buffer0_52_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_52_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_52_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_53_q0 = ofm_buffer1_53_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_53_q0 = ofm_buffer0_53_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_53_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_53_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_54_q0 = ofm_buffer1_54_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_54_q0 = ofm_buffer0_54_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_54_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_54_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_55_q0 = ofm_buffer1_55_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_55_q0 = ofm_buffer0_55_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_55_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_55_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_56_q0 = ofm_buffer1_56_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_56_q0 = ofm_buffer0_56_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_56_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_56_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_57_q0 = ofm_buffer1_57_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_57_q0 = ofm_buffer0_57_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_57_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_57_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_58_q0 = ofm_buffer1_58_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_58_q0 = ofm_buffer0_58_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_58_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_58_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_59_q0 = ofm_buffer1_59_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_59_q0 = ofm_buffer0_59_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_59_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_59_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_5_q0 = ofm_buffer1_5_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_5_q0 = ofm_buffer0_5_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_5_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_5_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_6_q0 = ofm_buffer1_6_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_6_q0 = ofm_buffer0_6_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_6_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_6_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_7_q0 = ofm_buffer1_7_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_7_q0 = ofm_buffer0_7_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_7_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_7_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_8_q0 = ofm_buffer1_8_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_8_q0 = ofm_buffer0_8_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_8_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_8_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_9_q0 = ofm_buffer1_9_q0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            grp_write_back_output_reorg_fu_2168_output_buffer_9_q0 = ofm_buffer0_9_q0;
        end else begin
            grp_write_back_output_reorg_fu_2168_output_buffer_9_q0 = 'bx;
        end
    end else begin
        grp_write_back_output_reorg_fu_2168_output_buffer_9_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        ifm_0_ack_out = 1'b1;
    end else begin
        ifm_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        ifm_w_h_0_ack_out = 1'b1;
    end else begin
        ifm_w_h_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        iofm_num_0_ack_out = 1'b1;
    end else begin
        iofm_num_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        k_s_pad_ltype_0_ack_out = 1'b1;
    end else begin
        k_s_pad_ltype_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        local_buf_1_address0 = 10'd0;
    end else if (((1'd1 == LoadBias_reg_3114) & (1'b1 == ap_CS_fsm_state19))) begin
        local_buf_1_address0 = grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_local_buf_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        local_buf_1_address0 = grp_FPGA_Acc_Pipeline_1_fu_1299_local_buf_1_address0;
    end else begin
        local_buf_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        local_buf_1_ce0 = 1'b1;
    end else if (((1'd1 == LoadBias_reg_3114) & (1'b1 == ap_CS_fsm_state19))) begin
        local_buf_1_ce0 = grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_local_buf_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        local_buf_1_ce0 = grp_FPGA_Acc_Pipeline_1_fu_1299_local_buf_1_ce0;
    end else begin
        local_buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        local_buf_1_we0 = grp_FPGA_Acc_Pipeline_1_fu_1299_local_buf_1_we0;
    end else begin
        local_buf_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        mLoops_a1xTM_0_ack_out = 1'b1;
    end else begin
        mLoops_a1xTM_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        mLoopsxTM_0_ack_out = 1'b1;
    end else begin
        mLoopsxTM_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        ofm_0_ack_out = 1'b1;
    end else begin
        ofm_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_0_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_0_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_0_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer_address0;
        end else begin
            ofm_buffer0_0_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_0_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_0_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_0_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer_ce0;
        end else begin
            ofm_buffer0_0_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_0_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer_ce1;
    end else begin
        ofm_buffer0_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_0_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer_we0;
    end else begin
        ofm_buffer0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_10_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_10_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_10_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer10_address0;
        end else begin
            ofm_buffer0_10_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_10_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_10_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_10_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer10_ce0;
        end else begin
            ofm_buffer0_10_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_10_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer10_ce1;
    end else begin
        ofm_buffer0_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_10_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer10_we0;
    end else begin
        ofm_buffer0_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_11_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_11_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_11_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer11_address0;
        end else begin
            ofm_buffer0_11_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_11_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_11_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_11_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer11_ce0;
        end else begin
            ofm_buffer0_11_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_11_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer11_ce1;
    end else begin
        ofm_buffer0_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_11_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer11_we0;
    end else begin
        ofm_buffer0_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_12_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_12_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_12_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer12_address0;
        end else begin
            ofm_buffer0_12_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_12_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_12_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_12_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer12_ce0;
        end else begin
            ofm_buffer0_12_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_12_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer12_ce1;
    end else begin
        ofm_buffer0_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_12_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer12_we0;
    end else begin
        ofm_buffer0_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_13_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_13_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_13_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer13_address0;
        end else begin
            ofm_buffer0_13_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_13_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_13_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_13_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer13_ce0;
        end else begin
            ofm_buffer0_13_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_13_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer13_ce1;
    end else begin
        ofm_buffer0_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_13_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer13_we0;
    end else begin
        ofm_buffer0_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_14_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_14_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_14_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer14_address0;
        end else begin
            ofm_buffer0_14_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_14_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_14_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_14_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer14_ce0;
        end else begin
            ofm_buffer0_14_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_14_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer14_ce1;
    end else begin
        ofm_buffer0_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_14_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer14_we0;
    end else begin
        ofm_buffer0_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_15_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_15_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_15_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer15_address0;
        end else begin
            ofm_buffer0_15_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_15_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_15_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_15_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer15_ce0;
        end else begin
            ofm_buffer0_15_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_15_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer15_ce1;
    end else begin
        ofm_buffer0_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_15_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer15_we0;
    end else begin
        ofm_buffer0_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_16_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_16_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_16_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer16_address0;
        end else begin
            ofm_buffer0_16_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_16_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_16_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_16_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_16_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer16_ce0;
        end else begin
            ofm_buffer0_16_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_16_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer16_ce1;
    end else begin
        ofm_buffer0_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_16_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer16_we0;
    end else begin
        ofm_buffer0_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_17_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_17_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_17_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer17_address0;
        end else begin
            ofm_buffer0_17_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_17_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_17_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_17_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_17_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer17_ce0;
        end else begin
            ofm_buffer0_17_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_17_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer17_ce1;
    end else begin
        ofm_buffer0_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_17_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer17_we0;
    end else begin
        ofm_buffer0_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_18_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_18_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_18_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer18_address0;
        end else begin
            ofm_buffer0_18_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_18_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_18_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_18_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer18_ce0;
        end else begin
            ofm_buffer0_18_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_18_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer18_ce1;
    end else begin
        ofm_buffer0_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_18_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer18_we0;
    end else begin
        ofm_buffer0_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_19_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_19_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_19_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer19_address0;
        end else begin
            ofm_buffer0_19_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_19_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_19_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_19_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_19_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer19_ce0;
        end else begin
            ofm_buffer0_19_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_19_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer19_ce1;
    end else begin
        ofm_buffer0_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_19_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer19_we0;
    end else begin
        ofm_buffer0_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_1_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_1_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_1_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer1_address0;
        end else begin
            ofm_buffer0_1_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_1_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_1_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_1_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer1_ce0;
        end else begin
            ofm_buffer0_1_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_1_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer1_ce1;
    end else begin
        ofm_buffer0_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_1_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer1_we0;
    end else begin
        ofm_buffer0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_20_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_20_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_20_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer20_address0;
        end else begin
            ofm_buffer0_20_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_20_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_20_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_20_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_20_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer20_ce0;
        end else begin
            ofm_buffer0_20_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_20_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer20_ce1;
    end else begin
        ofm_buffer0_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_20_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer20_we0;
    end else begin
        ofm_buffer0_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_21_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_21_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_21_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer21_address0;
        end else begin
            ofm_buffer0_21_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_21_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_21_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_21_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_21_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer21_ce0;
        end else begin
            ofm_buffer0_21_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_21_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer21_ce1;
    end else begin
        ofm_buffer0_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_21_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer21_we0;
    end else begin
        ofm_buffer0_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_22_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_22_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_22_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer22_address0;
        end else begin
            ofm_buffer0_22_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_22_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_22_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_22_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_22_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer22_ce0;
        end else begin
            ofm_buffer0_22_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_22_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer22_ce1;
    end else begin
        ofm_buffer0_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_22_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer22_we0;
    end else begin
        ofm_buffer0_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_23_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_23_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_23_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer23_address0;
        end else begin
            ofm_buffer0_23_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_23_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_23_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_23_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_23_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer23_ce0;
        end else begin
            ofm_buffer0_23_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_23_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer23_ce1;
    end else begin
        ofm_buffer0_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_23_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer23_we0;
    end else begin
        ofm_buffer0_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_24_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_24_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_24_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer24_address0;
        end else begin
            ofm_buffer0_24_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_24_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_24_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_24_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_24_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer24_ce0;
        end else begin
            ofm_buffer0_24_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_24_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer24_ce1;
    end else begin
        ofm_buffer0_24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_24_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer24_we0;
    end else begin
        ofm_buffer0_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_25_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_25_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_25_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer25_address0;
        end else begin
            ofm_buffer0_25_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_25_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_25_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_25_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_25_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer25_ce0;
        end else begin
            ofm_buffer0_25_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_25_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer25_ce1;
    end else begin
        ofm_buffer0_25_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_25_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer25_we0;
    end else begin
        ofm_buffer0_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_26_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_26_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_26_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer26_address0;
        end else begin
            ofm_buffer0_26_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_26_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_26_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_26_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_26_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer26_ce0;
        end else begin
            ofm_buffer0_26_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_26_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer26_ce1;
    end else begin
        ofm_buffer0_26_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_26_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer26_we0;
    end else begin
        ofm_buffer0_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_27_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_27_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_27_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer27_address0;
        end else begin
            ofm_buffer0_27_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_27_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_27_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_27_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_27_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer27_ce0;
        end else begin
            ofm_buffer0_27_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_27_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer27_ce1;
    end else begin
        ofm_buffer0_27_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_27_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer27_we0;
    end else begin
        ofm_buffer0_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_28_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_28_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_28_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer28_address0;
        end else begin
            ofm_buffer0_28_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_28_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_28_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_28_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_28_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer28_ce0;
        end else begin
            ofm_buffer0_28_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_28_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer28_ce1;
    end else begin
        ofm_buffer0_28_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_28_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer28_we0;
    end else begin
        ofm_buffer0_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_29_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_29_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_29_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer29_address0;
        end else begin
            ofm_buffer0_29_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_29_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_29_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_29_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_29_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer29_ce0;
        end else begin
            ofm_buffer0_29_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_29_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer29_ce1;
    end else begin
        ofm_buffer0_29_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_29_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer29_we0;
    end else begin
        ofm_buffer0_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_2_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_2_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_2_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer2_address0;
        end else begin
            ofm_buffer0_2_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_2_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_2_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_2_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer2_ce0;
        end else begin
            ofm_buffer0_2_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_2_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer2_ce1;
    end else begin
        ofm_buffer0_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_2_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer2_we0;
    end else begin
        ofm_buffer0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_30_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_30_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_30_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer30_address0;
        end else begin
            ofm_buffer0_30_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_30_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_30_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_30_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_30_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer30_ce0;
        end else begin
            ofm_buffer0_30_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_30_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer30_ce1;
    end else begin
        ofm_buffer0_30_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_30_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer30_we0;
    end else begin
        ofm_buffer0_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_31_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_31_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_31_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer31_address0;
        end else begin
            ofm_buffer0_31_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_31_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_31_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_31_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_31_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer31_ce0;
        end else begin
            ofm_buffer0_31_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_31_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer31_ce1;
    end else begin
        ofm_buffer0_31_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_31_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer31_we0;
    end else begin
        ofm_buffer0_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_32_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_32_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_32_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer32_address0;
        end else begin
            ofm_buffer0_32_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_32_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_32_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_32_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_32_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer32_ce0;
        end else begin
            ofm_buffer0_32_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_32_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer32_ce1;
    end else begin
        ofm_buffer0_32_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_32_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer32_we0;
    end else begin
        ofm_buffer0_32_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_33_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_33_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_33_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer33_address0;
        end else begin
            ofm_buffer0_33_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_33_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_33_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_33_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_33_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer33_ce0;
        end else begin
            ofm_buffer0_33_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_33_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer33_ce1;
    end else begin
        ofm_buffer0_33_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_33_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer33_we0;
    end else begin
        ofm_buffer0_33_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_34_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_34_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_34_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer34_address0;
        end else begin
            ofm_buffer0_34_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_34_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_34_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_34_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_34_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer34_ce0;
        end else begin
            ofm_buffer0_34_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_34_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer34_ce1;
    end else begin
        ofm_buffer0_34_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_34_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer34_we0;
    end else begin
        ofm_buffer0_34_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_35_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_35_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_35_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer35_address0;
        end else begin
            ofm_buffer0_35_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_35_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_35_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_35_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_35_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer35_ce0;
        end else begin
            ofm_buffer0_35_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_35_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer35_ce1;
    end else begin
        ofm_buffer0_35_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_35_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer35_we0;
    end else begin
        ofm_buffer0_35_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_36_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_36_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_36_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer36_address0;
        end else begin
            ofm_buffer0_36_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_36_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_36_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_36_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_36_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer36_ce0;
        end else begin
            ofm_buffer0_36_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_36_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer36_ce1;
    end else begin
        ofm_buffer0_36_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_36_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer36_we0;
    end else begin
        ofm_buffer0_36_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_37_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_37_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_37_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer37_address0;
        end else begin
            ofm_buffer0_37_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_37_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_37_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_37_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_37_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer37_ce0;
        end else begin
            ofm_buffer0_37_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_37_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer37_ce1;
    end else begin
        ofm_buffer0_37_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_37_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer37_we0;
    end else begin
        ofm_buffer0_37_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_38_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_38_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_38_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer38_address0;
        end else begin
            ofm_buffer0_38_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_38_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_38_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_38_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_38_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer38_ce0;
        end else begin
            ofm_buffer0_38_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_38_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer38_ce1;
    end else begin
        ofm_buffer0_38_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_38_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer38_we0;
    end else begin
        ofm_buffer0_38_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_39_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_39_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_39_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer39_address0;
        end else begin
            ofm_buffer0_39_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_39_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_39_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_39_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_39_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer39_ce0;
        end else begin
            ofm_buffer0_39_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_39_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer39_ce1;
    end else begin
        ofm_buffer0_39_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_39_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer39_we0;
    end else begin
        ofm_buffer0_39_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_3_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_3_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_3_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer3_address0;
        end else begin
            ofm_buffer0_3_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_3_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_3_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_3_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer3_ce0;
        end else begin
            ofm_buffer0_3_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_3_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer3_ce1;
    end else begin
        ofm_buffer0_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_3_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer3_we0;
    end else begin
        ofm_buffer0_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_40_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_40_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_40_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer40_address0;
        end else begin
            ofm_buffer0_40_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_40_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_40_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_40_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_40_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer40_ce0;
        end else begin
            ofm_buffer0_40_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_40_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer40_ce1;
    end else begin
        ofm_buffer0_40_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_40_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer40_we0;
    end else begin
        ofm_buffer0_40_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_41_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_41_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_41_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer41_address0;
        end else begin
            ofm_buffer0_41_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_41_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_41_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_41_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_41_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer41_ce0;
        end else begin
            ofm_buffer0_41_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_41_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer41_ce1;
    end else begin
        ofm_buffer0_41_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_41_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer41_we0;
    end else begin
        ofm_buffer0_41_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_42_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_42_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_42_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer42_address0;
        end else begin
            ofm_buffer0_42_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_42_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_42_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_42_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_42_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer42_ce0;
        end else begin
            ofm_buffer0_42_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_42_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer42_ce1;
    end else begin
        ofm_buffer0_42_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_42_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer42_we0;
    end else begin
        ofm_buffer0_42_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_43_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_43_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_43_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer43_address0;
        end else begin
            ofm_buffer0_43_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_43_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_43_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_43_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_43_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer43_ce0;
        end else begin
            ofm_buffer0_43_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_43_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer43_ce1;
    end else begin
        ofm_buffer0_43_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_43_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer43_we0;
    end else begin
        ofm_buffer0_43_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_44_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_44_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_44_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer44_address0;
        end else begin
            ofm_buffer0_44_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_44_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_44_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_44_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_44_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer44_ce0;
        end else begin
            ofm_buffer0_44_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_44_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer44_ce1;
    end else begin
        ofm_buffer0_44_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_44_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer44_we0;
    end else begin
        ofm_buffer0_44_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_45_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_45_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_45_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer45_address0;
        end else begin
            ofm_buffer0_45_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_45_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_45_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_45_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_45_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer45_ce0;
        end else begin
            ofm_buffer0_45_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_45_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer45_ce1;
    end else begin
        ofm_buffer0_45_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_45_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer45_we0;
    end else begin
        ofm_buffer0_45_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_46_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_46_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_46_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer46_address0;
        end else begin
            ofm_buffer0_46_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_46_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_46_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_46_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_46_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer46_ce0;
        end else begin
            ofm_buffer0_46_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_46_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer46_ce1;
    end else begin
        ofm_buffer0_46_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_46_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer46_we0;
    end else begin
        ofm_buffer0_46_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_47_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_47_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_47_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer47_address0;
        end else begin
            ofm_buffer0_47_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_47_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_47_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_47_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_47_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer47_ce0;
        end else begin
            ofm_buffer0_47_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_47_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer47_ce1;
    end else begin
        ofm_buffer0_47_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_47_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer47_we0;
    end else begin
        ofm_buffer0_47_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_48_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_48_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_48_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer48_address0;
        end else begin
            ofm_buffer0_48_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_48_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_48_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_48_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_48_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer48_ce0;
        end else begin
            ofm_buffer0_48_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_48_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer48_ce1;
    end else begin
        ofm_buffer0_48_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_48_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer48_we0;
    end else begin
        ofm_buffer0_48_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_49_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_49_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_49_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer49_address0;
        end else begin
            ofm_buffer0_49_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_49_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_49_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_49_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_49_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer49_ce0;
        end else begin
            ofm_buffer0_49_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_49_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer49_ce1;
    end else begin
        ofm_buffer0_49_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_49_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer49_we0;
    end else begin
        ofm_buffer0_49_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_4_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_4_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_4_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer4_address0;
        end else begin
            ofm_buffer0_4_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_4_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_4_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_4_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer4_ce0;
        end else begin
            ofm_buffer0_4_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_4_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer4_ce1;
    end else begin
        ofm_buffer0_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_4_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer4_we0;
    end else begin
        ofm_buffer0_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_50_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_50_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_50_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer50_address0;
        end else begin
            ofm_buffer0_50_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_50_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_50_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_50_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_50_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer50_ce0;
        end else begin
            ofm_buffer0_50_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_50_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer50_ce1;
    end else begin
        ofm_buffer0_50_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_50_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer50_we0;
    end else begin
        ofm_buffer0_50_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_51_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_51_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_51_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer51_address0;
        end else begin
            ofm_buffer0_51_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_51_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_51_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_51_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_51_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer51_ce0;
        end else begin
            ofm_buffer0_51_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_51_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_51_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer51_ce1;
    end else begin
        ofm_buffer0_51_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_51_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer51_we0;
    end else begin
        ofm_buffer0_51_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_52_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_52_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_52_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer52_address0;
        end else begin
            ofm_buffer0_52_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_52_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_52_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_52_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_52_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer52_ce0;
        end else begin
            ofm_buffer0_52_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_52_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer52_ce1;
    end else begin
        ofm_buffer0_52_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_52_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer52_we0;
    end else begin
        ofm_buffer0_52_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_53_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_53_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_53_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer53_address0;
        end else begin
            ofm_buffer0_53_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_53_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_53_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_53_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_53_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer53_ce0;
        end else begin
            ofm_buffer0_53_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_53_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer53_ce1;
    end else begin
        ofm_buffer0_53_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_53_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer53_we0;
    end else begin
        ofm_buffer0_53_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_54_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_54_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_54_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer54_address0;
        end else begin
            ofm_buffer0_54_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_54_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_54_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_54_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_54_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer54_ce0;
        end else begin
            ofm_buffer0_54_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_54_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_54_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer54_ce1;
    end else begin
        ofm_buffer0_54_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_54_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer54_we0;
    end else begin
        ofm_buffer0_54_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_55_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_55_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_55_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer55_address0;
        end else begin
            ofm_buffer0_55_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_55_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_55_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_55_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_55_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer55_ce0;
        end else begin
            ofm_buffer0_55_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_55_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer55_ce1;
    end else begin
        ofm_buffer0_55_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_55_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer55_we0;
    end else begin
        ofm_buffer0_55_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_56_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_56_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_56_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer56_address0;
        end else begin
            ofm_buffer0_56_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_56_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_56_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_56_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_56_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer56_ce0;
        end else begin
            ofm_buffer0_56_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_56_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_56_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer56_ce1;
    end else begin
        ofm_buffer0_56_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_56_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer56_we0;
    end else begin
        ofm_buffer0_56_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_57_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_57_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_57_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer57_address0;
        end else begin
            ofm_buffer0_57_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_57_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_57_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_57_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_57_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer57_ce0;
        end else begin
            ofm_buffer0_57_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_57_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_57_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer57_ce1;
    end else begin
        ofm_buffer0_57_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_57_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer57_we0;
    end else begin
        ofm_buffer0_57_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_58_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_58_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_58_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer58_address0;
        end else begin
            ofm_buffer0_58_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_58_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_58_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_58_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_58_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer58_ce0;
        end else begin
            ofm_buffer0_58_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_58_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_58_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer58_ce1;
    end else begin
        ofm_buffer0_58_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_58_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer58_we0;
    end else begin
        ofm_buffer0_58_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_59_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_59_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_59_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer59_address0;
        end else begin
            ofm_buffer0_59_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_59_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_59_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_59_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_59_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer59_ce0;
        end else begin
            ofm_buffer0_59_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_59_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_59_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer59_ce1;
    end else begin
        ofm_buffer0_59_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_59_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer59_we0;
    end else begin
        ofm_buffer0_59_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_5_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_5_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_5_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer5_address0;
        end else begin
            ofm_buffer0_5_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_5_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_5_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_5_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer5_ce0;
        end else begin
            ofm_buffer0_5_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_5_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer5_ce1;
    end else begin
        ofm_buffer0_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_5_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer5_we0;
    end else begin
        ofm_buffer0_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_6_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_6_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_6_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer6_address0;
        end else begin
            ofm_buffer0_6_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_6_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_6_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_6_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer6_ce0;
        end else begin
            ofm_buffer0_6_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_6_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer6_ce1;
    end else begin
        ofm_buffer0_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_6_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer6_we0;
    end else begin
        ofm_buffer0_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_7_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_7_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_7_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer7_address0;
        end else begin
            ofm_buffer0_7_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_7_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_7_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_7_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer7_ce0;
        end else begin
            ofm_buffer0_7_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_7_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer7_ce1;
    end else begin
        ofm_buffer0_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_7_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer7_we0;
    end else begin
        ofm_buffer0_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_8_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_8_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_8_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer8_address0;
        end else begin
            ofm_buffer0_8_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_8_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_8_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_8_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer8_ce0;
        end else begin
            ofm_buffer0_8_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_8_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer8_ce1;
    end else begin
        ofm_buffer0_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_8_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer8_we0;
    end else begin
        ofm_buffer0_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_9_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_9_address0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_9_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer9_address0;
        end else begin
            ofm_buffer0_9_address0 = 'bx;
        end
    end else begin
        ofm_buffer0_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer0_9_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_9_ce0;
        end else if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer0_9_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer9_ce0;
        end else begin
            ofm_buffer0_9_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer0_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_9_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer9_ce1;
    end else begin
        ofm_buffer0_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer0_9_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer9_we0;
    end else begin
        ofm_buffer0_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_0_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_0_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_0_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer_address0;
        end else begin
            ofm_buffer1_0_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_0_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_0_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_0_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer_ce0;
        end else begin
            ofm_buffer1_0_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_0_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer_ce1;
    end else begin
        ofm_buffer1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_0_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer_we0;
    end else begin
        ofm_buffer1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_10_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_10_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_10_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer10_address0;
        end else begin
            ofm_buffer1_10_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_10_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_10_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_10_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer10_ce0;
        end else begin
            ofm_buffer1_10_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_10_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer10_ce1;
    end else begin
        ofm_buffer1_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_10_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer10_we0;
    end else begin
        ofm_buffer1_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_11_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_11_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_11_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer11_address0;
        end else begin
            ofm_buffer1_11_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_11_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_11_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_11_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer11_ce0;
        end else begin
            ofm_buffer1_11_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_11_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer11_ce1;
    end else begin
        ofm_buffer1_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_11_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer11_we0;
    end else begin
        ofm_buffer1_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_12_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_12_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_12_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer12_address0;
        end else begin
            ofm_buffer1_12_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_12_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_12_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_12_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer12_ce0;
        end else begin
            ofm_buffer1_12_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_12_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer12_ce1;
    end else begin
        ofm_buffer1_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_12_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer12_we0;
    end else begin
        ofm_buffer1_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_13_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_13_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_13_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer13_address0;
        end else begin
            ofm_buffer1_13_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_13_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_13_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_13_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer13_ce0;
        end else begin
            ofm_buffer1_13_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_13_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer13_ce1;
    end else begin
        ofm_buffer1_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_13_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer13_we0;
    end else begin
        ofm_buffer1_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_14_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_14_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_14_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer14_address0;
        end else begin
            ofm_buffer1_14_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_14_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_14_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_14_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer14_ce0;
        end else begin
            ofm_buffer1_14_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_14_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer14_ce1;
    end else begin
        ofm_buffer1_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_14_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer14_we0;
    end else begin
        ofm_buffer1_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_15_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_15_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_15_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer15_address0;
        end else begin
            ofm_buffer1_15_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_15_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_15_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_15_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer15_ce0;
        end else begin
            ofm_buffer1_15_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_15_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer15_ce1;
    end else begin
        ofm_buffer1_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_15_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer15_we0;
    end else begin
        ofm_buffer1_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_16_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_16_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_16_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer16_address0;
        end else begin
            ofm_buffer1_16_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_16_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_16_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_16_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_16_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer16_ce0;
        end else begin
            ofm_buffer1_16_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_16_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer16_ce1;
    end else begin
        ofm_buffer1_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_16_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer16_we0;
    end else begin
        ofm_buffer1_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_17_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_17_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_17_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer17_address0;
        end else begin
            ofm_buffer1_17_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_17_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_17_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_17_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_17_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer17_ce0;
        end else begin
            ofm_buffer1_17_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_17_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer17_ce1;
    end else begin
        ofm_buffer1_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_17_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer17_we0;
    end else begin
        ofm_buffer1_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_18_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_18_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_18_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer18_address0;
        end else begin
            ofm_buffer1_18_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_18_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_18_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_18_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer18_ce0;
        end else begin
            ofm_buffer1_18_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_18_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer18_ce1;
    end else begin
        ofm_buffer1_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_18_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer18_we0;
    end else begin
        ofm_buffer1_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_19_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_19_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_19_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer19_address0;
        end else begin
            ofm_buffer1_19_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_19_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_19_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_19_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_19_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer19_ce0;
        end else begin
            ofm_buffer1_19_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_19_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer19_ce1;
    end else begin
        ofm_buffer1_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_19_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer19_we0;
    end else begin
        ofm_buffer1_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_1_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_1_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_1_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer1_address0;
        end else begin
            ofm_buffer1_1_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_1_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_1_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_1_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer1_ce0;
        end else begin
            ofm_buffer1_1_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_1_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer1_ce1;
    end else begin
        ofm_buffer1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_1_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer1_we0;
    end else begin
        ofm_buffer1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_20_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_20_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_20_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer20_address0;
        end else begin
            ofm_buffer1_20_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_20_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_20_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_20_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_20_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer20_ce0;
        end else begin
            ofm_buffer1_20_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_20_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer20_ce1;
    end else begin
        ofm_buffer1_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_20_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer20_we0;
    end else begin
        ofm_buffer1_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_21_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_21_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_21_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer21_address0;
        end else begin
            ofm_buffer1_21_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_21_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_21_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_21_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_21_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer21_ce0;
        end else begin
            ofm_buffer1_21_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_21_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer21_ce1;
    end else begin
        ofm_buffer1_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_21_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer21_we0;
    end else begin
        ofm_buffer1_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_22_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_22_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_22_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer22_address0;
        end else begin
            ofm_buffer1_22_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_22_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_22_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_22_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_22_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer22_ce0;
        end else begin
            ofm_buffer1_22_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_22_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer22_ce1;
    end else begin
        ofm_buffer1_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_22_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer22_we0;
    end else begin
        ofm_buffer1_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_23_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_23_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_23_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer23_address0;
        end else begin
            ofm_buffer1_23_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_23_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_23_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_23_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_23_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer23_ce0;
        end else begin
            ofm_buffer1_23_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_23_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer23_ce1;
    end else begin
        ofm_buffer1_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_23_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer23_we0;
    end else begin
        ofm_buffer1_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_24_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_24_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_24_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer24_address0;
        end else begin
            ofm_buffer1_24_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_24_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_24_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_24_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_24_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer24_ce0;
        end else begin
            ofm_buffer1_24_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_24_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer24_ce1;
    end else begin
        ofm_buffer1_24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_24_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer24_we0;
    end else begin
        ofm_buffer1_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_25_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_25_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_25_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer25_address0;
        end else begin
            ofm_buffer1_25_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_25_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_25_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_25_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_25_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer25_ce0;
        end else begin
            ofm_buffer1_25_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_25_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer25_ce1;
    end else begin
        ofm_buffer1_25_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_25_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer25_we0;
    end else begin
        ofm_buffer1_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_26_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_26_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_26_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer26_address0;
        end else begin
            ofm_buffer1_26_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_26_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_26_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_26_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_26_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer26_ce0;
        end else begin
            ofm_buffer1_26_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_26_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer26_ce1;
    end else begin
        ofm_buffer1_26_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_26_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer26_we0;
    end else begin
        ofm_buffer1_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_27_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_27_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_27_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer27_address0;
        end else begin
            ofm_buffer1_27_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_27_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_27_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_27_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_27_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer27_ce0;
        end else begin
            ofm_buffer1_27_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_27_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer27_ce1;
    end else begin
        ofm_buffer1_27_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_27_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer27_we0;
    end else begin
        ofm_buffer1_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_28_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_28_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_28_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer28_address0;
        end else begin
            ofm_buffer1_28_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_28_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_28_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_28_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_28_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer28_ce0;
        end else begin
            ofm_buffer1_28_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_28_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer28_ce1;
    end else begin
        ofm_buffer1_28_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_28_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer28_we0;
    end else begin
        ofm_buffer1_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_29_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_29_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_29_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer29_address0;
        end else begin
            ofm_buffer1_29_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_29_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_29_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_29_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_29_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer29_ce0;
        end else begin
            ofm_buffer1_29_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_29_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer29_ce1;
    end else begin
        ofm_buffer1_29_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_29_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer29_we0;
    end else begin
        ofm_buffer1_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_2_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_2_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_2_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer2_address0;
        end else begin
            ofm_buffer1_2_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_2_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_2_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_2_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer2_ce0;
        end else begin
            ofm_buffer1_2_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_2_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer2_ce1;
    end else begin
        ofm_buffer1_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_2_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer2_we0;
    end else begin
        ofm_buffer1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_30_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_30_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_30_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer30_address0;
        end else begin
            ofm_buffer1_30_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_30_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_30_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_30_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_30_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer30_ce0;
        end else begin
            ofm_buffer1_30_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_30_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer30_ce1;
    end else begin
        ofm_buffer1_30_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_30_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer30_we0;
    end else begin
        ofm_buffer1_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_31_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_31_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_31_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer31_address0;
        end else begin
            ofm_buffer1_31_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_31_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_31_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_31_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_31_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer31_ce0;
        end else begin
            ofm_buffer1_31_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_31_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer31_ce1;
    end else begin
        ofm_buffer1_31_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_31_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer31_we0;
    end else begin
        ofm_buffer1_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_32_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_32_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_32_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer32_address0;
        end else begin
            ofm_buffer1_32_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_32_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_32_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_32_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_32_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer32_ce0;
        end else begin
            ofm_buffer1_32_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_32_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer32_ce1;
    end else begin
        ofm_buffer1_32_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_32_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer32_we0;
    end else begin
        ofm_buffer1_32_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_33_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_33_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_33_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer33_address0;
        end else begin
            ofm_buffer1_33_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_33_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_33_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_33_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_33_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer33_ce0;
        end else begin
            ofm_buffer1_33_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_33_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer33_ce1;
    end else begin
        ofm_buffer1_33_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_33_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer33_we0;
    end else begin
        ofm_buffer1_33_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_34_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_34_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_34_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer34_address0;
        end else begin
            ofm_buffer1_34_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_34_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_34_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_34_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_34_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer34_ce0;
        end else begin
            ofm_buffer1_34_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_34_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer34_ce1;
    end else begin
        ofm_buffer1_34_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_34_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer34_we0;
    end else begin
        ofm_buffer1_34_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_35_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_35_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_35_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer35_address0;
        end else begin
            ofm_buffer1_35_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_35_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_35_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_35_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_35_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer35_ce0;
        end else begin
            ofm_buffer1_35_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_35_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer35_ce1;
    end else begin
        ofm_buffer1_35_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_35_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer35_we0;
    end else begin
        ofm_buffer1_35_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_36_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_36_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_36_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer36_address0;
        end else begin
            ofm_buffer1_36_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_36_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_36_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_36_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_36_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer36_ce0;
        end else begin
            ofm_buffer1_36_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_36_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer36_ce1;
    end else begin
        ofm_buffer1_36_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_36_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer36_we0;
    end else begin
        ofm_buffer1_36_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_37_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_37_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_37_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer37_address0;
        end else begin
            ofm_buffer1_37_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_37_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_37_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_37_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_37_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer37_ce0;
        end else begin
            ofm_buffer1_37_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_37_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer37_ce1;
    end else begin
        ofm_buffer1_37_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_37_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer37_we0;
    end else begin
        ofm_buffer1_37_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_38_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_38_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_38_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer38_address0;
        end else begin
            ofm_buffer1_38_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_38_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_38_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_38_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_38_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer38_ce0;
        end else begin
            ofm_buffer1_38_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_38_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer38_ce1;
    end else begin
        ofm_buffer1_38_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_38_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer38_we0;
    end else begin
        ofm_buffer1_38_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_39_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_39_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_39_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer39_address0;
        end else begin
            ofm_buffer1_39_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_39_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_39_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_39_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_39_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer39_ce0;
        end else begin
            ofm_buffer1_39_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_39_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer39_ce1;
    end else begin
        ofm_buffer1_39_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_39_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer39_we0;
    end else begin
        ofm_buffer1_39_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_3_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_3_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_3_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer3_address0;
        end else begin
            ofm_buffer1_3_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_3_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_3_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_3_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer3_ce0;
        end else begin
            ofm_buffer1_3_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_3_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer3_ce1;
    end else begin
        ofm_buffer1_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_3_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer3_we0;
    end else begin
        ofm_buffer1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_40_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_40_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_40_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer40_address0;
        end else begin
            ofm_buffer1_40_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_40_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_40_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_40_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_40_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer40_ce0;
        end else begin
            ofm_buffer1_40_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_40_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer40_ce1;
    end else begin
        ofm_buffer1_40_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_40_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer40_we0;
    end else begin
        ofm_buffer1_40_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_41_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_41_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_41_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer41_address0;
        end else begin
            ofm_buffer1_41_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_41_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_41_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_41_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_41_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer41_ce0;
        end else begin
            ofm_buffer1_41_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_41_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer41_ce1;
    end else begin
        ofm_buffer1_41_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_41_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer41_we0;
    end else begin
        ofm_buffer1_41_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_42_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_42_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_42_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer42_address0;
        end else begin
            ofm_buffer1_42_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_42_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_42_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_42_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_42_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer42_ce0;
        end else begin
            ofm_buffer1_42_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_42_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer42_ce1;
    end else begin
        ofm_buffer1_42_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_42_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer42_we0;
    end else begin
        ofm_buffer1_42_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_43_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_43_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_43_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer43_address0;
        end else begin
            ofm_buffer1_43_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_43_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_43_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_43_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_43_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer43_ce0;
        end else begin
            ofm_buffer1_43_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_43_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer43_ce1;
    end else begin
        ofm_buffer1_43_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_43_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer43_we0;
    end else begin
        ofm_buffer1_43_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_44_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_44_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_44_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer44_address0;
        end else begin
            ofm_buffer1_44_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_44_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_44_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_44_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_44_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer44_ce0;
        end else begin
            ofm_buffer1_44_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_44_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer44_ce1;
    end else begin
        ofm_buffer1_44_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_44_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer44_we0;
    end else begin
        ofm_buffer1_44_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_45_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_45_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_45_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer45_address0;
        end else begin
            ofm_buffer1_45_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_45_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_45_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_45_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_45_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer45_ce0;
        end else begin
            ofm_buffer1_45_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_45_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer45_ce1;
    end else begin
        ofm_buffer1_45_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_45_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer45_we0;
    end else begin
        ofm_buffer1_45_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_46_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_46_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_46_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer46_address0;
        end else begin
            ofm_buffer1_46_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_46_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_46_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_46_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_46_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer46_ce0;
        end else begin
            ofm_buffer1_46_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_46_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer46_ce1;
    end else begin
        ofm_buffer1_46_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_46_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer46_we0;
    end else begin
        ofm_buffer1_46_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_47_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_47_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_47_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer47_address0;
        end else begin
            ofm_buffer1_47_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_47_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_47_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_47_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_47_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer47_ce0;
        end else begin
            ofm_buffer1_47_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_47_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer47_ce1;
    end else begin
        ofm_buffer1_47_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_47_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer47_we0;
    end else begin
        ofm_buffer1_47_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_48_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_48_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_48_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer48_address0;
        end else begin
            ofm_buffer1_48_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_48_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_48_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_48_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_48_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer48_ce0;
        end else begin
            ofm_buffer1_48_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_48_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer48_ce1;
    end else begin
        ofm_buffer1_48_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_48_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer48_we0;
    end else begin
        ofm_buffer1_48_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_49_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_49_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_49_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer49_address0;
        end else begin
            ofm_buffer1_49_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_49_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_49_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_49_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_49_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer49_ce0;
        end else begin
            ofm_buffer1_49_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_49_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer49_ce1;
    end else begin
        ofm_buffer1_49_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_49_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer49_we0;
    end else begin
        ofm_buffer1_49_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_4_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_4_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_4_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer4_address0;
        end else begin
            ofm_buffer1_4_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_4_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_4_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_4_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer4_ce0;
        end else begin
            ofm_buffer1_4_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_4_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer4_ce1;
    end else begin
        ofm_buffer1_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_4_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer4_we0;
    end else begin
        ofm_buffer1_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_50_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_50_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_50_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer50_address0;
        end else begin
            ofm_buffer1_50_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_50_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_50_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_50_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_50_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer50_ce0;
        end else begin
            ofm_buffer1_50_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_50_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer50_ce1;
    end else begin
        ofm_buffer1_50_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_50_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer50_we0;
    end else begin
        ofm_buffer1_50_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_51_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_51_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_51_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer51_address0;
        end else begin
            ofm_buffer1_51_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_51_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_51_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_51_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_51_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer51_ce0;
        end else begin
            ofm_buffer1_51_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_51_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_51_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer51_ce1;
    end else begin
        ofm_buffer1_51_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_51_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer51_we0;
    end else begin
        ofm_buffer1_51_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_52_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_52_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_52_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer52_address0;
        end else begin
            ofm_buffer1_52_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_52_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_52_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_52_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_52_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer52_ce0;
        end else begin
            ofm_buffer1_52_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_52_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer52_ce1;
    end else begin
        ofm_buffer1_52_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_52_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer52_we0;
    end else begin
        ofm_buffer1_52_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_53_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_53_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_53_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer53_address0;
        end else begin
            ofm_buffer1_53_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_53_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_53_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_53_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_53_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer53_ce0;
        end else begin
            ofm_buffer1_53_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_53_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer53_ce1;
    end else begin
        ofm_buffer1_53_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_53_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer53_we0;
    end else begin
        ofm_buffer1_53_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_54_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_54_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_54_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer54_address0;
        end else begin
            ofm_buffer1_54_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_54_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_54_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_54_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_54_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer54_ce0;
        end else begin
            ofm_buffer1_54_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_54_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_54_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer54_ce1;
    end else begin
        ofm_buffer1_54_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_54_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer54_we0;
    end else begin
        ofm_buffer1_54_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_55_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_55_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_55_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer55_address0;
        end else begin
            ofm_buffer1_55_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_55_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_55_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_55_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_55_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer55_ce0;
        end else begin
            ofm_buffer1_55_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_55_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer55_ce1;
    end else begin
        ofm_buffer1_55_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_55_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer55_we0;
    end else begin
        ofm_buffer1_55_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_56_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_56_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_56_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer56_address0;
        end else begin
            ofm_buffer1_56_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_56_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_56_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_56_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_56_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer56_ce0;
        end else begin
            ofm_buffer1_56_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_56_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_56_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer56_ce1;
    end else begin
        ofm_buffer1_56_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_56_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer56_we0;
    end else begin
        ofm_buffer1_56_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_57_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_57_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_57_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer57_address0;
        end else begin
            ofm_buffer1_57_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_57_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_57_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_57_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_57_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer57_ce0;
        end else begin
            ofm_buffer1_57_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_57_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_57_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer57_ce1;
    end else begin
        ofm_buffer1_57_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_57_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer57_we0;
    end else begin
        ofm_buffer1_57_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_58_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_58_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_58_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer58_address0;
        end else begin
            ofm_buffer1_58_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_58_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_58_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_58_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_58_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer58_ce0;
        end else begin
            ofm_buffer1_58_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_58_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_58_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer58_ce1;
    end else begin
        ofm_buffer1_58_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_58_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer58_we0;
    end else begin
        ofm_buffer1_58_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_59_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_59_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_59_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer59_address0;
        end else begin
            ofm_buffer1_59_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_59_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_59_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_59_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_59_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer59_ce0;
        end else begin
            ofm_buffer1_59_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_59_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_59_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer59_ce1;
    end else begin
        ofm_buffer1_59_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_59_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer59_we0;
    end else begin
        ofm_buffer1_59_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_5_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_5_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_5_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer5_address0;
        end else begin
            ofm_buffer1_5_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_5_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_5_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_5_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer5_ce0;
        end else begin
            ofm_buffer1_5_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_5_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer5_ce1;
    end else begin
        ofm_buffer1_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_5_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer5_we0;
    end else begin
        ofm_buffer1_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_6_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_6_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_6_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer6_address0;
        end else begin
            ofm_buffer1_6_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_6_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_6_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_6_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer6_ce0;
        end else begin
            ofm_buffer1_6_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_6_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer6_ce1;
    end else begin
        ofm_buffer1_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_6_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer6_we0;
    end else begin
        ofm_buffer1_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_7_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_7_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_7_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer7_address0;
        end else begin
            ofm_buffer1_7_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_7_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_7_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_7_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer7_ce0;
        end else begin
            ofm_buffer1_7_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_7_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer7_ce1;
    end else begin
        ofm_buffer1_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_7_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer7_we0;
    end else begin
        ofm_buffer1_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_8_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_8_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_8_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer8_address0;
        end else begin
            ofm_buffer1_8_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_8_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_8_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_8_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer8_ce0;
        end else begin
            ofm_buffer1_8_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_8_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer8_ce1;
    end else begin
        ofm_buffer1_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_8_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer8_we0;
    end else begin
        ofm_buffer1_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_9_address0 = grp_write_back_output_reorg_fu_2168_output_buffer_9_address0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_9_address0 = grp_load_compute_wrapper_fu_1320_ofm_buffer9_address0;
        end else begin
            ofm_buffer1_9_address0 = 'bx;
        end
    end else begin
        ofm_buffer1_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((pingpongm_reg_1274 == 1'd1)) begin
            ofm_buffer1_9_ce0 = grp_write_back_output_reorg_fu_2168_output_buffer_9_ce0;
        end else if ((pingpongm_reg_1274 == 1'd0)) begin
            ofm_buffer1_9_ce0 = grp_load_compute_wrapper_fu_1320_ofm_buffer9_ce0;
        end else begin
            ofm_buffer1_9_ce0 = 1'b0;
        end
    end else begin
        ofm_buffer1_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_9_ce1 = grp_load_compute_wrapper_fu_1320_ofm_buffer9_ce1;
    end else begin
        ofm_buffer1_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpongm_reg_1274 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        ofm_buffer1_9_we0 = grp_load_compute_wrapper_fu_1320_ofm_buffer9_we0;
    end else begin
        ofm_buffer1_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        ofm_w_h_0_ack_out = 1'b1;
    end else begin
        ofm_w_h_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        pad_val_0_ack_out = 1'b1;
    end else begin
        pad_val_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        weight_0_ack_out = 1'b1;
    end else begin
        weight_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'd0 == LoadBias_reg_3114) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == DATA_BUS1_ARREADY) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((grp_FPGA_Acc_Pipeline_1_fu_1299_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln691_fu_2756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln694_fu_2780_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((icmp_ln698_fu_2813_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((1'b0 == ap_block_state27_on_subcall_done) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign IW_align_256b_1_fu_2612_p2 = (zext_ln665_fu_2608_p1 + 13'd2);

assign IW_align_256b_2_fu_2618_p3 = ((tmp_1_reg_3012[0:0] == 1'b1) ? IW_align_256b_1_fu_2612_p2 : zext_ln665_fu_2608_p1);

assign IW_align_256b_fu_2601_p3 = {{tmp_reg_3129}, {1'd0}};

assign InterSubBeta_fu_2681_p2 = ($signed(5'd19) - $signed(empty_162_reg_2997));

assign InterSubOutput_fu_2686_p2 = ($signed(5'd19) - $signed(empty_reg_2992));

assign IsNotConv_fu_2395_p1 = en_bits_0_data_reg[0:0];

assign K_1_fu_2691_p2 = ($signed(ksize_reg_3072) + $signed(8'd255));

assign NUM_cast_fu_2730_p1 = NUM_reg_3241;

assign OW_align_256b_1_fu_2636_p2 = (zext_ln669_fu_2632_p1 + 13'd2);

assign OW_align_256b_2_fu_2642_p3 = ((tmp_2_reg_3028[0:0] == 1'b1) ? OW_align_256b_1_fu_2636_p2 : zext_ln669_fu_2632_p1);

assign OW_align_256b_fu_2625_p3 = {{tmp_s_reg_3134}, {1'd0}};

assign TC_MIN_fu_2807_p3 = ((icmp_ln696_fu_2803_p2[0:0] == 1'b1) ? zext_ln651_reg_3211 : trunc_ln696_reg_3336);

assign TC_fu_2453_p1 = TRTC_0_data_reg[4:0];

assign TCol_fu_2529_p1 = TRowTCol_0_data_reg[15:0];

assign TM_MIN_fu_2873_p3 = ((icmp_ln700_fu_2869_p2[0:0] == 1'b1) ? zext_ln645_reg_3186 : sub_ln700_reg_3350);

assign TN_fu_2467_p1 = TMTN_0_data_reg[1:0];

assign TR_MIN_fu_2774_p3 = ((icmp_ln693_fu_2770_p2[0:0] == 1'b1) ? zext_ln648_1_reg_3200 : trunc_ln693_reg_3317);

assign WeightAddInputSubInter_fu_2569_p2 = (add_ln652_fu_2563_p2 + empty_160_fu_2383_p1);

assign add_ln549_fu_2696_p2 = (trunc_ln637_reg_3119 + 11'd1);

assign add_ln652_fu_2563_p2 = (empty_161_fu_2387_p1 + 5'd13);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_state19_on_subcall_done = ((grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_ap_done == 1'b0) & (1'd1 == LoadBias_reg_3114));
end

always @ (*) begin
    ap_block_state27_on_subcall_done = (((grp_write_back_output_reorg_fu_2168_ap_done == 1'b0) & (pingpongm_reg_1274 == 1'd1)) | ((grp_write_back_output_reorg_fu_2168_ap_done == 1'b0) & (pingpongm_reg_1274 == 1'd0)) | ((grp_load_compute_wrapper_fu_1320_ap_done == 1'b0) & (pingpongm_reg_1274 == 1'd1)) | ((grp_load_compute_wrapper_fu_1320_ap_done == 1'b0) & (pingpongm_reg_1274 == 1'd0)));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign empty_160_fu_2383_p1 = WeightQ_0_data_reg[4:0];

assign empty_161_fu_2387_p1 = InputQ_0_data_reg[4:0];

assign empty_162_fu_2391_p1 = BetaQ_0_data_reg[4:0];

assign empty_fu_2379_p1 = OutputQ_0_data_reg[4:0];

assign grp_FPGA_Acc_Pipeline_1_fu_1299_ap_start = grp_FPGA_Acc_Pipeline_1_fu_1299_ap_start_reg;

assign grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_ap_start = grp_FPGA_Acc_Pipeline_VITIS_LOOP_561_1_fu_1309_ap_start_reg;

assign grp_fu_2940_p0 = grp_fu_2940_p00;

assign grp_fu_2940_p00 = OW_align_256b_2_fu_2642_p3;

assign grp_fu_2940_p1 = grp_fu_2940_p10;

assign grp_fu_2940_p10 = ofm_h_reg_3033;

assign grp_fu_2946_p0 = grp_fu_2946_p00;

assign grp_fu_2946_p00 = IW_align_256b_2_fu_2618_p3;

assign grp_fu_2946_p1 = grp_fu_2946_p10;

assign grp_fu_2946_p10 = ifm_h_reg_3017;

assign grp_load_compute_wrapper_fu_1320_ap_start = grp_load_compute_wrapper_fu_1320_ap_start_reg;

assign grp_write_back_output_reorg_fu_2168_IsNL = IsReLU_reg_3109;

assign grp_write_back_output_reorg_fu_2168_ap_start = grp_write_back_output_reorg_fu_2168_ap_start_reg;

assign grp_write_back_output_reorg_fu_2168_enable = write_flag_reg_3366;

assign icmp_ln691_fu_2756_p2 = (($signed(tr_fu_1092) < $signed(zext_ln643_reg_3180)) ? 1'b1 : 1'b0);

assign icmp_ln693_fu_2770_p2 = (($signed(zext_ln647_reg_3194) < $signed(sub_ln693_reg_3312)) ? 1'b1 : 1'b0);

assign icmp_ln694_fu_2780_p2 = (($signed(tc_reg_1250) < $signed(zext_ln642_reg_3174)) ? 1'b1 : 1'b0);

assign icmp_ln696_fu_2803_p2 = (($signed(zext_ln648_reg_3205) < $signed(sub_ln696_reg_3331)) ? 1'b1 : 1'b0);

assign icmp_ln698_fu_2813_p2 = (($signed(tm_reg_1262) < $signed(OFM_num_bound_read_reg_2967)) ? 1'b1 : 1'b0);

assign icmp_ln700_fu_2869_p2 = (($signed(zext_ln645_reg_3186) < $signed(sub_ln700_reg_3350)) ? 1'b1 : 1'b0);

assign icmp_ln702_1_fu_2834_p2 = (($signed(tm_reg_1262) < $signed(mLoops_a1xTM_read_reg_2957)) ? 1'b1 : 1'b0);

assign icmp_ln702_fu_2828_p2 = (($signed(tm_reg_1262) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln703_fu_2845_p2 = (($signed(tm_reg_1262) > $signed(zext_ln645_reg_3186)) ? 1'b1 : 1'b0);

assign ifm_h_fu_2417_p1 = ifm_w_h_0_data_reg[11:0];

assign input_flag_fu_2823_p2 = (($signed(tm_reg_1262) < $signed(mLoopsxTM_read_reg_2962)) ? 1'b1 : 1'b0);

assign ltype_fu_2515_p1 = k_s_pad_ltype_0_data_reg[7:0];

assign ofm_h_fu_2439_p1 = ofm_w_h_0_data_reg[11:0];

assign ofm_num_fu_2481_p1 = iofm_num_0_data_reg[11:0];

assign p_cast_cast_fu_2720_p1 = $signed(p_cast_reg_3247);

assign process_flag_fu_2839_p2 = (icmp_ln702_fu_2828_p2 & icmp_ln702_1_fu_2834_p2);

assign sub_ln693_fu_2761_p2 = (zext_ln643_reg_3180 - tr_fu_1092);

assign sub_ln696_fu_2785_p2 = (zext_ln642_reg_3174 - tc_reg_1250);

assign sub_ln700_fu_2818_p2 = (zext_ln636_reg_3169 - tm_reg_1262);

assign tc_6_fu_2864_p2 = (zext_ln648_reg_3205 + tc_reg_1250);

assign tm_3_fu_2935_p2 = (zext_ln645_reg_3186 + tm_reg_1262);

assign tmp_256b_0_fu_2734_p1 = local_buf_1_q0[15:0];

assign tr_7_fu_2794_p2 = (zext_ln647_reg_3194 + tr_fu_1092);

assign trunc_ln637_fu_2559_p1 = iofm_num_0_data_reg[10:0];

assign trunc_ln684_1_fu_2861_p1 = tr_6_reg_3304[15:0];

assign trunc_ln684_fu_2857_p1 = tc_reg_1250[15:0];

assign trunc_ln693_fu_2766_p1 = sub_ln693_fu_2761_p2[7:0];

assign trunc_ln696_fu_2790_p1 = sub_ln696_fu_2785_p2[7:0];

assign trunc_ln711_1_fu_2900_p1 = TM_MIN0_0_1_fu_1104[7:0];

assign trunc_ln711_fu_2895_p1 = m0_0_1_fu_1096[15:0];

assign trunc_ln720_1_fu_2910_p1 = TM_MIN1_0_1_fu_1108[7:0];

assign trunc_ln720_fu_2905_p1 = m1_0_1_fu_1100[15:0];

assign write_flag_fu_2850_p3 = ((IsNotConv_reg_3002[0:0] == 1'b1) ? icmp_ln703_fu_2845_p2 : icmp_ln702_fu_2828_p2);

assign zext_ln636_fu_2657_p1 = ofm_num_reg_3066;

assign zext_ln642_fu_2660_p1 = ofm_w_reg_3023;

assign zext_ln643_fu_2663_p1 = ofm_h_reg_3033;

assign zext_ln645_fu_2666_p1 = TM_reg_3051;

assign zext_ln647_fu_2669_p1 = TR_reg_3039;

assign zext_ln648_1_fu_2672_p1 = TR_reg_3039;

assign zext_ln648_fu_2675_p1 = TC_reg_3045;

assign zext_ln651_fu_2678_p1 = TC_reg_3045;

assign zext_ln665_fu_2608_p1 = IW_align_256b_fu_2601_p3;

assign zext_ln669_fu_2632_p1 = OW_align_256b_fu_2625_p3;

always @ (posedge ap_clk) begin
    IW_align_256b_2_reg_3149[0] <= 1'b0;
    OW_align_256b_2_reg_3154[0] <= 1'b0;
    zext_ln636_reg_3169[31:12] <= 20'b00000000000000000000;
    zext_ln642_reg_3174[31:12] <= 20'b00000000000000000000;
    zext_ln643_reg_3180[31:12] <= 20'b00000000000000000000;
    zext_ln645_reg_3186[31:6] <= 26'b00000000000000000000000000;
    zext_ln647_reg_3194[31:5] <= 27'b000000000000000000000000000;
    zext_ln648_1_reg_3200[7:5] <= 3'b000;
    zext_ln648_reg_3205[31:5] <= 27'b000000000000000000000000000;
    zext_ln651_reg_3211[7:5] <= 3'b000;
end

endmodule //FPGA_Acc
